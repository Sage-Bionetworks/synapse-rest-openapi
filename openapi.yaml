openapi: 3.0.1
info:
  title: Platform Repository Service
  description: <h1>Platform Repository Service</h1><p>Sage Bionetworks Platform</p>
  version: develop-SNAPSHOT
servers:
- url: /rest
tags:
- name: AccessApprovalController
  description: The Access Approval services manage the fulfillment of Access Requirements,
    on a per-user basis.
- name: AccessRequirementController
  description: |-
    These services manage the Access Requirements/Restrictions (ARs) which may be placed on Entities,
    or Teams.
- name: ActivityController
  description: "."
- name: AdministrationController
  description: Since this controller is for internal use only we removed the ControllerInfo
    annotation.
- name: AsynchronousJobController
  description: |-
    This is a generic set of services that provides support for both launching
    asynchronous jobs and monitoring the progress of jobs.
- name: CertifiedUserController
  description: To become a Synapse Certified User you must pass a test.
- name: ChallengeController
  description: |-
    A Challenge is a special object that supplements a project, providing additional features
    specific to challenges.
- name: DataAccessController
  description: "."
- name: DiscussionController
  description: "."
- name: DockerAuthorizationController
  description: These services allow Synapse to act as an authorization service for
    a Docker Registry.
- name: DockerCommitController
  description: These services relate to the 'commits' to Docker repositories.
- name: DockerRegistryEventController
  description: These services process events from the Docker Registry.
- name: DoiController
  description: Provides REST APIs for managing Synapse DOIs.
- name: EntityBundleController
  description: "."
- name: EntityBundleV2Controller
  description: "."
- name: EntityController
  description: "."
- name: EvaluationController
  description: "."
- name: FormController
  description: Collection of APIs from managing and submitting form data.
- name: HealthCheckController
- name: JsonSchemaController
  description: |-
    This set of services provide project designers with tools to define their own
    schemas to control and validate metadata applied to Projects, Folders, and
    Files.
- name: LogController
  description: https://sagebionetworks.
- name: MembershipInvitationController
  description: |-
    The Membership Invitation Services create, retrieve and delete
    membership invitations.
- name: MembershipRequestController
  description: |-
    The Membership Request Services create, retrieve and delete
    membership requests.
- name: MessageController
  description: "."
- name: MigrationController
  description: Controller for Migrating data between stacks.
- name: PrincipalController
  description: A.
- name: ProjectSettingsController
  description: The project settings services provide configuration options that can
    be applied to projects.
- name: SearchController
  description: Search for Entities on Synapse.
- name: StatisticsController
  description: Services that expose statistics computed by the backend.
- name: StorageReportController
  description: Provides REST APIs for generating Storage Reports.
- name: SubscriptionController
  description: "."
- name: SynapseVersionInfoController
- name: TableController
  description: "."
- name: TeamController
  description: Teams are groups of users.
- name: TrashController
  description: The recycle bin (or trash can) is the special folder that holds the
    deleted entities for users.
- name: UserGroupController
- name: UserProfileController
  description: Every Synapse user has an associated.
- name: V2WikiController
  description: "."
- name: VerificationController
  description: |-
    Identity verification is a service offered by the Synapse Access and Compliance Team
    to add an additional layer of legitimacy to a user account, beyond the basic
    requirements for creating an account in Synapse.
- name: WikiController
  description: "."
paths:
  /docker/v1/bearerToken:
    get:
      tags:
      - DockerAuthorizationController
      summary: Authorize Docker operation.
      description: Authorize Docker operation.  This service is called by the Docker
        client only and is not for general use.
      operationId: authorizeDockerAccess
      parameters:
      - name: Synapse-Authorization
        in: header
        schema:
          type: string
      - name: scope
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: service
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DockerAuthorizationToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DockerAuthorizationToken'
  /dockerRegistryListener/v1/events:
    post:
      tags:
      - DockerRegistryEventController
      summary: Post a list of Docker registry events (pushes and pulls).
      description: |-
        Post a list of Docker registry events (pushes and pulls).  Synapse will process
        accordingly.  The main purpose is to create managed Docker repositories and/or
        add new commits (tag/digest pairs) when a push occurs.
      operationId: registryEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_DockerRegistryEventList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_DockerRegistryEventList'
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/REST/resources:
    get:
      tags:
      - EntityController
      summary: Get the list of Resource names for all Resources of Synapse.
      description: |-
        Get the list of Resource names for all Resources of Synapse. This includes
        The full names of each Entity type and Model object of the API.
        <p>
        The resulting names can be used to get the full schema or effective schema of
        each object (see : <a href="${GET.REST.resources.schema}">GET
        /REST/resources/schema</a> and
        <a href="${GET.REST.resources.effectiveSchema}">GET
        /REST/resources/effectiveSchema</a>)
        </p>
      operationId: getRESTResources
      requestBody:
        description: |-
          Get the list of Resource names for all Resources of Synapse. This includes
          The full names of each Entity type and Model object of the API.
          <p>
          The resulting names can be used to get the full schema or effective schema of
          each object (see : <a href="${GET.REST.resources.schema}">GET
          /REST/resources/schema</a> and
          <a href="${GET.REST.resources.effectiveSchema}">GET
          /REST/resources/effectiveSchema</a>)
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_RestResourceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_RestResourceList'
      x-codegen-request-body-name: body
  /repo/v1/REST/resources/effectiveSchema:
    get:
      tags:
      - EntityController
      summary: Get the effective schema of a resource using its name.
      description: |-
        Get the effective schema of a resource using its name.
        <p>
        Many of the Synapse resource are composition objects and one must navigate
        various interfaces of an object to fully digest it. This method provides a
        flattened (or effective) schema for the requested resource.
        </p>
      operationId: getEffectiveSchema
      parameters:
      - name: resourceId
        in: query
        description: |-
          The full name of the resource (see
          <a href="${GET.REST.resources}">GET /REST/resources</a> for
          the full list of names).
        required: true
        schema:
          type: string
      requestBody:
        description: |-
          Get the effective schema of a resource using its name.
          <p>
          Many of the Synapse resource are composition objects and one must navigate
          various interfaces of an object to fully digest it. This method provides a
          flattened (or effective) schema for the requested resource.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ObjectSchema'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ObjectSchema'
      x-codegen-request-body-name: body
  /repo/v1/REST/resources/schema:
    get:
      tags:
      - EntityController
      summary: Get the full schema of a REST resource.
      description: |-
        Get the full schema of a REST resource.
        <p>
        Many of the Synapse resource are composition objects and the various
        interfaces must be navigated to fully digest the object. The schema objects
        provided by this method include this composition. If the full composition is
        not needed, then a flattened or effective schema can be retrieved with the
        <a href="${GET.REST.resources.effectiveSchema}">GET
        /REST/resources/effectiveSchema</a> method.
        </p>
      operationId: getFullSchema
      parameters:
      - name: resourceId
        in: query
        description: |-
          The full name of the resource (see
          <a href="${GET.REST.resources}">GET /REST/resources</a> for
          the full list of names).
        required: true
        schema:
          type: string
      requestBody:
        description: |-
          Get the full schema of a REST resource.
          <p>
          Many of the Synapse resource are composition objects and the various
          interfaces must be navigated to fully digest the object. The schema objects
          provided by this method include this composition. If the full composition is
          not needed, then a flattened or effective schema can be retrieved with the
          <a href="${GET.REST.resources.effectiveSchema}">GET
          /REST/resources/effectiveSchema</a> method.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ObjectSchema'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ObjectSchema'
      x-codegen-request-body-name: body
  /repo/v1/accessApproval:
    post:
      tags:
      - AccessApprovalController
      summary: Create an Access Approval, thereby fulfilling an Access Requirement
        for a given user.
      description: |-
        Create an Access Approval, thereby fulfilling an Access Requirement for a given user.
        Self-signed Access Approvals may be generated by the user being approved.  ACT
        Access Approvals may be generated only by the Synapse Access and Compliance Team (ACT).
        Since an Access Requirement may apply to multiple entities, fulfilling an Access Requirement
        provides access to all entities restricted by the fulfilled requirement.
      operationId: createAccessApproval
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the Access Approval to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessApproval'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessApproval'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessApproval'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessApproval'
      x-codegen-request-body-name: body
    delete:
      tags:
      - AccessApprovalController
      summary: Revoke all Access Approvals an accessor may have for a given Access
        Requirement.
      description: |-
        Revoke all Access Approvals an accessor may have for a given Access Requirement.
        This service is only available to the ACT.
        Note: requirementId must be the ID of an
        <a href="${org.sagebionetworks.repo.model.ACTAccessRequirement}">ACT AccessRequirement</a>.
      operationId: revokeAccessApprovals
      parameters:
      - name: accessorId
        in: query
        description: '- The user whose access is being revoked'
        required: true
        schema:
          type: string
      - name: requirementId
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/accessApproval/group:
    post:
      tags:
      - AccessApprovalController
      summary: Retrieving a page of AccessorGroup.
      description: |-
        Retrieving a page of AccessorGroup.
        This service is only available for ACT.
        ACT can filter on AccessRequirementId, submitterId, and expiredOn by setting
        the associated fields in AccessorGroupRequest.
      operationId: listAccessorGroup
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessorGroupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessorGroupRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessorGroupResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessorGroupResponse'
      x-codegen-request-body-name: body
  /repo/v1/accessApproval/group/revoke:
    put:
      tags:
      - AccessApprovalController
      summary: Revoke a group of accessors.
      description: |-
        Revoke a group of accessors.
        Only ACT can perform this action.
      operationId: revokeGroup
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessorGroupRevokeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessorGroupRevokeRequest'
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/accessApproval/information:
    post:
      tags:
      - AccessApprovalController
      summary: Retrieve a batch of AccessApprovalInfo for a single user.
      description: Retrieve a batch of AccessApprovalInfo for a single user.
      operationId: getBatchAccessApprovalInfo
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_BatchAccessApprovalInfoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_BatchAccessApprovalInfoRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_BatchAccessApprovalInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_BatchAccessApprovalInfoResponse'
      x-codegen-request-body-name: body
  /repo/v1/accessApproval/notifications:
    post:
      tags:
      - AccessApprovalController
      summary: Fetches the notifications sent for an access requirement and a list
        of recipients.
      description: |-
        Fetches the notifications sent for an access requirement and a list of recipients.
        This service is only available for ACT.
      operationId: listNotifications
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessApprovalNotificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessApprovalNotificationRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessApprovalNotificationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessApprovalNotificationResponse'
      x-codegen-request-body-name: body
  /repo/v1/accessApproval/{approvalId}:
    get:
      tags:
      - AccessApprovalController
      summary: Retrieving an AccessApproval given its ID.
      description: Retrieving an AccessApproval given its ID.
      operationId: getAccessApproval
      parameters:
      - name: approvalId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessApproval'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessApproval'
    delete:
      tags:
      - AccessApprovalController
      summary: Delete a selected Access Approval.
      description: Delete a selected Access Approval.  This service is only available
        to the ACT.
      operationId: deleteAccessApproval
      parameters:
      - name: approvalId
        in: path
        description: the approval to delete
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/accessRequirement:
    post:
      tags:
      - AccessRequirementController
      summary: Add an Access Requirement to an Entity, or Team.
      description: |-
        Add an Access Requirement to an Entity, or Team.
        This service may only be used by the Synapse Access and Compliance Team.
      operationId: createAccessRequirement
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the Access Requirement to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessRequirement'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessRequirement'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
      x-codegen-request-body-name: body
  /repo/v1/accessRequirement/conversion:
    put:
      tags:
      - AccessRequirementController
      summary: Convert an ACTAccessRequirement to a ManagedACTAccessRequirement.
      description: |-
        Convert an ACTAccessRequirement to a ManagedACTAccessRequirement.
        Only ACT member can perform this action.
      operationId: convertAccessRequirement
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessRequirementConversionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessRequirementConversionRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
      x-codegen-request-body-name: body
  /repo/v1/accessRequirement/{requirementId}:
    get:
      tags:
      - AccessRequirementController
      summary: Get an Access Requirement to an Entity, or Team based on its ID.
      description: Get an Access Requirement to an Entity, or Team based on its ID.
      operationId: getAccessRequirement
      parameters:
      - name: requirementId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
    put:
      tags:
      - AccessRequirementController
      summary: Modify an existing Access Requirement.
      description: |-
        Modify an existing Access Requirement.
        This service may only be used by the Synapse Access and Compliance Team.
      operationId: updateAccessRequirement
      parameters:
      - name: requirementId
        in: path
        description: the ID of the Access Requirement to be modified.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The modified Access Requirement.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessRequirement'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessRequirement'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
      x-codegen-request-body-name: body
    delete:
      tags:
      - AccessRequirementController
      summary: Delete an Access Requirement.
      description: |-
        Delete an Access Requirement.
        This service may only be used by the Synapse Access and Compliance Team.
      operationId: deleteAccessRequirements
      parameters:
      - name: requirementId
        in: path
        description: the ID of the requirement to delete
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/accessRequirement/{requirementId}/approvedSubmissionInfo:
    post:
      tags:
      - DataAccessController
      summary: |-
        Return the research project info for approved data access submissions,
        ordered by submission modified-on date, ascending.
      description: |-
        Return the research project info for approved data access submissions,
        ordered by submission modified-on date, ascending
      operationId: listInfoForApprovedSubmissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SubmissionInfoPageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SubmissionInfoPageRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubmissionInfoPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubmissionInfoPage'
      x-codegen-request-body-name: body
  /repo/v1/accessRequirement/{requirementId}/dataAccessRequestForUpdate:
    get:
      tags:
      - DataAccessController
      summary: Retrieve the Request for update.
      description: |-
        Retrieve the Request for update.
        If one does not exist, an Request with some re-filled information is returned.
        If a submission associated with the request is approved, and the requirement
        requires renewal, a refilled Renewal is returned.
        Only the owner of the request can perform this action.
      operationId: getRequestForUpdate
      parameters:
      - name: requirementId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_RequestInterface'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_RequestInterface'
  /repo/v1/accessRequirement/{requirementId}/researchProjectForUpdate:
    get:
      tags:
      - DataAccessController
      summary: Retrieve an existing ResearchProject that the user owns.
      description: |-
        Retrieve an existing ResearchProject that the user owns.
        If none exists, a ResearchProject with some re-filled information is returned to the user.
        Only the owner of the researchProject can perform this action.
      operationId: getUserOwnResearchProjectForUpdate
      parameters:
      - name: requirementId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ResearchProject'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ResearchProject'
  /repo/v1/accessRequirement/{requirementId}/status:
    get:
      tags:
      - DataAccessController
      summary: Retrieve an access requirement status for a given access requirement
        ID.
      description: Retrieve an access requirement status for a given access requirement
        ID.
      operationId: getAccessRequirementStatus
      parameters:
      - name: requirementId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessRequirementStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessRequirementStatus'
  /repo/v1/accessRequirement/{requirementId}/subjects:
    get:
      tags:
      - AccessRequirementController
      summary: Retrieve a page of subjects for a given Access Requirement ID.
      description: Retrieve a page of subjects for a given Access Requirement ID.
      operationId: getSubjects
      parameters:
      - name: requirementId
        in: path
        required: true
        schema:
          type: string
      - name: nextPageToken
        in: query
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_RestrictableObjectDescriptorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_RestrictableObjectDescriptorResponse'
  /repo/v1/accessRequirement/{requirementId}/submissions:
    post:
      tags:
      - DataAccessController
      summary: Retrieve a list of submissions for a given access requirement ID.
      description: |-
        Retrieve a list of submissions for a given access requirement ID.
        Only ACT member can perform this action.
      operationId: listSubmissions
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SubmissionPageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SubmissionPageRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubmissionPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubmissionPage'
      x-codegen-request-body-name: body
  /repo/v1/access_requirement/{ownerId}/wiki:
    post:
      tags:
      - WikiController
      summary: Create a WikiPage with an Access Requirement as an owner.
      description: |-
        Create a WikiPage with an Access Requirement as an owner.

        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CREATE</a> permission on the owner.
        </p>
        <p>
        If the passed WikiPage is a root (parentWikiId = null) and the owner
        already has a root WikiPage, an error will be returned.
        </p>
      operationId: createAccessRequirementWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owner Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user's id.
        required: true
        schema:
          type: number
      requestBody:
        description: The WikiPage to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
      x-codegen-request-body-name: body
  /repo/v1/access_requirement/{ownerId}/wiki/{wikiId}:
    get:
      tags:
      - WikiController
      summary: Get a specific WikiPage of of an Access Requirement.
      description: |-
        Get a specific WikiPage of of an Access Requirement.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getAccessRequirementWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        description: When included returns a specific version of a wiki.
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
    put:
      tags:
      - WikiController
      summary: Update a specific WikiPage of an Entity.
      description: |-
        Update a specific WikiPage of an Entity.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is request, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: updateAccessRequirementPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
      x-codegen-request-body-name: body
  /repo/v1/access_requirement/{ownerId}/wiki2:
    get:
      tags:
      - V2WikiController
      summary: Get the root WikiPage for an AccessRequirement.
      description: Get the root WikiPage for an AccessRequirement.
      operationId: getAccessRequirementRootWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning AccessRequirement.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
    post:
      tags:
      - V2WikiController
      summary: Create a WikiPage with an AccessRequirement as an owner.
      description: |-
        Create a WikiPage with an AccessRequirement as an owner.

        <p>
        Note: The caller must be a member of the Synapse Access and Compliance Team.
        </p>
        <p>
        If the passed WikiPage is a root (parentWikiId = null) and the owner
        already has a root WikiPage, an error will be returned.
        </p>
      operationId: createAccessRequirementWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owner AccessRequirement.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user's id.
        required: true
        schema:
          type: number
      requestBody:
        description: The WikiPage to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
      x-codegen-request-body-name: body
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}:
    get:
      tags:
      - V2WikiController
      summary: Get a specific WikiPage of an Access Requirement.
      description: Get a specific WikiPage of an Access Requirement.
      operationId: getAccessRequirementWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
    put:
      tags:
      - V2WikiController
      summary: Update a specific WikiPage of an Access Requirement.
      description: |-
        Update a specific WikiPage of an Access Requirement. This adds a new entry
        to the history of changes made to this specific WikiPage.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is requested, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be a member of the Synapse Access and Compliance Team.
        </p>
      operationId: updateAcessRequirementWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
      x-codegen-request-body-name: body
    delete:
      tags:
      - V2WikiController
      summary: Delete a specific WikiPage of an Access Requirement.
      description: |-
        Delete a specific WikiPage of an Access Requirement.
        <p>
        Note: When a WikiPage is deleted, the delete will cascade to all children
        WikiPages (recursively) of the deleted WikiPage.
        </p>
        <p>
        Note: The caller must be a member of the Synapse Access and Compliance Team.
        </p>
      operationId: deleteAccessRequirementWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachment:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
      description: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
      operationId: getAccessRequirementWikiAttachmentFile
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">GET
          /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles</a> method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmenthandles:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Access Requirement.
      description: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Access Requirement. This list will include Previews if
        they exist and will provide information about file sizes, content types
        and names.
      operationId: getAccessRequirementWikiAttachmenthHandles
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmentpreview:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
      description: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
      operationId: getAccessRequirementWikiAttachmenPreviewFile
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">GET
          /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles</a> method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: Success
          content: {}
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/markdown:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download the markdown file for a given
        WikiPage.
      description: |-
        Get a URL that can be used to download the markdown file for a given
        WikiPage.

        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
      operationId: getAccessRequirementWikiMarkdownFile
      parameters:
      - name: ownerId
        in: path
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/wikihistory:
    get:
      tags:
      - V2WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot}">V2WikiHistorySnapshot</a>
        that belong to a specific WikiPage, which belong to the given owner Access Requirement. The resulting list
        can be used to display a timeline of changes to the specific WikiPage for this owner.
        The first V2WikiHistorySnapshot describes the most recent change or update to the WikiPage.
      operationId: getAccessRequirementWikiHistory
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10.
        required: true
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHistorySnapshot'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHistorySnapshot'
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/{wikiVersion}:
    put:
      tags:
      - V2WikiController
      summary: For a specific WikiPage of an Access Requirement, restore a version
        of the WikiPage's content.
      description: |-
        For a specific WikiPage of an Access Requirement, restore a version of the WikiPage's content.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is requested, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be a member of the Synapse Access and Compliance Team.
        </p>
      operationId: restoreAccessRequirementWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: wikiVersion
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
  /repo/v1/access_requirement/{ownerId}/wikiheadertree2:
    get:
      tags:
      - V2WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader}">V2WikiHeaders</a>
        that belong to the given owner Access Requirement. The resulting list can be used to
        build a tree of the WikiPages for this owner. The first WikiHeader will
        be for the root WikiPage (parentWikiId = null).
      operationId: getAccessRequirementWikiHeaderTree
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10.
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHeader'
  /repo/v1/access_requirement/{ownerId}/wikikey:
    get:
      tags:
      - WikiController
      summary: Get the root WikiPageKey for an Access Requirement.
      description: |-
        Get the root WikiPageKey for an Access Requirement.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getAccessRequirmentRootWikiKey
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Access Requirement.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPageKey'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPageKey'
  /repo/v1/account:
    post:
      tags:
      - PrincipalController
      summary: This service completes the email validation process for setting up
        a new account.
      description: |-
        This service completes the email validation process for setting up a new account. The client must provide the
        validation token which was sent by email. The request will be rejected if the validation token is missing or
        invalid or if the requested user name is not available. After successful account creation the user is logged in
        and a session token returned to the client.
      operationId: createNewAccount
      requestBody:
        description: user's first name, last name, requested user name, password,
          and validation token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccountSetupInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccountSetupInfo'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Session'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Session'
      x-codegen-request-body-name: body
  /repo/v1/account/emailValidation:
    post:
      tags:
      - PrincipalController
      summary: |-
        This service starts the process of creating a new account by sending a 'validation email' message to the provided
        email address.
      description: |-
        This service starts the process of creating a new account by sending a 'validation email' message to the provided
        email address. The email contains a link back to the application calling the service which the user follows to
        complete the account creation process.
      operationId: newAccountEmailValidation
      parameters:
      - name: portalEndpoint
        in: query
        description: |-
          the beginning of the URL included in the email verification message. When concatenated with
          a list of ampersand (&) separated request parameters, must become a well formed URL. The concatenated
          string must be included with the <a href="${POST.account}">POST /account</a> request.
        required: true
        schema:
          type: string
      requestBody:
        description: the first name, last name and email address for the user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_NewUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_NewUser'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/account/{id}/emailValidation:
    post:
      tags:
      - PrincipalController
      summary: |-
        This service starts the process of adding a new email address to an existing account by sending a 'validation
        email' message to the provided email address.
      description: |-
        This service starts the process of adding a new email address to an existing account by sending a 'validation
        email' message to the provided email address. The email contains a link back to the application calling the
        service which the user follows to complete the process
      operationId: additionalEmailValidation
      parameters:
      - name: id
        in: path
        description: |-
          the ID of the user account to which the email address is to be added. Must match the ID of the user
          making the request.
        required: true
        schema:
          type: string
      - name: portalEndpoint
        in: query
        description: |-
          the beginning of the URL included in the email verification message. When concatenated with
          a list of ampersand (&) separated request parameters, must become a well formed URL. The concatenated
          string must be included with the <a href="${POST.email}">POST /email</a> request.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the email address to be added to the account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Username'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Username'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/activity:
    post:
      tags:
      - ActivityController
      summary: Create a new.
      description: |-
        Create a new <a
        href="${org.sagebionetworks.repo.model.provenance.Activity}"
        >Activity</a>. If the passed <a
        href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
        object contains a <a
        href="${org.sagebionetworks.repo.model.provenance.Used}" >Used</a> array,
        you must set the concreteType field of each Used subclass.
        <p>
        Access Control: READ access is granted to those users who can see a single Entity that
        was generated by this Activity.
        </p>
      operationId: createActivity
      parameters:
      - name: userId
        in: query
        description: The user that is doing the create.
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Create a new <a
          href="${org.sagebionetworks.repo.model.provenance.Activity}"
          >Activity</a>. If the passed <a
          href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
          object contains a <a
          href="${org.sagebionetworks.repo.model.provenance.Used}" >Used</a> array,
          you must set the concreteType field of each Used subclass.
          <p>
          Access Control: READ access is granted to those users who can see a single Entity that
          was generated by this Activity.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Activity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Activity'
      x-codegen-request-body-name: body
  /repo/v1/activity/{id}:
    get:
      tags:
      - ActivityController
      summary: Get an existing.
      description: |-
        Get an existing <a
        href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
        <p>
        <b>Access Control</b>: Granted to those users who can see a single Entity
        that was generated by this Activity.
        </p>
      operationId: getActivity
      parameters:
      - name: id
        in: path
        description: The ID of the activity to fetch.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Get an existing <a
          href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
          <p>
          <b>Access Control</b>: Granted to those users who can see a single Entity
          that was generated by this Activity.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Activity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Activity'
      x-codegen-request-body-name: body
    put:
      tags:
      - ActivityController
      summary: Update an.
      description: |-
        Update an <a
        href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
        <p><b>Access Control</b>: You must be the creator of the Activity to modify it.</p>
      operationId: updateActivity
      parameters:
      - name: id
        in: path
        description: The id of the activity to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user that is doing the update.
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Update an <a
          href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
          <p><b>Access Control</b>: You must be the creator of the Activity to modify it.</p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Activity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Activity'
      x-codegen-request-body-name: body
    delete:
      tags:
      - ActivityController
      summary: Delete an.
      description: |-
        Delete an <a
        href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
        <p><b>Access Control</b>: You must be the creator of the Activity to delete it.</p>
      operationId: deleteActivity
      parameters:
      - name: id
        in: path
        description: The id of activity to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user that is deleting the activity.
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Delete an <a
          href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
          <p><b>Access Control</b>: You must be the creator of the Activity to delete it.</p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/activity/{id}/generated:
    get:
      tags:
      - ActivityController
      summary: "."
      description: |-
        <p>
        Get the <a href="${org.sagebionetworks.repo.model.Entity}">Entities</a>
        that were generatedBy an <a
        href="${org.sagebionetworks.repo.model.provenance.Activity}"
        >Activity</a>. Returns a <a
        href="${org.sagebionetworks.reflection.model.PaginatedResults}">
        PaginatedResults</a> of <a
        href="${org.sagebionetworks.repo.model.Reference}">Reference</a> objects.
        </p>
        <p>
        <b>Access Control</b>: This service will return References to all generatedBy
        Entities, regardless of whether you have access to resolve them into full
        Entity objects.
        </p>
      operationId: getEntitiesGeneratedBy
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        schema:
          type: integer
          default: 0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfReference'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfReference'
  /repo/v1/admin/asynchronous/job:
    post:
      tags:
      - AdministrationController
      operationId: launchNewJob
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AsyncMigrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AsyncMigrationRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
      x-codegen-request-body-name: body
  /repo/v1/admin/asynchronous/job/{jobId}:
    get:
      tags:
      - AdministrationController
      operationId: getJobStatus
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
  /repo/v1/admin/certifiedUserTestResponse:
    get:
      tags:
      - CertifiedUserController
      summary: Get the Certified User test responses in the system, optionally filtered
        by the one who took the test.
      description: |-
        Get the Certified User test responses in the system, optionally filtered by the one who took the test.
        Note:  This service is available to Synapse administrators only.
      operationId: getQuizResponses
      parameters:
      - name: limit
        in: query
        description: Limits the size of the page returned. For example, a page size
          of 10 requires limit = 10.
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would be at offset
          = 10.
        schema:
          type: integer
          default: 0
      - name: principalId
        in: query
        description: If specified, only retrieve the quiz for this user, if it exists.
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfQuizResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfQuizResponse'
  /repo/v1/admin/certifiedUserTestResponse/{id}:
    delete:
      tags:
      - CertifiedUserController
      summary: Delete a test response.
      description: 'Delete a test response.  Note:  This service is available to Synapse
        administrators only.'
      operationId: deleteQuizResponse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/admin/doi/clear:
    delete:
      tags:
      - AdministrationController
      summary: Clears the Synapse DOI table.
      description: Clears the Synapse DOI table.
      operationId: clearDoi
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/admin/entity/{id}/table/rebuild:
    get:
      tags:
      - AdministrationController
      operationId: rebuildTable
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/admin/evaluation/submission/{subId}/contributor:
    post:
      tags:
      - EvaluationController
      summary: Add a contributor to an existing Submission.
      description: Add a contributor to an existing Submission.  This service is available
        to administrators only.
      operationId: addSubmissionContributor
      parameters:
      - name: subId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SubmissionContributor'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SubmissionContributor'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubmissionContributor'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubmissionContributor'
      x-codegen-request-body-name: body
  /repo/v1/admin/feature/{feature}/status:
    get:
      tags:
      - AdministrationController
      summary: Fetches the status of the given feature.
      description: Fetches the status of the given feature
      operationId: getFeatureStatus
      parameters:
      - name: feature
        in: path
        required: true
        schema:
          type: string
          enum:
          - DATA_ACCESS_AUTO_REVOCATION
          - DATA_ACCESS_NOTIFICATIONS
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FeatureStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FeatureStatus'
    post:
      tags:
      - AdministrationController
      summary: Sets the status for the given feature.
      description: Sets the status for the given feature
      operationId: setFeatureStatus
      parameters:
      - name: feature
        in: path
        required: true
        schema:
          type: string
          enum:
          - DATA_ACCESS_AUTO_REVOCATION
          - DATA_ACCESS_NOTIFICATIONS
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_FeatureStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_FeatureStatus'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FeatureStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FeatureStatus'
      x-codegen-request-body-name: body
  /repo/v1/admin/id/generator/export:
    get:
      tags:
      - AdministrationController
      summary: Create an export script for the ID generator database.
      description: Create an export script for the ID generator database.  The script
        can be used to setup a new ID generator.
      operationId: createIdGeneratorExport
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_IdGeneratorExport'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_IdGeneratorExport'
  /repo/v1/admin/locks:
    delete:
      tags:
      - AdministrationController
      operationId: clearLocks
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/admin/message/{messageId}:
    delete:
      tags:
      - MessageController
      summary: Deletes a message.
      description: Deletes a message.  Only accessible to administrators.
      operationId: deleteMessage
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/admin/messages:
    get:
      tags:
      - AdministrationController
      operationId: listChangeMessages
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: number
      - name: startChangeNumber
        in: query
        required: true
        schema:
          type: number
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ChangeMessages'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ChangeMessages'
  /repo/v1/admin/messages/createOrUpdate:
    post:
      tags:
      - AdministrationController
      summary: Create or update change messages.
      description: Create or update change messages
      operationId: createOrUpdateChangeMessages
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ChangeMessages'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ChangeMessages'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ChangeMessages'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ChangeMessages'
      x-codegen-request-body-name: body
  /repo/v1/admin/messages/currentnumber:
    get:
      tags:
      - AdministrationController
      summary: Get current change message number.
      description: Get current change message number
      operationId: getCurrentChangeNumber
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FireMessagesResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FireMessagesResult'
  /repo/v1/admin/messages/rebroadcast:
    post:
      tags:
      - AdministrationController
      operationId: rebroadcastChangeMessagesToQueue
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: number
      - name: queueName
        in: query
        required: true
        schema:
          type: string
      - name: startChangeNumber
        in: query
        required: true
        schema:
          type: number
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PublishResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PublishResults'
  /repo/v1/admin/messages/refire:
    get:
      tags:
      - AdministrationController
      summary: Refires all the change messages.
      description: Refires all the change messages
      operationId: refireChangeMessagesToQueue
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: number
      - name: startChangeNumber
        in: query
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FireMessagesResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FireMessagesResult'
  /repo/v1/admin/oauth2/client/{clientId}/verified:
    put:
      tags:
      - AdministrationController
      summary: Changes the verified status of the OAuth client with the provided id.
      description: Changes the verified status of the OAuth client with the provided
        id. Only an administrator or a member of the ACT team can perform this operation.
      operationId: updateOAuthClientVerifiedStatus
      parameters:
      - name: clientId
        in: path
        description: The id of the client to verify
        required: true
        schema:
          type: string
      - name: etag
        in: query
        description: The etag of the client, this must match the current etag of the
          client
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: The verified status to change to, default true
        schema:
          type: boolean
          default: true
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_OAuthClient'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_OAuthClient'
  /repo/v1/admin/redact/user/{principalId}:
    post:
      tags:
      - AdministrationController
      summary: Redacts all information about a user to comply with data removal requests.
      description: Redacts all information about a user to comply with data removal
        requests.
      operationId: clearUserProfile
      parameters:
      - name: principalId
        in: path
        description: The principal ID of the user whose information should be cleared
        required: true
        schema:
          type: number
      - name: userId
        in: query
        description: Principal ID of the caller. Must be an administrator
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content: {}
  /repo/v1/admin/synapse/status:
    get:
      tags:
      - AdministrationController
      operationId: getStackStatus
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_StackStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_StackStatus'
    put:
      tags:
      - AdministrationController
      summary: Update the current status of the stack.
      description: Update the current status of the stack.
      operationId: updateStatusStackStatus
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Update the current status of the stack.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_StackStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_StackStatus'
      x-codegen-request-body-name: body
  /repo/v1/admin/user:
    post:
      tags:
      - AdministrationController
      summary: Creates a user with specific state to be used for integration testing.
      description: |-
        Creates a user with specific state to be used for integration testing.
        If the user already exists, just returns the existing one.
      operationId: createOrGetIntegrationTestUser
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_NewIntegrationTestUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_NewIntegrationTestUser'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityId'
      x-codegen-request-body-name: body
  /repo/v1/admin/user/{id}:
    delete:
      tags:
      - AdministrationController
      summary: Deletes a user.
      description: Deletes a user.  All FKs must be deleted before this will succeed
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/admin/user/{id}/certificationStatus:
    put:
      tags:
      - CertifiedUserController
      operationId: setUserCertificationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: isCertified
        in: query
        required: true
        schema:
          type: boolean
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/admin/user/{id}/certifiedUserPassingRecords:
    get:
      tags:
      - CertifiedUserController
      summary: Retrieve all the Passing Record on the User Certification test for
        the given user.
      description: |-
        Retrieve all the Passing Record on the User Certification test for the given user.
        Note:  This service is available to Synapse administrators only.
      operationId: getPassingRecords
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: limit
        in: query
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        schema:
          type: integer
          default: 0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfPassingRecord'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfPassingRecord'
  /repo/v1/asynchronous/job:
    post:
      tags:
      - AsynchronousJobController
      summary: "."
      description: |-
        <p>
        This method is used to launch new jobs. The type of job that will be launched is determined by the passed
        AsynchronousJobBody.
        </p>
        The following are the currently supported job types:
        <ul>
        <li><a href="${org.sagebionetworks.repo.model.table.UploadToTableRequest}">UploadToTableRequest</a></li>
        <li><a href="${org.sagebionetworks.repo.model.table.DownloadFromTableRequest}">DownloadFromTableRequest</a></li>
        </ul>
        <p>
        Note: Each job types has different access requirements.
        </p>
      operationId: launchNewJob2
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          There is a AsynchronousJobBody implementation for each job type. This body determines the type of job
          that will be launched.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AsynchronousRequestBody'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AsynchronousRequestBody'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
      x-codegen-request-body-name: body
  /repo/v1/asynchronous/job/{jobId}:
    get:
      tags:
      - AsynchronousJobController
      summary: Once a job is launched its progress can be monitored by getting its
        status with this method.
      description: Once a job is launched its progress can be monitored by getting
        its status with this method.
      operationId: getJobStatus2
      parameters:
      - name: jobId
        in: path
        description: |-
          The jobId issued to a job that has been launched with <a href="${POST.asynchronous.job}">POST
          /asynchronous/job</a>
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsynchronousJobStatus'
  /repo/v1/asynchronous/job/{jobId}/cancel:
    get:
      tags:
      - AsynchronousJobController
      summary: Once a job is launched it can be cancelled if the job is set up to
        be cancelable.
      description: Once a job is launched it can be cancelled if the job is set up
        to be cancelable.
      operationId: stopJob
      parameters:
      - name: jobId
        in: path
        description: |-
          The jobId issued to a job that has been launched with <a href="${POST.asynchronous.job}">POST
          /asynchronous/job</a>
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/certifiedUserTest:
    get:
      tags:
      - CertifiedUserController
      summary: Get the test to become a Certified User.
      description: Get the test to become a Certified User.
      operationId: getCertificationQuiz
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Quiz'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Quiz'
  /repo/v1/certifiedUserTestResponse:
    get:
      tags:
      - CertifiedUserController
      operationId: getQuizResponses
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
    post:
      tags:
      - CertifiedUserController
      summary: Submit a response to the Certified User test.
      description: Submit a response to the Certified User test.
      operationId: submitCertificationQuizResponse
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_QuizResponse'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_QuizResponse'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PassingRecord'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PassingRecord'
      x-codegen-request-body-name: body
  /repo/v1/certifiedUserTestResponse/{id}:
    delete:
      tags:
      - CertifiedUserController
      operationId: deleteQuizResponse
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/challenge:
    get:
      tags:
      - ChallengeController
      summary: List the Challenges for which the given participant is registered.
      description: |-
        List the Challenges for which the given participant is registered.
        To be in the returned list the caller must have READ permission on the
        project associated with the Challenge.
      operationId: listChallengesForParticipant
      parameters:
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: participantId
        in: query
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ChallengePagedResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ChallengePagedResults'
    post:
      tags:
      - ChallengeController
      summary: Create a Challenge object, associated with a Project.
      description: |-
        Create a Challenge object, associated with a Project.  A participant Team must
        be specified.  To create a Challenge one must have CREATE permission on the
        associated Project.
      operationId: createChallenge
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Challenge'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Challenge'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Challenge'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Challenge'
      x-codegen-request-body-name: body
  /repo/v1/challenge/{challengeId}:
    get:
      tags:
      - ChallengeController
      summary: Retrieve a Challenge given its ID.
      description: |-
        Retrieve a Challenge given its ID.  To retrieve a
        Challenge one must have READ permission on the associated Project.
      operationId: getChallenge
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Challenge'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Challenge'
    put:
      tags:
      - ChallengeController
      summary: Update a Challenge.
      description: |-
        Update a Challenge.  The caller must have UPDATE permission on the
        project associated with the Challenge.  It is not permitted to
        change the project associated with a Challenge.
      operationId: updateChallenge
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Challenge'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Challenge'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Challenge'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Challenge'
      x-codegen-request-body-name: body
    delete:
      tags:
      - ChallengeController
      summary: Delete a Challenge.
      description: |-
        Delete a Challenge.  The caller must have DELETE permission on the
        project associated with the Challenge.
      operationId: deleteChallenge
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/challenge/{challengeId}/challengeTeam:
    get:
      tags:
      - ChallengeController
      summary: List the Teams registered for a Challenge.
      description: |-
        List the Teams registered for a Challenge.  You must have READ permission
        in the associated Project to make this request.
      operationId: listChallengeTeams
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ChallengeTeamPagedResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ChallengeTeamPagedResults'
    post:
      tags:
      - ChallengeController
      summary: Register a Team with a Challenge.
      description: |-
        Register a Team with a Challenge. You must be a member of the Challenge's
        participant Team (i.e. you must be already registered for the Challenge)
        and be an administrator on the Team being registered.
      operationId: createChallengeTeam
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ChallengeTeam'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ChallengeTeam'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ChallengeTeam'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ChallengeTeam'
      x-codegen-request-body-name: body
  /repo/v1/challenge/{challengeId}/challengeTeam/{challengeTeamId}:
    put:
      tags:
      - ChallengeController
      summary: Update a Challenge Team.
      description: |-
        Update a Challenge Team. You must be a member of the Challenge's
        participant Team (i.e. you must be already registered for the Challenge)
        and be an administrator on the associated Team.
      operationId: updateChallengeTeam
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: challengeTeamId
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ChallengeTeam'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ChallengeTeam'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ChallengeTeam'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ChallengeTeam'
      x-codegen-request-body-name: body
  /repo/v1/challenge/{challengeId}/participant:
    get:
      tags:
      - ChallengeController
      summary: List the participants registered for a Challenge.
      description: |-
        List the participants registered for a Challenge.
        The caller must have READ permission on the
        project associated with the Challenge.
      operationId: listParticipantsInChallenge
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: affiliated
        in: query
        description: |-
          If affiliated=true, return just participants affiliated with some
          registered Team.  If false, return those not affiliated with any registered Team.
          If omitted return all participants.
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
  /repo/v1/challenge/{challengeId}/registratableTeam:
    get:
      tags:
      - ChallengeController
      summary: List the Teams that caller can register for the Challenge, i.
      description: |-
        List the Teams that caller can register for the Challenge, i.e. Teams on which
        the caller is an administrator and which are not already registered.
        The caller must have READ permission on the
        project associated with the Challenge to make this request.
      operationId: listRegistratableTeams
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
  /repo/v1/challenge/{challengeId}/submissionTeams:
    get:
      tags:
      - ChallengeController
      summary: List the Teams under which the given submitter may submit to the Challenge,
        i.
      description: |-
        List the Teams under which the given submitter may submit to the Challenge, i.e. the Teams on which
        the user is a member and which are registered for the Challenge.
      operationId: listSubmissionTeams
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: number
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
  /repo/v1/challengeTeam/{challengeTeamId}:
    delete:
      tags:
      - ChallengeController
      summary: De-register a Team from a Challenge.
      description: |-
        De-register a Team from a Challenge. You must be a member of the Challenge's
        participant Team (i.e. you must be already registered for the Challenge)
        and be an administrator on the Team being de-registered.
      operationId: deleteChallengeTeam
      parameters:
      - name: challengeTeamId
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/cloudMailInAuthorization:
    post:
      tags:
      - MessageController
      summary: "."
      description: '<b>Note:  This service is designed to be used by CloudMailIn,
        not by clients in general.</b>'
      operationId: authorizeCloudMailInMessage
      requestBody:
        description: the header of the CloudMailIn message in JSON format
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AuthorizationCheckHeader'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AuthorizationCheckHeader'
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/cloudMailInMessage:
    post:
      tags:
      - MessageController
      summary: "."
      description: |-
        <b>Note:  This service is designed to be used by CloudMailIn, not by clients in general.</b>
        <p>Calling the service requires Basic Authentication credentials owned by the
        the Synapse CloudMailIn account.</p>
      operationId: createCloudMailInMessage
      parameters:
      - name: notificationUnsubscribeEndpoint
        in: query
        schema:
          type: string
      requestBody:
        description: the CloudMailIn message in JSON format
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Message'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Message'
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/column:
    get:
      tags:
      - TableController
      summary: "."
      description: |-
        <p>
        List all of the <a
        href="${org.sagebionetworks.repo.model.table.ColumnModel}"
        >ColumnModels</a> that have been created in Synapse.
        </p>
        Since each ColumnModel is immutable it is safe to re-use ColumnModels
        created by other users.
      operationId: listColumnModels
      parameters:
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10. The maximum Limit for this call is
          100. The default Limit is 10;
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        schema:
          type: number
      - name: prefix
        in: query
        description: |-
          When included, only columns with a name that starts with this
          prefix will be returned.
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedColumnModels'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedColumnModels'
    post:
      tags:
      - TableController
      summary: Create a.
      description: |-
        Create a <a
        href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModel
        </a> that can be used as a column of a <a
        href="${org.sagebionetworks.repo.model.table.TableEntity}"
        >TableEntity</a>. Unlike other objects in Synapse ColumnModels are
        immutable and reusable and do not have an "owner" or "creator". This
        method is idempotent, so if the same ColumnModel is passed multiple time
        a new ColumnModel will not be created. Instead the existing ColumnModel
        will be returned. This also means if two users create identical
        ColumnModels for their tables they will both receive the same
        ColumnModel.
      operationId: createColumnModel
      parameters:
      - name: userId
        in: query
        description: The user's id.
        required: true
        schema:
          type: number
      requestBody:
        description: The ColumnModel to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ColumnModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ColumnModel'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ColumnModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ColumnModel'
      x-codegen-request-body-name: body
  /repo/v1/column/batch:
    post:
      tags:
      - TableController
      summary: Create a batch of.
      description: |-
        Create a batch of <a
        href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModel
        </a> that can be used as columns of a <a
        href="${org.sagebionetworks.repo.model.table.TableEntity}"
        >TableEntity</a>. Unlike other objects in Synapse ColumnModels are
        immutable and reusable and do not have an "owner" or "creator". This
        method is idempotent, so if the same ColumnModel is passed multiple time
        a new ColumnModel will not be created. Instead the existing ColumnModel
        will be returned. This also means if two users create identical
        ColumnModels for their tables they will both receive the same
        ColumnModel.

        This call will either create all column models or create none
      operationId: createColumnModels
      parameters:
      - name: userId
        in: query
        description: The user's id.
        required: true
        schema:
          type: number
      requestBody:
        description: The ColumnModel to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
      x-codegen-request-body-name: body
  /repo/v1/column/tableview/defaults:
    get:
      tags:
      - TableController
      summary: Get the list of default.
      description: |-
        Get the list of default
        <a href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModels
        </a> for the given <a href=
        "${org.sagebionetworks.repo.model.table.ViewEntityType}">viewEntityType</a>
        and viewTypeMask.
      operationId: getDefaultColumnsForViewType
      parameters:
      - name: viewEntityType
        in: query
        description: |-
          The <a href=
          "${org.sagebionetworks.repo.model.table.ViewEntityType}">entity
          type</a> of the view, if omitted use entityview
        schema:
          type: string
          default: entityview
          enum:
          - entityview
          - submissionview
      - name: viewTypeMask
        in: query
        description: |-
          Bit mask representing the types to include in the view.
          Not required for a submission view. For an entity view
          following are the possible types: (type=<mask_hex>):
          File=0x01, Project=0x02, Table=0x04, Folder=0x08,
          View=0x10, Docker=0x20.
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
  /repo/v1/column/tableview/defaults/{viewtype}:
    get:
      tags:
      - TableController
      summary: Get the list of default.
      description: |-
        Get the list of default
        <a href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModels
        </a> that are available based on the types included in the view.
      operationId: getDefaultColumnsForViewType
      parameters:
      - name: viewtype
        in: path
        description: |-
          Deprecated. Use: 'viewTypeMask'. Must be a value from <a href=
          "${org.sagebionetworks.repo.model.table.ViewType}">ViewType </a>
          enumeration.
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfColumnModel'
      deprecated: true
  /repo/v1/column/view/scope:
    post:
      tags:
      - TableController
      summary: |-
        Get the possible ColumnModel definitions based on annotation within a
        given scope.
      description: |-
        Get the possible ColumnModel definitions based on annotation within a
        given scope.
      operationId: getPossibleColumnModelsForView
      parameters:
      - name: nextPageToken
        in: query
        description: |-
          Optional: When the results include a next page token, the
          token can be provided to get subsequent pages.
        schema:
          type: string
      requestBody:
        description: List of parent IDs that define the scope.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ViewScope'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ViewScope'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ColumnModelPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ColumnModelPage'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/column/view/scope/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: Fetches the result of the.
      description: |-
        Fetches the result of the <a href="${POST.column.view.scope.async.start}">POST /column/view/scope/async/start</a> service that'll contain
        a page of possible <a href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModels</a> within the scope supplied in the original request.

        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: getViewScopeColumnsAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ViewColumnModelResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ViewColumnModelResponse'
  /repo/v1/column/view/scope/async/start:
    post:
      tags:
      - TableController
      summary: Starts an asynchronous job to compute a page of the possible.
      description: |-
        Starts an asynchronous job to compute a page of the possible <a href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModels</a>
        based on the annotations within the provided scope. The result of the job can be fetched using the
        <a href="${GET.column.view.scope.async.get.asyncToken}">GET /column/view/scope/async/get</a> service with the job token returned by this request.
      operationId: getViewScopeColumnsAsyncStart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The request specifies the scope to compute the model against
          as well as the optional nextPageToken used to fetch subsequent pages
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ViewColumnModelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ViewColumnModelRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/column/{columnId}:
    get:
      tags:
      - TableController
      summary: Get a.
      description: |-
        Get a <a
        href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModel
        </a> using its ID.
      operationId: getColumnModel
      parameters:
      - name: columnId
        in: path
        description: The ID of the ColumnModel to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ColumnModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ColumnModel'
  /repo/v1/dataAccessRequest:
    post:
      tags:
      - DataAccessController
      summary: Create a new Request or update an existing Request.
      description: Create a new Request or update an existing Request.
      operationId: createOrUpdate
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      requestBody:
        description: '- The object that contains information needed to create/update
          a Request.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_RequestInterface'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_RequestInterface'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_RequestInterface'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_RequestInterface'
      x-codegen-request-body-name: body
  /repo/v1/dataAccessRequest/{requestId}/submission:
    post:
      tags:
      - DataAccessController
      summary: Submit a Submission using information from a Request.
      description: Submit a Submission using information from a Request.
      operationId: submit
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_CreateSubmissionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_CreateSubmissionRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus'
      x-codegen-request-body-name: body
  /repo/v1/dataAccessSubmission/openSubmissions:
    get:
      tags:
      - DataAccessController
      summary: Retrieve information about submitted Submissions.
      description: |-
        Retrieve information about submitted Submissions.
        Only ACT member can perform this action.
      operationId: getOpenSubmissions
      parameters:
      - name: nextPageToken
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_OpenSubmissionPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_OpenSubmissionPage'
  /repo/v1/dataAccessSubmission/{submissionId}:
    put:
      tags:
      - DataAccessController
      summary: Request to update a submission' state.
      description: |-
        Request to update a submission' state.
        Only ACT member can perform this action.
      operationId: updateState
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SubmissionStateChangeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SubmissionStateChangeRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Submission'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Submission'
      x-codegen-request-body-name: body
  /repo/v1/dataAccessSubmission/{submissionId}/cancellation:
    put:
      tags:
      - DataAccessController
      summary: Cancel a submission.
      description: |-
        Cancel a submission.
        Only the user who created this submission can cancel it.
      operationId: cancel
      parameters:
      - name: submissionId
        in: path
        description: '- The ID of the submission to cancel.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus'
  /repo/v1/doi:
    get:
      tags:
      - DoiController
      summary: Retrieves the DOI for the object and its associated DOI metadata.
      description: |-
        Retrieves the DOI for the object and its associated DOI metadata.
        Note: this call calls an external API, which may impact performance
        To just retrieve the DOI association, see: <a href="${GET.doi.association}">GET /doi/association</a>
      operationId: getDoiV2
      parameters:
      - name: id
        in: query
        description: The ID of the object to retrieve
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of the object
        required: true
        schema:
          type: string
          enum:
          - ACCESS_APPROVAL
          - ACCESS_CONTROL_LIST
          - ACCESS_REQUIREMENT
          - ACTIVITY
          - CERTIFIED_USER_PASSING_RECORD
          - DATA_ACCESS_REQUEST
          - DATA_ACCESS_SUBMISSION
          - DATA_ACCESS_SUBMISSION_STATUS
          - ENTITY
          - ENTITY_CONTAINER
          - ENTITY_VIEW
          - EVALUATION
          - EVALUATION_ROUND
          - EVALUATION_SUBMISSIONS
          - FAVORITE
          - FILE
          - FORM_DATA
          - FORM_GROUP
          - FORUM
          - MEMBERSHIP_INVITATION
          - MESSAGE
          - ORGANIZATION
          - PRINCIPAL
          - PROJECT_SETTING
          - REPLY
          - SUBMISSION
          - TABLE
          - TEAM
          - THREAD
          - USER_PROFILE
          - VERIFICATION_SUBMISSION
          - WIKI
      - name: version
        in: query
        description: The version number of the object
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Doi'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Doi'
  /repo/v1/doi/association:
    get:
      tags:
      - DoiController
      summary: Retrieves the DOI for the object.
      description: |-
        Retrieves the DOI for the object.
        Note: this call only retrieves the DOI association, if it exists. To retrieve the metadata for the object,
        see <a href="${GET.doi}">GET /doi</a>
      operationId: getDoiAssociation
      parameters:
      - name: id
        in: query
        description: The ID of the object to retrieve
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of the object
        required: true
        schema:
          type: string
          enum:
          - ACCESS_APPROVAL
          - ACCESS_CONTROL_LIST
          - ACCESS_REQUIREMENT
          - ACTIVITY
          - CERTIFIED_USER_PASSING_RECORD
          - DATA_ACCESS_REQUEST
          - DATA_ACCESS_SUBMISSION
          - DATA_ACCESS_SUBMISSION_STATUS
          - ENTITY
          - ENTITY_CONTAINER
          - ENTITY_VIEW
          - EVALUATION
          - EVALUATION_ROUND
          - EVALUATION_SUBMISSIONS
          - FAVORITE
          - FILE
          - FORM_DATA
          - FORM_GROUP
          - FORUM
          - MEMBERSHIP_INVITATION
          - MESSAGE
          - ORGANIZATION
          - PRINCIPAL
          - PROJECT_SETTING
          - REPLY
          - SUBMISSION
          - TABLE
          - TEAM
          - THREAD
          - USER_PROFILE
          - VERIFICATION_SUBMISSION
          - WIKI
      - name: version
        in: query
        description: The version number of the object
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DoiAssociation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DoiAssociation'
  /repo/v1/doi/async/get/{asyncToken}:
    get:
      tags:
      - DoiController
      summary: Get the results of a call to.
      description: Get the results of a call to <a href="${POST.doi.async.start}">POST
        /doi/async/start</a>
      operationId: getCreateOrUpdateDoiResults
      parameters:
      - name: asyncToken
        in: path
        description: The async job token from the create/update call
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The ID of the user making the call
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DoiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DoiResponse'
  /repo/v1/doi/async/start:
    post:
      tags:
      - DoiController
      summary: Asynchronously creates or updates a DOI in Synapse, with input metadata.
      description: |-
        Asynchronously creates or updates a DOI in Synapse, with input metadata. Retrieve the results with
        <a href="${GET.doi.async.get.asyncToken}">GET /doi/async/get/{asyncToken}</a>. This call may fail if the external
        DataCite API is down. If the failure is recoverable, it will retry automatically.
      operationId: startCreateOrUpdateDoi
      parameters:
      - name: userId
        in: query
        description: The ID of the user making the call
        required: true
        schema:
          type: number
      requestBody:
        description: A request containing a DOI and its metadata to associate with
          a Synapse object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_DoiRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_DoiRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/doi/locate:
    get:
      tags:
      - DoiController
      summary: Retrieves the Synapse web portal URL to the object entered.
      description: |-
        Retrieves the Synapse web portal URL to the object entered.
        Note: This call does not check to see if the object exists in Synapse.
      operationId: locate
      parameters:
      - name: id
        in: query
        description: The ID of the object to retrieve
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: Whether to return the URL or redirect to the URL
        schema:
          type: boolean
          default: true
      - name: status
        in: query
        schema:
          type: integer
      - name: type
        in: query
        description: The type of the object
        required: true
        schema:
          type: string
          enum:
          - ACCESS_APPROVAL
          - ACCESS_CONTROL_LIST
          - ACCESS_REQUIREMENT
          - ACTIVITY
          - CERTIFIED_USER_PASSING_RECORD
          - DATA_ACCESS_REQUEST
          - DATA_ACCESS_SUBMISSION
          - DATA_ACCESS_SUBMISSION_STATUS
          - ENTITY
          - ENTITY_CONTAINER
          - ENTITY_VIEW
          - EVALUATION
          - EVALUATION_ROUND
          - EVALUATION_SUBMISSIONS
          - FAVORITE
          - FILE
          - FORM_DATA
          - FORM_GROUP
          - FORUM
          - MEMBERSHIP_INVITATION
          - MESSAGE
          - ORGANIZATION
          - PRINCIPAL
          - PROJECT_SETTING
          - REPLY
          - SUBMISSION
          - TABLE
          - TEAM
          - THREAD
          - USER_PROFILE
          - VERIFICATION_SUBMISSION
          - WIKI
      - name: version
        in: query
        description: The version number of the object
        schema:
          type: number
      responses:
        200:
          description: The URL of the object in Synapse.
          content:
            application/json:
              schema:
                type: string
                description: The URL of the object in Synapse.
                format: binary
            application/xml:
              schema:
                type: string
                description: The URL of the object in Synapse.
                format: binary
  /repo/v1/email:
    post:
      tags:
      - PrincipalController
      summary: This service completes the email validation process for adding a new
        email address to an existing account.
      description: |-
        This service completes the email validation process for adding a new email address to an existing account.
        The client must provide the validation token which was sent by email.  The request
        will be rejected if the validation token is missing or invalid, if the email
        address is already used or if the user making the request is not the one who initiated
        the email validation process.
      operationId: addEmail
      parameters:
      - name: setAsNotificationEmail
        in: query
        description: |-
          if true then the newly added email address becomes the address
          used by the system for sending messages to the user.
        required: true
        schema:
          type: boolean
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the validation token sent by email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EmailValidationSignedToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EmailValidationSignedToken'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
    delete:
      tags:
      - PrincipalController
      summary: This service removes an email address from an account.
      description: |-
        This service removes an email address from an account.  The request is rejected
        if the email address is not currently owned by the user or if the email is
        the <i>notification address</i> for the user.
      operationId: removeEmail
      parameters:
      - name: email
        in: query
        description: the email address to remove
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity:
    post:
      tags:
      - EntityController
      summary: Create a new Entity.
      description: |-
        Create a new Entity. This method is used to create Projects, Folders,
        FileEntities and Records (coming soon). The passed request body should
        contain the following fields:
        <ul>
        <li>name - Give your new entity a Name. <b>Note:</b> A name must be unique
        within the given parent, similar to a file in a folder.</li>
        <li>parentId - The ID of the parent Entity, such as a Folder or Project. This
        field should be excluded when creating a Project.</li>
        <li>concreteType - Indicates the type of Entity to create. The value should
        be one of the following: org.sagebionetworks.repo.model.Project,
        org.sagebionetworks.repo.model.Folder, or
        org.sagebionetworks.repo.model.FileEntity</li>
        </ul>
        <p>
        Note: To create an Entity the caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CREATE</a> on the parent Entity. Any authenticated caller can
        create a new Project (with parentId=null).
        </p>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum number of children for a single parent entity</td>
        <td>10 K</td>
        </tr>
        </table>
        </p>
      operationId: createEntity
      parameters:
      - name: generatedBy
        in: query
        description: |-
          To track the Provenance of an Entity create, include the
          ID of the <a href=
          "${org.sagebionetworks.repo.model.provenance.Activity}"
          >Activity</a> that was created to track the change. For
          more information see: <a href="${POST.activity}">POST
          /activity</a>. You must be the creator of the <a href=
          "${org.sagebionetworks.repo.model.provenance.Activity}"
          >Activity</a> used here.
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Entity'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Entity'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Entity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Entity'
      x-codegen-request-body-name: body
  /repo/v1/entity/alias/{alias}:
    get:
      tags:
      - EntityController
      summary: Lookup an Entity ID using an alias.
      description: Lookup an Entity ID using an alias.
      operationId: getEntityIdByAlias
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityId'
  /repo/v1/entity/bundle:
    post:
      tags:
      - EntityBundleController
      summary: Create an entity and associated components with a single POST.
      description: |-
        Create an entity and associated components with a single POST.
        Specifically, this operation supports creation of an Entity, its
        Annotations, and its ACL.

        Upon successful creation, an EntityBundle is returned containing the
        requested components, as defined by the partsMask in the request object.
      operationId: createEntityBundle
      parameters:
      - name: generatedBy
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: '- the EntityBundleCreate object containing the Entity and Annotations
          to create.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/entity/bundle2/create:
    post:
      tags:
      - EntityBundleV2Controller
      summary: Create an entity and associated components with a single POST.
      description: |-
        Create an entity and associated components with a single POST.
        Specifically, this operation supports creation of an Entity, its
        Annotations, and its ACL.

        Upon successful creation, an EntityBundle is returned containing the
        requested components, as defined by the partsMask in the request object.
      operationId: createEntityBundle2
      parameters:
      - name: generatedBy
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: '- the EntityBundleCreate object containing the Entity and Annotations
          to create.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate_v2'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate_v2'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
      x-codegen-request-body-name: body
  /repo/v1/entity/child:
    post:
      tags:
      - EntityController
      summary: Retrieve an entityId for a given parent ID and entity name.
      description: |-
        Retrieve an entityId for a given parent ID and entity name. This service can
        also be used to lookup projectId by setting the parentId to NULL in
        EntityLookupRequest.
      operationId: lookupChild
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityLookupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityLookupRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityId'
      x-codegen-request-body-name: body
  /repo/v1/entity/children:
    post:
      tags:
      - EntityController
      summary: Get a page of children for a given parent ID.
      description: |-
        Get a page of children for a given parent ID. This service can also be used
        to list projects by setting the parentId to NULL in EntityChildrenRequest.
      operationId: getChildren
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityChildrenRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityChildrenRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityChildrenResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityChildrenResponse'
      x-codegen-request-body-name: body
  /repo/v1/entity/header:
    post:
      tags:
      - EntityController
      summary: Get the EntityHeader for a list of references with a POST.
      description: |-
        Get the EntityHeader for a list of references with a POST. If any item in the
        batch fails (e.g., with a 404) it will be EXCLUDED in the result set.
      operationId: getEntityVersionedTypeBatch
      parameters:
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ReferenceList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ReferenceList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
      x-codegen-request-body-name: body
  /repo/v1/entity/md5/{md5}:
    get:
      tags:
      - EntityController
      summary: |-
        Gets at most 200 FileEntities matching the given MD5 string which the
        user has read access to.
      description: |-
        Gets at most 200 FileEntities matching the given MD5 string which the
        user has read access to. NOTE: Another option is to create a file view that includes MD5 values.
        See <a href="https://docs.synapse.org/articles/views.html">https://docs.synapse.org/articles/views.html</a>
      operationId: getEntityHeaderByMd5
      parameters:
      - name: md5
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user making the request
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Gets at most 200 FileEntities matching the given MD5 string which the
          user has read access to. NOTE: Another option is to create a file view that includes MD5 values.
          See <a href="https://docs.synapse.org/articles/views.html">https://docs.synapse.org/articles/views.html</a>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
      x-codegen-request-body-name: body
  /repo/v1/entity/threadcounts:
    post:
      tags:
      - DiscussionController
      summary: |-
        This API is used to get list of entity and count pairs, with count is the
        number of threads that belong to projects user can view and references
        the given entity.
      description: |-
        This API is used to get list of entity and count pairs, with count is the
        number of threads that belong to projects user can view and references
        the given entity.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getThreadCounts
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- The requested list. Limit size 20.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityIdList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityIdList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityThreadCounts'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityThreadCounts'
      x-codegen-request-body-name: body
  /repo/v1/entity/type:
    get:
      tags:
      - EntityController
      summary: Get a batch of EntityHeader given multile Entity IDs.
      description: |-
        Get a batch of EntityHeader given multile Entity IDs. The EntityHeader is a
        light weight object with basic information about an Entity includes its type.
      operationId: getEntityTypeBatch
      parameters:
      - name: batch
        in: query
        description: |-
          A comma separated list of Entity IDs to get EntityHeaders
          for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
  /repo/v1/entity/{id}:
    get:
      tags:
      - EntityController
      summary: Get an Entity using its ID.
      description: |-
        Get an Entity using its ID.
        <p>
        Note: To get an Entity the caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        on the Entity.
        </p>
      operationId: getEntity
      parameters:
      - name: id
        in: path
        description: The ID of the entity to fetch.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Entity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Entity'
    put:
      tags:
      - EntityController
      summary: Update an entity.
      description: |-
        Update an entity.
        <p>
        If the Entity is a FileEntity and the dataFileHandleId fields is set to a new
        value, then a new version will automatically be created for this update if the
        MD5 of the new file handle does not match the MD5 of the existing file handle or if
        the file handles do not have an MD5 set. You can also force the creation of a new
        version using the newVersion parameter
        (see below).
        </p>
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time an Entity is updated a new etag will be issued
        to the Entity. When an update is request, Synapse will compare the etag of
        the passed Entity with the current etag of the Entity. If the etags do not
        match, then the update will be rejected with a PRECONDITION_FAILED (412)
        response. When this occurs the caller should get the latest copy of the
        Entity (see: <a href="${GET.entity.id}">GET /entity/{id}</a>) and re-apply
        any changes to the object, then re-attempt the Entity update. This ensure the
        caller has any changes applied by other users before applying their own
        changes.
        </p>
        <p>
        Note: To update an Entity the caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> on the Entity.
        </p>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum number of children for a single parent entity</td>
        <td>10 K</td>
        </tr>
        </table>
        </p>
      operationId: updateEntity
      parameters:
      - name: id
        in: path
        description: |-
          The ID of the entity to update. This ID must match the ID
          of the passed Entity in the request body.
        required: true
        schema:
          type: string
      - name: generatedBy
        in: query
        description: |-
          To track the Provenance of an Entity update, include the
          ID of the <a href=
          "${org.sagebionetworks.repo.model.provenance.Activity}"
          >Activity</a> that was created to track the change. For
          more information see: <a href="${POST.activity}">POST
          /activity</a>. You must be the creator of the <a href=
          "${org.sagebionetworks.repo.model.provenance.Activity}"
          >Activity</a> used here.
        schema:
          type: string
      - name: newVersion
        in: query
        description: |-
          To force the creation of a new version for a
          <a href="${org.sagebionetworks.repo.model.VersionableEntity}">versionable</a>
          entity such as a <a href= "${org.sagebionetworks.repo.model.FileEntity}">FileEntity</a>,
          include this optional parameter with a value set to true (i.e. newVersion=true).
          This parameter is ignored for entities of type
          <a href="${org.sagebionetworks.repo.model.table.Table}">Table</a>
          (See <a href="${POST.entity.id.table.snapshot}">POST /entity/{id}/table/snapshot</a> instead)
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Entity'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Entity'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Entity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Entity'
      x-codegen-request-body-name: body
    delete:
      tags:
      - EntityController
      summary: |-
        Moves an entity in the trash can, if the skipTrashCan is set to true will
        flag the entity for purge and it will be deleted as soon as possible.
      description: |-
        Moves an entity in the trash can, if the skipTrashCan is set to true will
        flag the entity for purge and it will be deleted as soon as possible.

        <p>
        Note: To delete an Entity the caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> on the Entity.
        </p>
      operationId: deleteEntity
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to delete.
        required: true
        schema:
          type: string
      - name: skipTrashCan
        in: query
        description: |-
          If true the entity will be flag for priority purge and
          deleted as soon as possible
        schema:
          type: boolean
      - name: userId
        in: query
        description: '- The user that is deleting the entity.'
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Moves an entity in the trash can, if the skipTrashCan is set to true will
          flag the entity for purge and it will be deleted as soon as possible.

          <p>
          Note: To delete an Entity the caller must be granted the
          <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
          >ACCESS_TYPE.DELETE</a> on the Entity.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/access:
    get:
      tags:
      - EntityController
      summary: Determine if the caller have a given permission on a given Entity.
      description: |-
        Determine if the caller have a given permission on a given Entity.
        <p>
        A User's permission on an Entity is a calculation based several factors
        including the permission granted by the Entity's ACL and the User's group
        membership. There might also be extra requirement for an Entity, such as
        special terms-of-use or special restrictions for sensitive data. This means a
        client cannot accurately calculate a User's permission on an Entity simply by
        inspecting the Entity's ACL. Instead, all clients should use this method to
        get the calculated permission a User has on an Entity.
        </p>
      operationId: hasAccess
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to check the permission on.
        required: true
        schema:
          type: string
      - name: accessType
        in: query
        description: |-
          The permission to check. Must be from:
          <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
          >ACCESS_TYPE</a>
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Determine if the caller have a given permission on a given Entity.
          <p>
          A User's permission on an Entity is a calculation based several factors
          including the permission granted by the Entity's ACL and the User's group
          membership. There might also be extra requirement for an Entity, such as
          special terms-of-use or special restrictions for sensitive data. This means a
          client cannot accurately calculate a User's permission on an Entity simply by
          inspecting the Entity's ACL. Instead, all clients should use this method to
          get the calculated permission a User has on an Entity.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_BooleanResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_BooleanResult'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/accessApproval:
    get:
      tags:
      - AccessApprovalController
      summary: Retrieve the Access Approvals for the given Entity.
      description: Retrieve the Access Approvals for the given Entity. This service
        is only available to the ACT.
      operationId: getEntityAccessApprovals
      parameters:
      - name: id
        in: path
        description: the entity of interest
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum limit for this call is 50.'
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/entity/{id}/accessRequirement:
    get:
      tags:
      - AccessRequirementController
      summary: Retrieve paginated list of ALL Access Requirements associated with
        an entity.
      description: Retrieve paginated list of ALL Access Requirements associated with
        an entity.
      operationId: getEntityAccessRequirements
      parameters:
      - name: id
        in: path
        description: the id of the entity whose Access Requirements are retrieved
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum limit for this call is 50.'
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfAccessRequirement'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfAccessRequirement'
  /repo/v1/entity/{id}/acl:
    get:
      tags:
      - EntityController
      summary: Get the Access Control List (ACL) for a given entity.
      description: |-
        Get the Access Control List (ACL) for a given entity.
        <p>
        Note: If this method is called on an Entity that is inheriting its permission
        from another Entity a NOT_FOUND (404) response will be generated. The error
        response message will include the Entity's benefactor ID.
        </p>
      operationId: getEntityAcl
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to get the ACL for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
    put:
      tags:
      - EntityController
      summary: Update an Entity's ACL.
      description: |-
        Update an Entity's ACL.
        <p>
        Note: The caller must be granted
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CHANGE_PERMISSIONS</a> on the Entity to call this method.
        </p>
      operationId: updateEntityAcl
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to create an ACL for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Update an Entity's ACL.
          <p>
          Note: The caller must be granted
          <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
          >ACCESS_TYPE.CHANGE_PERMISSIONS</a> on the Entity to call this method.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
      x-codegen-request-body-name: body
    post:
      tags:
      - EntityController
      summary: Create a new Access Control List (ACL), overriding inheritance.
      description: |-
        Create a new Access Control List (ACL), overriding inheritance.
        <p>
        By default, Entities such as FileEntity and Folder inherit their permission
        from their containing Project. For such Entities the Project is the Entity's
        'benefactor'. This permission inheritance can be overridden by creating an
        ACL for the Entity. When this occurs the Entity becomes its own benefactor
        and all permission are determined by its own ACL.
        </p>
        <p>
        If the ACL of an Entity is deleted, then its benefactor will automatically be
        set to its parent's benefactor.
        </p>
        <p>
        Note: The caller must be granted
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CHANGE_PERMISSIONS</a> on the Entity to call this method.
        </p>
      operationId: createEntityAcl
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to create an ACL for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Create a new Access Control List (ACL), overriding inheritance.
          <p>
          By default, Entities such as FileEntity and Folder inherit their permission
          from their containing Project. For such Entities the Project is the Entity's
          'benefactor'. This permission inheritance can be overridden by creating an
          ACL for the Entity. When this occurs the Entity becomes its own benefactor
          and all permission are determined by its own ACL.
          </p>
          <p>
          If the ACL of an Entity is deleted, then its benefactor will automatically be
          set to its parent's benefactor.
          </p>
          <p>
          Note: The caller must be granted
          <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
          >ACCESS_TYPE.CHANGE_PERMISSIONS</a> on the Entity to call this method.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
      x-codegen-request-body-name: body
    delete:
      tags:
      - EntityController
      summary: Delete the Access Control List (ACL) for a given Entity.
      description: |-
        Delete the Access Control List (ACL) for a given Entity.
        <p>
        By default, Entities such as FileEntity and Folder inherit their permission
        from their containing Project. For such Entities the Project is the Entity's
        'benefactor'. This permission inheritance can be overridden by creating an
        ACL for the Entity. When this occurs the Entity becomes its own benefactor
        and all permission are determined by its own ACL.
        </p>
        <p>
        If the ACL of an Entity is deleted, then its benefactor will automatically be
        set to its parent's benefactor. The ACL for a Project cannot be deleted.
        </p>
        <p>
        Note: The caller must be granted
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CHANGE_PERMISSIONS</a> on the Entity to call this method.
        </p>
      operationId: deleteEntityACL
      parameters:
      - name: id
        in: path
        description: The ID of the Entity that should have its ACL deleted.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The user that is deleting the entity.'
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Delete the Access Control List (ACL) for a given Entity.
          <p>
          By default, Entities such as FileEntity and Folder inherit their permission
          from their containing Project. For such Entities the Project is the Entity's
          'benefactor'. This permission inheritance can be overridden by creating an
          ACL for the Entity. When this occurs the Entity becomes its own benefactor
          and all permission are determined by its own ACL.
          </p>
          <p>
          If the ACL of an Entity is deleted, then its benefactor will automatically be
          set to its parent's benefactor. The ACL for a Project cannot be deleted.
          </p>
          <p>
          Note: The caller must be granted
          <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
          >ACCESS_TYPE.CHANGE_PERMISSIONS</a> on the Entity to call this method.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/annotations:
    get:
      tags:
      - EntityController
      summary: Get the annotations for an entity.
      description: |-
        Get the annotations for an entity.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        on the Entity, to get its annotations.
        </p>
      operationId: getEntityAnnotations
      parameters:
      - name: id
        in: path
        description: '- The id of the entity to update.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The user that is doing the update.'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Annotations'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Annotations'
      deprecated: true
    put:
      tags:
      - EntityController
      summary: Update an entities annotations.
      description: |-
        Update an entities annotations.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> on the Entity, to update its annotations.
        </p>
      operationId: updateEntityAnnotations
      parameters:
      - name: id
        in: path
        description: '- The id of the entity to update.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The user that is doing the update.'
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Update an entities annotations.
          <p>
          Note: The caller must be granted the
          <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
          >ACCESS_TYPE.UPDATE</a> on the Entity, to update its annotations.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Annotations'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Annotations'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/annotations2:
    get:
      tags:
      - EntityController
      summary: Get the annotations for an entity.
      description: |-
        Get the annotations for an entity.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        on the Entity, to get its annotations.
        </p>
      operationId: getEntityAnnotationsV2
      parameters:
      - name: id
        in: path
        description: '- The id of the entity to update.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The user that is doing the update.'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Annotations_v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Annotations_v2'
    put:
      tags:
      - EntityController
      summary: Update an Entity's annotations.
      description: |-
        Update an Entity's annotations.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> on the Entity, to update its annotations.
        </p>
      operationId: updateEntityAnnotationsV2
      parameters:
      - name: id
        in: path
        description: '- The id of the entity to update.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Update an Entity's annotations.
          <p>
          Note: The caller must be granted the
          <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
          >ACCESS_TYPE.UPDATE</a> on the Entity, to update its annotations.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Annotations_v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Annotations_v2'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/benefactor:
    get:
      tags:
      - EntityController
      summary: Get an Entity's benefactor.
      description: |-
        Get an Entity's benefactor.
        <p>
        The term 'benefactor' is used indicate which Entity an Entity inherits is ACL
        from. For example, a newly created Project will have its own ACL and
        therefore, it will be its own benefactor. A Folder will inherit its ACL (by
        default) from its containing Project so the Project will be the Folder's
        benefactor. This method will return the EntityHeader of an Entity's
        benefactor.
        </p>
      operationId: getEntityBenefactor
      parameters:
      - name: id
        in: path
        description: The ID of the entity to get the benefactor for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The user that is making the request.'
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Get an Entity's benefactor.
          <p>
          The term 'benefactor' is used indicate which Entity an Entity inherits is ACL
          from. For example, a newly created Project will have its own ACL and
          therefore, it will be its own benefactor. A Folder will inherit its ACL (by
          default) from its containing Project so the Project will be the Folder's
          benefactor. This method will return the EntityHeader of an Entity's
          benefactor.
          </p>
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityHeader'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/bundle:
    get:
      tags:
      - EntityBundleController
      summary: Get an entity and related data with a single GET.
      description: Get an entity and related data with a single GET.
      operationId: getEntityBundle
      parameters:
      - name: id
        in: path
        description: '- The ID of the entity to fetch.'
        required: true
        schema:
          type: string
      - name: mask
        in: query
        description: '- integer flag defining which components to include in the EntityBundle.'
        required: true
        schema:
          type: integer
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityBundle'
      deprecated: true
    put:
      tags:
      - EntityBundleController
      summary: Update an entity and associated components with a single POST.
      description: |-
        Update an entity and associated components with a single POST.
        Specifically, this operation supports update of an Entity, its
        Annotations, and its ACL.

        Upon successful creation, an EntityBundle is returned containing the
        requested components, as defined by the partsMask in the request object.
      operationId: updateEntityBundle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: generatedBy
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: '- the EntityBundleCreate object containing the Entity and Annotations
          to update.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate'
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/bundle2:
    put:
      tags:
      - EntityBundleV2Controller
      summary: Update an entity and associated components with a single PUT.
      description: |-
        Update an entity and associated components with a single PUT.
        Specifically, this operation supports update of an Entity, its
        Annotations, and its ACL.

        Upon successful creation, an EntityBundle is returned containing the
        requested components, as defined by the partsMask in the request object.
      operationId: updateEntityBundle2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: generatedBy
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: '- the EntityBundleCreate object containing the Entity and Annotations
          to update.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate_v2'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityBundleCreate_v2'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
      x-codegen-request-body-name: body
    post:
      tags:
      - EntityBundleV2Controller
      summary: Get an entity and related data with a single POST.
      description: Get an entity and related data with a single POST.
      operationId: getEntityBundle2
      parameters:
      - name: id
        in: path
        description: '- The ID of the entity to fetch.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityBundleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityBundleRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/challenge:
    get:
      tags:
      - ChallengeController
      summary: Retrieve a Challenge given the ID of its associated Project.
      description: |-
        Retrieve a Challenge given the ID of its associated Project.  To retrieve a
        Challenge one must have READ permission on the Project.
      operationId: getChallengeByProjectId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Challenge'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Challenge'
  /repo/v1/entity/{id}/column:
    get:
      tags:
      - TableController
      summary: Given the ID of a.
      description: |-
        Given the ID of a <a
        href="${org.sagebionetworks.repo.model.table.TableEntity}"
        >TableEntity</a>, get its list of <a
        href="${org.sagebionetworks.repo.model.table.ColumnModel}"
        >ColumnModels</a> that are currently assigned to the table.
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum frequency this method can be called</td>
        <td>6 calls per minute</td>
        </tr>
        </table>
        </p>
      operationId: getColumnForTable
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity to get the ColumnModels for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedColumnModels'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedColumnModels'
  /repo/v1/entity/{id}/datatype:
    put:
      tags:
      - EntityController
      summary: Change the.
      description: |-
        Change the <a href="${org.sagebionetworks.repo.model.DataType}" >DataType</a>
        of the given entity. The entity's DataType controls how the entity can be
        accessed. For example, an entity's DataType must be set to 'open_data' in
        order for anonymous to be allowed to access its contents.

        <p>
        Note: The caller must be a member of the 'Synapse Access and Compliance Team'
        (id=464532) in order to change an Entity's type to 'OPEN_DATA'. The caller
        must be grated UPDATED on the Entity to change the its type to any other
        value.
        </p>
      operationId: changeEntityDataType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - OPEN_DATA
          - SENSITIVE_DATA
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DataTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DataTypeResponse'
  /repo/v1/entity/{id}/dockerCommit:
    post:
      tags:
      - DockerCommitController
      summary: Add a commit (tag and digest) for an external/unmanaged Docker repository.
      description: |-
        Add a commit (tag and digest) for an external/unmanaged Docker repository.
        (Commits for managed repositories are added via direct integration with the
        Synapse Docker registry.)
      operationId: addDockerCommit
      parameters:
      - name: id
        in: path
        description: the ID of the Docker repository entity
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the new tag/digest pair for the repository
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_DockerCommit'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_DockerCommit'
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/dockerTag:
    get:
      tags:
      - DockerCommitController
      summary: List the tagged commits (tag/digest pairs) for the given Docker repository.
      description: |-
        List the tagged commits (tag/digest pairs) for the given Docker repository.  Only the most recent
        digest for each tag is returned since, following Docker's convention, a tag may be reassigned
        to a newer commit. The list may be sorted by date or tag.  The default is to sort by
        date, descending (newest first).
      operationId: listDockerTags
      parameters:
      - name: id
        in: path
        description: the ID of the Docker repository entity
        required: true
        schema:
          type: string
      - name: ascending
        in: query
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: pagination parameter, optional (default is 20)
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: pagination parameter, optional (default is 0)
        schema:
          type: number
          default: 0.0
      - name: sort
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDockerCommit'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDockerCommit'
  /repo/v1/entity/{id}/doi:
    get:
      tags:
      - DoiController
      summary: This service is deprecated.
      description: |-
        This service is deprecated. See: <a href="${GET.doi}">GET /doi</a> and
        <a href="${GET.doi.association}">GET /doi/association</a>
      operationId: getDoi
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
    put:
      tags:
      - DoiController
      summary: This service is deprecated.
      description: 'This service is deprecated. See: <a href="${POST.doi.async.start}">POST
        /doi/async/start</a>'
      operationId: createDoi
      responses:
        202:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
  /repo/v1/entity/{id}/evaluation:
    get:
      tags:
      - EvaluationController
      summary: Gets Evaluations tied to a project.
      description: |-
        Gets Evaluations tied to a project.

        <b>Note:</b> The response will contain only those Evaluations on which the caller is
        granted the <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.READ</a>
        permission, unless specified otherwise with the accessType parameter.
      operationId: getEvaluationsByContentSourcePaginated
      parameters:
      - name: id
        in: path
        description: the ID of the project
        required: true
        schema:
          type: string
      - name: accessType
        in: query
        description: The type of access for the user to filter for, optional and defaults
          to <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.READ</a>
        schema:
          type: string
          default: READ
          enum:
          - CHANGE_PERMISSIONS
          - CHANGE_SETTINGS
          - CREATE
          - DELETE
          - DELETE_SUBMISSION
          - DOWNLOAD
          - MODERATE
          - PARTICIPATE
          - READ
          - READ_PRIVATE_SUBMISSION
          - SEND_MESSAGE
          - SUBMIT
          - TEAM_MEMBERSHIP_UPDATE
          - UPDATE
          - UPDATE_SUBMISSION
          - UPLOAD
      - name: activeOnly
        in: query
        description: If 'true' then return only those evaluations with rounds defined
          and for which the current time is in one of the rounds.
        schema:
          type: boolean
          default: false
      - name: evaluationIds
        in: query
        description: an optional, comma-delimited list of evaluation IDs to which
          the response is limited
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first entity. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEvaluation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEvaluation'
  /repo/v1/entity/{id}/file:
    get:
      tags:
      - EntityController
      summary: |-
        Get the actual URL of the file associated with the current version of a
        FileEntity.
      description: |-
        Get the actual URL of the file associated with the current version of a
        FileEntity.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the actual
        file URL if the caller meets all of the download requirements.
        </p>
      operationId: fileRedirectURLForCurrentVersion
      parameters:
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
  /repo/v1/entity/{id}/filehandles:
    get:
      tags:
      - EntityController
      summary: |-
        Get the FileHandles of the file currently associated with the current version
        of the Entity.
      description: |-
        Get the FileHandles of the file currently associated with the current version
        of the Entity
        <p>
        If a preview exists for the file then the handle of the preview and the file
        will be returned with this call.
        </p>
      operationId: getEntityFileHandlesForCurrentVersion
      parameters:
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
  /repo/v1/entity/{id}/filepreview:
    get:
      tags:
      - EntityController
      summary: |-
        Get the URL of the preview file associated with the current version of a
        FileEntity.
      description: |-
        Get the URL of the preview file associated with the current version of a
        FileEntity.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the actual
        file URL if the caller meets all of the download requirements.
        </p>
      operationId: filePreviewRedirectURLForCurrentVersion
      parameters:
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{id}/generatedBy:
    get:
      tags:
      - EntityController
      summary: Get an existing activity for the current version of an Entity.
      description: Get an existing activity for the current version of an Entity.
      operationId: getActivityForEntity
      parameters:
      - name: id
        in: path
        description: The ID of the activity to fetch.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        description: Get an existing activity for the current version of an Entity.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Activity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Activity'
      x-codegen-request-body-name: body
    put:
      tags:
      - EntityController
      summary: Sets the generatedBy relationship for the current version of an Entity.
      description: Sets the generatedBy relationship for the current version of an
        Entity.
      operationId: updateActivityForEntity
      parameters:
      - name: id
        in: path
        description: The ID of the entity to update.
        required: true
        schema:
          type: string
      - name: generatedBy
        in: query
        description: |-
          The id of the activity to connect to the entity. You must
          be the creator of the <a href=
          "${org.sagebionetworks.repo.model.provenance.Activity}"
          >Activity</a> used here.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        description: Sets the generatedBy relationship for the current version of
          an Entity.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Activity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Activity'
      x-codegen-request-body-name: body
    delete:
      tags:
      - EntityController
      summary: Deletes the generatedBy relationship for the current version of an
        Entity.
      description: Deletes the generatedBy relationship for the current version of
        an Entity.
      operationId: deleteActivityForEntity
      parameters:
      - name: id
        in: path
        description: '- The ID of the activity to fetch.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        description: Deletes the generatedBy relationship for the current version
          of an Entity.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/json:
    get:
      tags:
      - EntityController
      summary: Get the raw JSON for the given entity.
      description: |-
        Get the raw JSON for the given entity. The resulting JSON can be used for the
        validation of a entity against a
        <a href="${org.sagebionetworks.repo.model.schema.JsonSchema}">JsonSchema</a>.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        permission on the Entity.
        </p>
      operationId: getEntityJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_JSONObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_JSONObject'
    put:
      tags:
      - EntityController
      summary: Update the annotations of an entity using the raw JSON of the entity.
      description: |-
        Update the annotations of an entity using the raw JSON of the entity.
        <p>
        See: <a href="${GET.entity.id.json}">GET entity/{id}/json</a> to get the JSON
        of an entity.
        </p>
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.UPDATE
        and ACCESS_TYPE.READ</a> permission on the Entity.
        </p>
      operationId: updateEntityWithJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_JSONObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_JSONObject'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_JSONObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_JSONObject'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/lockAccessRequirement:
    post:
      tags:
      - AccessRequirementController
      summary: Add a temporary access restriction that prevents access pending review
        by the Synapse Access and Compliance Team.
      description: |-
        Add a temporary access restriction that prevents access pending review by the Synapse Access and Compliance Team.
        This service may be used only by an administrator of the specified entity.
      operationId: createLockAccessRequirement
      parameters:
      - name: id
        in: path
        description: the ID of the entity to which an Access Requirement will be applied
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessRequirement'
  /repo/v1/entity/{id}/message:
    post:
      tags:
      - MessageController
      summary: Adds the owner of the given entity as an additional recipient of the
        message.
      description: |-
        Adds the owner of the given entity as an additional recipient of the message.

        Afterwards, behavior is identical to <a href="${POST.message}">POST /message</a>
      operationId: sendMessageToEntityOwner
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MessageToUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MessageToUser'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/path:
    get:
      tags:
      - EntityController
      summary: Get the full path of an Entity as a List of EntityHeaders.
      description: |-
        Get the full path of an Entity as a List of EntityHeaders. The first
        EntityHeader will be the Root Entity, and the last EntityHeader will be the
        requested Entity.
      operationId: getEntityPath
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to get the full path for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityPath'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityPath'
  /repo/v1/entity/{id}/permissions:
    get:
      tags:
      - EntityController
      summary: Get the list of permission that the caller has on a given Entity.
      description: |-
        Get the list of permission that the caller has on a given Entity.
        <p>
        A User's permission on an Entity is a calculation based several factors
        including the permission granted by the Entity's ACL and the User's group
        membership. There might also be extra requirement for an Entity, such as
        special terms-of-use or special restrictions for sensitive data. This means a
        client cannot accurately calculate a User's permission on an Entity simply by
        inspecting the Entity's ACL. Instead, all clients should use this method to
        get the calculated permission a User has on an Entity.
        </p>
      operationId: getUserEntityPermissions
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to get permissions for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserEntityPermissions'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserEntityPermissions'
  /repo/v1/entity/{id}/schema/binding:
    get:
      tags:
      - EntityController
      summary: Get information about a JSON schema bound to an Entity.
      description: |-
        Get information about a JSON schema bound to an Entity. Note: Any child
        Entity that does not have a bound schema will inherit the first bound schema
        found in its hierarchy.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        permission on the Entity.
        </p>
      operationId: getBoundJsonSchema
      parameters:
      - name: id
        in: path
        description: The ID of the entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_JsonSchemaObjectBinding'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_JsonSchemaObjectBinding'
    put:
      tags:
      - EntityController
      summary: "."
      description: |-
        <p>
        Bind a JSON schema to an Entity. The bound schema will be used to validate
        the Entity's metadata (annotations). Any child Entity that does not have a
        bound schema will inherit the first bound schema found in its hierarchy.
        </p>
        <p>
        Only a single schema can be bound to an Entity at a time. If you have more
        than one schema to bind to an Entity you will need to create and bind a
        single composition schema using keywords such as 'anyOf', 'allOf' or 'oneOf'
        that defines how the schemas should be used for validation.
        </p>
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the Entity to bind.
        </p>
      operationId: bindJsonSchemaToEntity
      parameters:
      - name: id
        in: path
        description: The syn ID of the entity to bind.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The request identifies the JSON schema to bind.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_BindSchemaToEntityRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_BindSchemaToEntityRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_JsonSchemaObjectBinding'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_JsonSchemaObjectBinding'
      x-codegen-request-body-name: body
    delete:
      tags:
      - EntityController
      summary: Clear the bound JSON schema from this Entity.
      description: |-
        Clear the bound JSON schema from this Entity. The schema will no longer be
        used to validate this Entity or its children.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> permission on the Entity.
        </p>
      operationId: clearBoundSchema
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{id}/schema/validation:
    get:
      tags:
      - EntityController
      summary: Get the validation results of an Entity against its bound JSON schema.
      description: |-
        Get the validation results of an Entity against its bound JSON schema. The
        validation of an Entity against its bound schema is automatic and eventually
        consistent. The validation results include the etag of the Entity at the time
        of the last validation. If the returned etag does not match the current etag
        of the Entity then the results should be considered out-of-date. If an Entity
        has not been validated for the first time, or if the Entity does not have a
        bound schema, this method will return a 404 (not-found). Keep checking for
        the latest validation results.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        permission on the Entity.
        </p>
      operationId: getEntitySchemaValidationResults
      parameters:
      - name: id
        in: path
        description: The ID of the Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ValidationResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ValidationResults'
  /repo/v1/entity/{id}/schema/validation/invalid:
    post:
      tags:
      - EntityController
      summary: |-
        Get a single page of invalid JSON schema validation results for a container
        Entity (Project or Folder).
      description: |-
        Get a single page of invalid JSON schema validation results for a container
        Entity (Project or Folder). The validation of an Entity against its bound
        schema is automatic and eventually consistent. The validation results include
        the etag of the Entity at the time of the last validation. If the returned
        etag does not match the current etag of the Entity then the results should be
        considered out-of-date.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        permission on the container Entity. The results will only include children
        that the caller has the READ permission on.
        </p>
      operationId: getInvalidValidationResults
      parameters:
      - name: id
        in: path
        description: The ID of the container Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ListValidationResultsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ListValidationResultsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListValidationResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListValidationResultsResponse'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/schema/validation/statistics:
    get:
      tags:
      - EntityController
      summary: |-
        Get the The summary statistics of the JSON schema validation results for a
        single container Entity such as a Project or Folder.
      description: |-
        Get the The summary statistics of the JSON schema validation results for a
        single container Entity such as a Project or Folder. Only direct children of
        the container are included in the results. The statistics include the total
        number of children in the container, and the counts for both the invalid and
        valid children. If an Entity has not been validated for the first time, or it
        does not have bound schema it will be counted as 'unknown'.
        <p>
        The validation of an Entity against its bound schema is automatic and
        eventually consistent. Keep checking this method to get the latest validation
        statistics for the given container.
        </p>
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        permission on the container Entity. The resulting statistics will only
        include children that the caller has the READ permission on.
        </p>
      operationId: getEntitySchemaValidationStatistics
      parameters:
      - name: id
        in: path
        description: The ID of the container Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ValidationSummaryStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ValidationSummaryStatistics'
  /repo/v1/entity/{id}/sts:
    get:
      tags:
      - EntityController
      summary: Gets the temporary S3 credentials from STS for the given entity.
      description: |-
        Gets the temporary S3 credentials from STS for the given entity. These
        credentials are only good for the bucket and base key specified by the
        returned credentials and expire 12 hours after this API is called.

        <p>
        The specified entity must be a folder with an STS-enabled storage location.
        If that storage location is external storage, you may request read-only or
        read-write permissions. If that storage location is Synapse storage, you must
        request read-only permissions.
        </p>
      operationId: getTemporaryCredentialsForEntity
      parameters:
      - name: id
        in: path
        description: |-
          The ID of the entity to get credentials. This must be a
          folder with an STS-enabled storage location.
        required: true
        schema:
          type: string
      - name: permission
        in: query
        description: |-
          Read-only or read-write permissions. See <a href=
          "${org.sagebionetworks.repo.model.sts.StsPermission}">StsPermission</a>.
        required: true
        schema:
          type: string
          enum:
          - read_only
          - read_write
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_StsCredentials'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_StsCredentials'
  /repo/v1/entity/{id}/table/append/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: |-
        Asynchronously get the results of a PartialRowSet update to a table
        started with.
      description: |-
        Asynchronously get the results of a PartialRowSet update to a table
        started with <a href="${POST.entity.id.table.transaction.async.start}">POST
        /entity/{id}/table/transaction/async/start</a>
        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: getAppendRowsResult
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_RowReferenceSetResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_RowReferenceSetResults'
      deprecated: true
  /repo/v1/entity/{id}/table/append/async/start:
    post:
      tags:
      - TableController
      summary: "."
      description: |-
        <p>
        Asynchronously start a job to append row data to a table. This method is
        used to both add and update rows to a TableEntity. This method accepts
        either a <a href="${org.sagebionetworks.repo.model.table.RowSet}"
        >RowSet</a> for setting an entire row or a <a
        href="${org.sagebionetworks.repo.model.table.PartialRowSet}"
        >PartialRowSet</a> for setting a sub-set of the cells of a row.
        </p>
        <p>
        <B>PartialRowSet:</B> The passed PartialRowSet will contain some or all data for
        the rows to be added or updated. The PartialRowSet.rows is a list of
        PartialRows, one of each row to add or update. If the PartialRow.rowId is
        null, then a row will be added for that request, if a rowId is provided
        then the row with that ID will be updated (a 400 will be returned if a
        row ID is provided that does not actually exist). For inserts, the
        PartialRow.values should contain all the values the user wants to set
        explicitly. A null value will be replaced with the default value if
        appropriate. For updates, only the columns represented in
        PartialRow.values will be updated. Updates will always overwrite the
        current value of the cell. A null value for a column that has a default
        value, will be changed to the default value. A PartialRow.values
        identifies the column by ID in the key. When a row is added it will be
        issued both a rowId and a version number. When a row is updated it will
        be issued a new version number (each row version is immutable). If
        PartialRow.values is null, the corresponding row will be deleted. If
        PartialRow.values is an empty map, then no change will be made to that
        row.
        </p>
        <p>
        <B>RowSet</B>: The passed RowSet will contain all data for the rows to be added
        or updated. The RowSet.rows is a list of Rows, one of each row to add or
        update. If the Row.rowId is null, then a row will be added for that
        request, if a rowId is provided then the row with that ID will be updated
        (a 400 will be returned if a row ID is provided that does not actually
        exist). The Row.values list should contain a value for each column of the
        row. The RowSet.headers identifies the columns (by ID) that are to be
        updated by this request. Each Row.value list must be the same size as the
        RowSet.headers, as each value is mapped to a column by the index of these
        two arrays. When a row is added it will be issued both a rowId and a
        version number. When a row is updated it will be issued a new version
        number (each row version is immutable). The resulting RowReferenceSet
        will enumerate all rowIds and versionNumbers for this update. The
        resulting RowReferences will be listed in the same order as the passed
        result set. A single POST to this service will be treated as a single
        transaction, meaning either all of the rows will be added/updated or none
        of the rows will be added/updated. If this web-services fails for any
        reason all changes will be "rolled back".
        </p>
        <p>
        The resulting RowReferenceSet will enumerate all rowIds and
        versionNumbers for this update. The resulting RowReferences will be
        listed in the same order as the passed result set. A single POST to this
        services will be treated as a single transaction, meaning either all of
        the rows will be added/updated or none of the rows will be added/updated.
        If this web-services fails for any reason all changes will be
        "rolled back".
        </p>
        <p>
        There is a limit to the size of a request that can be passed in a single
        web-services call. Currently, that limit is set to a maximum size of 2 MB
        per call. The maximum size is calculated based on the maximum possible
        size of the ColumnModel definition, NOT on the size of the actual passed
        data. For example, the maximum size of an integer column is 20
        characters. Since each integer is represented as a UTF-8 string (not a
        binary representation) with 1 byte per character (for numbers), a single
        integer has a maximum size of 20 bytes (20 chars * 1 bytes/char). Since
        the page size limits are based on the maximum size and not the actual
        size of the data it will be consistent from page to page. This means a
        valid page size will work for a all pages even if some pages have more
        data that others.
        </p>
        <p>
        Note: The caller must have the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the TableEntity to make this call.
        </p>
      operationId: startAppendRowsJob
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity to append rows to.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Contains the set of rows to add/update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AppendableRowSetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AppendableRowSetRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/file:
    get:
      tags:
      - TableController
      summary: |-
        Get the actual URL of the file associated with a specific version of a
        row and file handle column.
      description: |-
        Get the actual URL of the file associated with a specific version of a
        row and file handle column.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
      operationId: fileRedirectURLForRow
      parameters:
      - name: columnId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: rowId
        in: path
        required: true
        schema:
          type: number
      - name: versionNumber
        in: path
        required: true
        schema:
          type: number
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/filepreview:
    get:
      tags:
      - TableController
      summary: |-
        Get the preview URL of the file associated with a specific version of a
        row and file handle column.
      description: |-
        Get the preview URL of the file associated with a specific version of a
        row and file handle column.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
      operationId: filePreviewRedirectURLForRow
      parameters:
      - name: columnId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: rowId
        in: path
        required: true
        schema:
          type: number
      - name: versionNumber
        in: path
        required: true
        schema:
          type: number
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{id}/table/deleteRows:
    post:
      tags:
      - TableController
      operationId: deleteRows
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_RowSelection'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_RowSelection'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_RowReferenceSet'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_RowReferenceSet'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/download/csv/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: Asynchronously get the results of a csv download started with.
      description: |-
        Asynchronously get the results of a csv download started with <a
        href="${POST.entity.id.table.download.csv.async.start}">POST
        /entity/{id}/table/download/csv/async/start</a>

        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: csvDownloadAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DownloadFromTableResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DownloadFromTableResult'
  /repo/v1/entity/{id}/table/download/csv/async/start:
    post:
      tags:
      - TableController
      summary: Asynchronously start a csv download.
      description: |-
        Asynchronously start a csv download. Use the returned job id and <a
        href="${GET.entity.id.table.download.csv.async.get.asyncToken}">GET
        /entity/{id}/table/download/csv/async/get</a> to get the results of the query
      operationId: csvDownloadAsyncStart
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_DownloadFromTableRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_DownloadFromTableRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/filehandles:
    post:
      tags:
      - TableController
      summary: "."
      description: |-
        <p>
        This method is used to get file handle information for rows in a
        TableEntity. The columns in the passed in RowReferenceSet need to be
        FILEHANDLEID columns and the rows in the passed in RowReferenceSet need
        to exists (a 400 will be returned if a row ID is provided that does not
        actually exist). The order of the returned rows of file handles is the
        same as the order of the rows requested, and the order of the file
        handles in each row is the same as the order of the columns requested.
        </p>
        <p>
        Note: The caller must have the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the TableEntity to make this call.
        </p>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum frequency this method can be called</td>
        <td>1 calls per second</td>
        </tr>
        </table>
        </p>
      operationId: getFileHandles
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity to append rows to.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_RowReferenceSet'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_RowReferenceSet'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_TableFileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_TableFileHandleResults'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/query/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: Asynchronously get the results of a query started with.
      description: |-
        Asynchronously get the results of a query started with <a
        href="${POST.entity.id.table.query.async.start}">POST /entity/{id}/table/query/async/start</a>.

        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: queryAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_QueryResultBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_QueryResultBundle'
  /repo/v1/entity/{id}/table/query/async/start:
    post:
      tags:
      - TableController
      summary: Asynchronously start a query.
      description: |-
        Asynchronously start a query. Use the returned job id and <a
        href="${GET.entity.id.table.query.async.get.asyncToken}">GET
        /entity/{id}/table/query/async/get</a> to get the results of the query
        <p>
        Using a 'SQL like' syntax, query the current version of the rows in a
        single table. The following pseudo-syntax is the basic supported format:
        </p>
        SELECT <br>
        [ALL | DISTINCT] select_expr [, select_expr ...] <br>
        FROM synapse_table_id <br>
        [WHERE where_condition] <br>
        [GROUP BY {col_name [, [col_name * ...] } <br>
        [ORDER BY {col_name [ [ASC | DESC] [, col_name [ [ASC | DESC]]}<br>
        [LIMIT row_count [ OFFSET offset ]]<br>
        <p>
        Please see the following for samples: <a
        href="${org.sagebionetworks.repo.web.controller.TableExamples}">Table SQL
        Examples</a>
        </p>
        <p>
        Note: Sub-queries and joining tables is not supported.
        </p>
        <p>
        This services depends on an index that is created/update asynchronously
        from table creation and update events. This means there could be short
        window of time when the index is inconsistent with the true state of the
        table. When the index is out-of-synch, then a status code of 202
        (ACCEPTED) will be returned and the response body will be a <a
        href="${org.sagebionetworks.repo.model.table.TableStatus}"
        >TableStatus</a> object. The TableStatus will indicates the current
        status of the index including how much work is remaining until the index
        is consistent with the truth of the table.
        </p>
        <p>
        The 'partsMask' is an integer "mask" that can be combined into to request
        any desired part. As of this writing, the mask is defined as follows (see <a href="${org.sagebionetworks.repo.model.table.QueryBundleRequest}">QueryBundleRequest</a>):
        <ul>
        <li>Query Results <i>(queryResults)</i> = 0x1</li>
        <li>Query Count <i>(queryCount)</i> = 0x2</li>
        <li>Select Columns <i>(selectColumns)</i> = 0x4</li>
        <li>Max Rows Per Page <i>(maxRowsPerPage)</i> = 0x8</li>
        <li>The Table Columns <i>(columnModels)</i> = 0x10</li>
        <li>Facet statistics for each faceted column <i>(facetStatistics)</i> = 0x20</li>
        <li>The sum of the file sizes <i>(sumFileSizesBytes)</i> = 0x40</li>
        </ul>
        </p>
        <p>
        For example, to request all parts, the request mask value should be: <br>
        0x1 OR 0x2 OR 0x4 OR 0x8 OR 0x10 OR 0x20 OR 0x40 = 0x7F.
        </p>
        <p>
        Note: The caller must have the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the TableEntity to make this call.
        </p>
      operationId: queryAsyncStart
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_QueryBundleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_QueryBundleRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/query/nextPage/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: Asynchronously get the results of a nextPage query started with.
      description: |-
        Asynchronously get the results of a nextPage query started with <a
        href="${POST.entity.id.table.query.nextPage.async.start}">POST
        /entity/{id}/table/query/nextPage/async/start</a>

        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: queryNextPageAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_QueryResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_QueryResult'
      deprecated: true
  /repo/v1/entity/{id}/table/query/nextPage/async/start:
    post:
      tags:
      - TableController
      summary: Asynchronously get a next page of a query.
      description: |-
        Asynchronously get a next page of a query. Use the returned job id and <a
        href="${POST.entity.id.table.query.nextPage.async.start}">POST
        /entity/{id}/table/query/nextPage/async/start</a> to get the results of the query.
        The page token comes from the query result of a <a
        href="${GET.entity.id.table.query.async.get.asyncToken}">GET
        /entity/{id}/table/query/async/get</a>.
      operationId: queryNextPageAsyncStart
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_QueryNextPageToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_QueryNextPageToken'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/snapshot:
    post:
      tags:
      - TableController
      summary: Request to create a new snapshot of a table.
      description: |-
        Request to create a new snapshot of a table. The provided comment, label, and
        activity ID will be applied to the current version thereby creating a
        snapshot and locking the current version. After the snapshot is created a new
        version will be started with an 'in-progress' label.
        <p>
        NOTE: This service is for
        <a href= "${org.sagebionetworks.repo.model.table.TableEntity}"
        >TableEntities</a> only. Snapshots of
        <a href= "${org.sagebionetworks.repo.model.table.EntityView}"
        >EntityViews</a> require asynchronous processing and can be created via:
        <a href="${POST.entity.id.table.transaction.async.start}">POST
        /entity/{id}/table/transaction/async/start</a>
        </p>
      operationId: createSnapshot
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SnapshotRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SnapshotRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SnapshotResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SnapshotResponse'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/transaction/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: Asynchronously get the results of a table update transaction started
        with.
      description: |-
        Asynchronously get the results of a table update transaction started with
        <a href="${POST.entity.id.table.transaction.async.start}">POST
        /entity/{id}/table/transaction/async/start</a>
        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: getTableTransactionResult
      parameters:
      - name: asyncToken
        in: path
        description: The token returned when the job was started.
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the table entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_TableUpdateTransactionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_TableUpdateTransactionResponse'
  /repo/v1/entity/{id}/table/transaction/async/start:
    post:
      tags:
      - TableController
      summary: |-
        Start a table update job that will attempt to make all of the requested changes in
        a single transaction.
      description: |-
        Start a table update job that will attempt to make all of the requested changes in
        a single transaction. All updates will either succeed or fail as a unit.  All update
        requests must be for the same table.
        <p>
        Note: The caller must have the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the TableEntity to make this call.
        </p>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum size of a PartialRow change </td>
        <td>2 MB</td>
        </tr>
        <tr>
        <td>The maximum size of a CSV that can be appended to a table</td>
        <td>1 GB</td>
        </tr>
        </table>
        </p>
      operationId: startTableTransactionJob
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: List of table update requests to be applied as a single transaction.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_TableUpdateTransactionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_TableUpdateTransactionRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/table/upload/csv/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: Asynchronously get the results of a csv upload started with.
      description: |-
        Asynchronously get the results of a csv upload started with <a
        href="${POST.entity.id.table.upload.csv.async.start}">POST
        /entity/{id}/table/upload/csv/async/start</a>

        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: csvUploadAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UploadToTableResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UploadToTableResult'
  /repo/v1/entity/{id}/table/upload/csv/async/start:
    post:
      tags:
      - TableController
      summary: "."
      description: |-
        <p>
        Asynchronously start a csv upload. Use the returned job id and
        <a href="${GET.entity.id.table.upload.csv.async.get.asyncToken}">GET
        /entity/{id}/table/upload/csv/async/get</a> to get the results of the query
        </p>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum size of a CSV that can be appended to a table</td>
        <td>1 GB</td>
        </tr>
        </table>
        </p>
      operationId: csvUploadAsyncStart
      parameters:
      - name: id
        in: path
        description: The ID of the TableEntity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_UploadToTableRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_UploadToTableRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/threads:
    get:
      tags:
      - DiscussionController
      summary: |-
        This API is used to get N number of threads that belongs to projects user
        can view and references the given entity.
      description: |-
        This API is used to get N number of threads that belongs to projects user
        can view and references the given entity.
        <br/>
        Target users: anyone who has READ permission to the entity.
      operationId: getThreadsForEntity
      parameters:
      - name: id
        in: path
        description: '- The request entityId'
        required: true
        schema:
          type: string
      - name: ascending
        in: query
        description: '- The direction of sort: true for ascending, and false for descending'
        schema:
          type: boolean
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum Limit for this call is 20.'
        required: true
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        required: true
        schema:
          type: number
      - name: sort
        in: query
        description: '- The field to sort the resulting threads on. Available options:
          <a href="${org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder}">DiscussionThreadOrder</a>.'
        schema:
          type: string
          enum:
          - NUMBER_OF_REPLIES
          - NUMBER_OF_VIEWS
          - PINNED_AND_LAST_ACTIVITY
          - THREAD_TITLE
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDiscussionThreadBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDiscussionThreadBundle'
  /repo/v1/entity/{id}/type:
    get:
      tags:
      - EntityController
      summary: Get the EntityHeader of an Entity given its ID.
      description: |-
        Get the EntityHeader of an Entity given its ID. The EntityHeader is a light
        weight object with basic information about an Entity includes its type.
      operationId: getEntityType
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to get the EntityHeader for.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Get the EntityHeader of an Entity given its ID. The EntityHeader is a light
          weight object with basic information about an Entity includes its type.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityHeader'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/version:
    get:
      tags:
      - EntityController
      summary: Get all versions of an Entity one page at a time.
      description: Get all versions of an Entity one page at a time.
      operationId: getAllVersionsOfEntity
      parameters:
      - name: id
        in: path
        description: The ID of the Entity to get all versions for.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for
          this page. When null it will default to 10.
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start
          from. When null it will default to 0.
        schema:
          type: integer
          default: 0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfVersionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfVersionInfo'
    put:
      tags:
      - EntityController
      summary: This is a duplicate method to update.
      description: This is a duplicate method to update.
      operationId: createNewVersion
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: generatedBy
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: This is a duplicate method to update.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Versionable'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Versionable'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/version/{versionNumber}:
    get:
      tags:
      - EntityController
      summary: Get a specific version of an Entity.
      description: |-
        Get a specific version of an Entity.
        <p>
        Note: Only the current version of the Entity can be used for an Entity
        update. Therefore, only the current version of the Entity will be returned
        with the actual etag. All older versions will be returned with an eTag
        '00000000-0000-0000-0000-000000000000'.
        </p>
      operationId: getEntityForVersion
      parameters:
      - name: id
        in: path
        description: The ID of the Entity.
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The version number of the Entity to get.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Entity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Entity'
    delete:
      tags:
      - EntityController
      summary: Delete a specific version of a FileEntity.
      description: Delete a specific version of a FileEntity.
      operationId: deleteEntityVersion
      parameters:
      - name: id
        in: path
        description: The ID of the Entity
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The version number of the Entity to delete.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Delete a specific version of a FileEntity.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/version/{versionNumber}/annotations:
    get:
      tags:
      - EntityController
      summary: Get an Entity's annotations for a specific version of a FileEntity.
      description: Get an Entity's annotations for a specific version of a FileEntity.
      operationId: getEntityAnnotationsForVersion
      parameters:
      - name: id
        in: path
        description: The ID of the Entity.
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The version number of the Entity.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Annotations'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Annotations'
      deprecated: true
  /repo/v1/entity/{id}/version/{versionNumber}/annotations2:
    get:
      tags:
      - EntityController
      summary: Get an Entity's annotations for a specific version of a FileEntity.
      description: Get an Entity's annotations for a specific version of a FileEntity.
      operationId: getEntityAnnotationsV2ForVersion
      parameters:
      - name: id
        in: path
        description: The ID of the Entity.
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The version number of the Entity.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Annotations_v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Annotations_v2'
  /repo/v1/entity/{id}/version/{versionNumber}/bundle:
    get:
      tags:
      - EntityBundleController
      summary: Get an entity at a specific version and its related data with a single
        GET.
      description: Get an entity at a specific version and its related data with a
        single GET.
      operationId: getEntityBundle
      parameters:
      - name: id
        in: path
        description: '- The ID of the entity to fetch.'
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: '- The version of the entity to fetch'
        required: true
        schema:
          type: number
      - name: mask
        in: query
        description: '- integer flag defining which components to include in the EntityBundle.'
        required: true
        schema:
          type: integer
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityBundle'
      deprecated: true
  /repo/v1/entity/{id}/version/{versionNumber}/bundle2:
    post:
      tags:
      - EntityBundleV2Controller
      summary: Get an entity at a specific version and its related data with a single
        POST.
      description: Get an entity at a specific version and its related data with a
        single POST.
      operationId: getEntityBundle2
      parameters:
      - name: id
        in: path
        description: '- The ID of the entity to fetch.'
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: '- The version of the entity to fetch'
        required: true
        schema:
          type: number
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EntityBundleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EntityBundleRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityBundle_v2'
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/version/{versionNumber}/doi:
    get:
      tags:
      - DoiController
      summary: This service is deprecated.
      description: |-
        This service is deprecated. See: <a href="${GET.doi}">GET /doi</a> and
        <a href="${GET.doi.association}">GET /doi/association</a>
      operationId: getDoiForVersion
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
    put:
      tags:
      - DoiController
      summary: This service is deprecated.
      description: 'This service is deprecated. See: <a href="${POST.doi.async.start}">POST
        /doi/async/start</a>'
      operationId: createDoiForVersion
      responses:
        202:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
  /repo/v1/entity/{id}/version/{versionNumber}/file:
    get:
      tags:
      - EntityController
      summary: |-
        Get the actual URL of the file associated with a specific version of a
        FileEntity.
      description: |-
        Get the actual URL of the file associated with a specific version of a
        FileEntity.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the actual
        file URL if the caller meets all of the download requirements.
        </p>
      operationId: fileRedirectURLForVersion
      parameters:
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The version number of the FileEntity to get.
        required: true
        schema:
          type: number
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as
          text/plain instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
  /repo/v1/entity/{id}/version/{versionNumber}/filehandle:
    put:
      tags:
      - EntityController
      summary: Updates the.
      description: |-
        Updates the <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a> associated with the <a href= "${org.sagebionetworks.repo.model.FileEntity}">FileEntity</a>
        with the provided entity id and version.
      operationId: updateEntityFileHandle
      parameters:
      - name: id
        in: path
        description: The id of the file entity
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The entity version
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_FileHandleUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_FileHandleUpdateRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/entity/{id}/version/{versionNumber}/filehandles:
    get:
      tags:
      - EntityController
      summary: |-
        Get the FileHandles of the file associated with a specific version of a
        FileEntity.
      description: |-
        Get the FileHandles of the file associated with a specific version of a
        FileEntity.
        <p>
        If a preview exists for the file then the handle of the preview and the file
        will be returned with this call.
        </p>
      operationId: getEntityFileHandlesForVersion
      parameters:
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The version number of the FileEntity to get
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
  /repo/v1/entity/{id}/version/{versionNumber}/filepreview:
    get:
      tags:
      - EntityController
      summary: |-
        Get the URL of the preview file associated with a specific version of a
        FileEntity.
      description: |-
        Get the URL of the preview file associated with a specific version of a
        FileEntity.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the actual
        file URL if the caller meets all of the download requirements.
        </p>
      operationId: filePreviewRedirectURLForVersion
      parameters:
      - name: id
        in: path
        description: The ID of the FileEntity to get.
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: The version number of the FileEntity to get.
        required: true
        schema:
          type: number
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as
          text/plain instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{id}/version/{versionNumber}/generatedBy:
    get:
      tags:
      - EntityController
      summary: Get an existing activity for a specific version of an Entity.
      description: Get an existing activity for a specific version of an Entity.
      operationId: getActivityForEntityVersion
      parameters:
      - name: id
        in: path
        description: The ID of the entity to fetch.
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        description: the version of the entity
        required: true
        schema:
          type: number
      - name: userId
        in: query
        description: -The user that is doing the get.
        required: true
        schema:
          type: number
      requestBody:
        description: Get an existing activity for a specific version of an Entity.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Activity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Activity'
      x-codegen-request-body-name: body
  /repo/v1/entity/{ownerId}/wiki:
    get:
      tags:
      - WikiController
      summary: Get the root WikiPage for an Entity.
      description: |-
        Get the root WikiPage for an Entity.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityRootWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
    post:
      tags:
      - WikiController
      summary: Create a WikiPage with an Entity as an owner.
      description: |-
        Create a WikiPage with an Entity as an owner.

        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CREATE</a> permission on the owner.
        </p>
        <p>
        If the passed WikiPage is a root (parentWikiId = null) and the owner
        already has a root WikiPage, an error will be returned.
        </p>
      operationId: createEntityWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owner Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user's id.
        required: true
        schema:
          type: number
      requestBody:
        description: The WikiPage to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
      x-codegen-request-body-name: body
  /repo/v1/entity/{ownerId}/wiki/{wikiId}:
    get:
      tags:
      - WikiController
      summary: Get a specific WikiPage of of an Entity.
      description: |-
        Get a specific WikiPage of of an Entity.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        description: When included returns a specific version of a wiki.
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
    put:
      tags:
      - WikiController
      summary: Update a specific WikiPage of an Entity.
      description: |-
        Update a specific WikiPage of an Entity.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is request, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: updateEntityWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
      x-codegen-request-body-name: body
    delete:
      tags:
      - WikiController
      summary: Delete a specific WikiPage of an Entity.
      description: |-
        Delete a specific WikiPage of an Entity.
        <p>
        Note: When a WikiPage is deleted, the delete will cascade to all children
        WikiPages (recursively) of the deleted WikiPage.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> permission on the owner.
        </p>
      operationId: deleteEntityWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{ownerId}/wiki/{wikiId}/attachment:
    get:
      tags:
      - WikiController
      summary: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
      description: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiAttachmentFile
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">GET
          /entity/{ownerId}/wiki/{wikiId}/attachmenthandles</a> method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmenthandles:
    get:
      tags:
      - WikiController
      summary: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Entity.
      description: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Entity. This list will include Previews if
        they exist and will provide information about file sizes, content types
        and names.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiAttachmenthHandles
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
  /repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmentpreview:
    get:
      tags:
      - WikiController
      summary: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
      description: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiAttachmenPreviewFile
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">GET
          /entity/{ownerId}/wiki/{wikiId}/attachmenthandles</a> method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{ownerId}/wiki2:
    get:
      tags:
      - V2WikiController
      summary: Get the root WikiPage for an Entity.
      description: |-
        Get the root WikiPage for an Entity.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityRootWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
    post:
      tags:
      - V2WikiController
      summary: Create a WikiPage with an Entity as an owner.
      description: |-
        Create a WikiPage with an Entity as an owner.

        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CREATE</a> permission on the owner.
        </p>
        <p>
        If the passed WikiPage is a root (parentWikiId = null) and the owner
        already has a root WikiPage, an error will be returned.
        </p>
      operationId: createEntityWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owner Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user's id.
        required: true
        schema:
          type: number
      requestBody:
        description: The WikiPage to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
      x-codegen-request-body-name: body
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}:
    get:
      tags:
      - V2WikiController
      summary: Get a specific WikiPage of an Entity.
      description: |-
        Get a specific WikiPage of an Entity.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        description: When included returns a specific version of a wiki.
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
    put:
      tags:
      - V2WikiController
      summary: Update a specific WikiPage of an Entity.
      description: |-
        Update a specific WikiPage of an Entity. This adds a new entry
        to the history of changes made to this specific WikiPage.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is requested, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: updateEntityWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
      x-codegen-request-body-name: body
    delete:
      tags:
      - V2WikiController
      summary: Delete a specific WikiPage of an Entity.
      description: |-
        Delete a specific WikiPage of an Entity.
        <p>
        Note: When a WikiPage is deleted, the delete will cascade to all children
        WikiPages (recursively) of the deleted WikiPage.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> permission on the owner.
        </p>
      operationId: deleteEntityWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachment:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
      description: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiAttachmentFile2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">GET
          /entity/{ownerId}/wiki/{wikiId}/attachmenthandles</a> method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmenthandles:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Entity.
      description: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Entity. This list will include Previews if
        they exist and will provide information about file sizes, content types
        and names.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiAttachmenthHandles2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmentpreview:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
      description: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiAttachmenPreviewFile2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">GET
          /entity/{ownerId}/wiki/{wikiId}/attachmenthandles</a> method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/markdown:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download the markdown file for a given
        WikiPage.
      description: |-
        Get a URL that can be used to download the markdown file for a given
        WikiPage.

        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiMarkdownFile
      parameters:
      - name: ownerId
        in: path
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/wikihistory:
    get:
      tags:
      - V2WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot}">V2WikiHistorySnapshot</a>
        that belong to a specific WikiPage, which belong to the given owner Entity. The resulting list
        can be used to display a timeline of changes to the specific WikiPage for this owner.
        The first V2WikiHistorySnapshot describes the most recent change or update to the WikiPage.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiHistory
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10. Limit must be 50 or less.
        required: true
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHistorySnapshot'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHistorySnapshot'
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/{wikiVersion}:
    put:
      tags:
      - V2WikiController
      summary: For a specific WikiPage of an Entity, restore a version of the WikiPage's
        content.
      description: |-
        For a specific WikiPage of an Entity, restore a version of the WikiPage's content.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is requested, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: restoreEntityWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: wikiVersion
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
  /repo/v1/entity/{ownerId}/wiki2orderhint:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get an order hint
        that corresponds to the given owner Entity.
      description: |-
        Get an order hint
        that corresponds to the given owner Entity. The resulting hint can be used to
        establish a relative ordering for the subwikis in
        a tree of the WikiPages for this owner.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiOrderHint
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiOrderHint'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiOrderHint'
    put:
      tags:
      - V2WikiController
      summary: Update an order hint that corresponds to the given owner Entity.
      description: |-
        Update an order hint that corresponds to the given owner Entity.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time an WikiOrderHint is updated a new etag will be
        issued to the WikiOrderHint. When an update is requested, Synapse will compare
        the etag of the passed WikiOrderHint with the current etag of the WikiOrderHint. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiOrderHint and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: updateEntityWikiOrderHint
      parameters:
      - name: ownerId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_V2WikiOrderHint'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_V2WikiOrderHint'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiOrderHint'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiOrderHint'
      x-codegen-request-body-name: body
  /repo/v1/entity/{ownerId}/wikiheadertree:
    get:
      tags:
      - WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.wiki.WikiHeader}">WikiHeaders</a>
        that belong to the given owner Entity. The resulting list can be used to
        build a tree of the WikiPages for this owner. The first WikiHeader will
        be for the root WikiPage (parentWikiId = null).
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiHeaderTree
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10.
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfWikiHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfWikiHeader'
  /repo/v1/entity/{ownerId}/wikiheadertree2:
    get:
      tags:
      - V2WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader}">V2WikiHeaders</a>
        that belong to the given owner Entity. The resulting list can be used to
        build a tree of the WikiPages for this owner. The first WikiHeader will
        be for the root WikiPage (parentWikiId = null).
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityWikiHeaderTree2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10. Limit must be 50 or less.
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHeader'
  /repo/v1/entity/{ownerId}/wikikey:
    get:
      tags:
      - WikiController
      summary: Get the root WikiPageKey for an Entity.
      description: |-
        Get the root WikiPageKey for an Entity.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEntityRootWikiKey
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPageKey'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPageKey'
  /repo/v1/evaluation:
    get:
      tags:
      - EvaluationController
      summary: Gets a collection of Evaluations, within a given range.
      description: |-
        Gets a collection of Evaluations, within a given range.

        <p>
        <b>Note:</b> The response will contain only those Evaluations on which the caller is
        granted the <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.READ</a>
        permission, unless specified otherwise with the accessType parameter.
        </p>
      operationId: getEvaluationsPaginated
      parameters:
      - name: accessType
        in: query
        description: The type of access for the user to filter for, optional and defaults
          to <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.READ</a>
        schema:
          type: string
          default: READ
          enum:
          - CHANGE_PERMISSIONS
          - CHANGE_SETTINGS
          - CREATE
          - DELETE
          - DELETE_SUBMISSION
          - DOWNLOAD
          - MODERATE
          - PARTICIPATE
          - READ
          - READ_PRIVATE_SUBMISSION
          - SEND_MESSAGE
          - SUBMIT
          - TEAM_MEMBERSHIP_UPDATE
          - UPDATE
          - UPDATE_SUBMISSION
          - UPLOAD
      - name: activeOnly
        in: query
        description: If 'true' then return only those evaluations with rounds defined
          and for which the current time is in one of the rounds.
        schema:
          type: boolean
          default: false
      - name: evaluationIds
        in: query
        description: an optional, comma-delimited list of evaluation IDs to which
          the response is limited
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first entity. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEvaluation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEvaluation'
    post:
      tags:
      - EvaluationController
      summary: Creates a new Evaluation.
      description: |-
        Creates a new Evaluation. The passed request body should contain the following fields:
        <ul>
        <li>name - Give your new Evaluation a name.</li>
        <li>contentSource - The ID of the parent Entity, such as a Folder or Project.</li>
        <li>status - The initial state of the Evaluation, an
        <a href="${org.sagebionetworks.evaluation.model.EvaluationStatus}">EvaluationStatus</a></li>
        </ul>
        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CREATE</a> on the contentSource Entity.
        </p>
      operationId: createEvaluation
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Evaluation'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Evaluation'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
      x-codegen-request-body-name: body
  /repo/v1/evaluation/acl:
    put:
      tags:
      - EvaluationController
      summary: Updates the supplied access control list (ACL) for an evaluation.
      description: |-
        Updates the supplied access control list (ACL) for an evaluation.
        The <a href="${org.sagebionetworks.repo.model.AccessControlList}">ACL</a>
        to be updated should have the ID of the evaluation. The user should have the proper
        <a href="${org.sagebionetworks.evaluation.model.UserEvaluationPermissions}">permissions</a>
        in order to update the ACL.
      operationId: updateAcl
      parameters:
      - name: userId
        in: query
        description: The user updating the ACL.
        required: true
        schema:
          type: number
      requestBody:
        description: The ACL being updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
      x-codegen-request-body-name: body
    post:
      tags:
      - EvaluationController
      summary: This method is deprecated and should be removed from future versions
        of the API.
      description: |-
        This method is deprecated and should be removed from future versions of the API.
        Creates a new access control list (ACL) for an evaluation.
      operationId: createAcl
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
      deprecated: true
  /repo/v1/evaluation/available:
    get:
      tags:
      - EvaluationController
      summary: Gets a collection of Evaluations in which the user has SUBMIT permission,
        within a given range.
      description: |-
        Gets a collection of Evaluations in which the user has SUBMIT permission, within a given range.

        <p>
        <b>Note:</b> The response will contain only those Evaluations on which the caller must is
        granted the <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.SUBMIT</a>
        permission.
        </p>

        </p>
      operationId: getAvailableEvaluationsPaginated
      parameters:
      - name: activeOnly
        in: query
        schema:
          type: boolean
          default: false
      - name: evaluationIds
        in: query
        description: an optional, comma-delimited list of evaluation IDs to which
          the response is limited
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first evaluation. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEvaluation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEvaluation'
  /repo/v1/evaluation/name/{name}:
    get:
      tags:
      - EvaluationController
      summary: Finds an Evaluation by name.
      description: |-
        Finds an Evaluation by name.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> on the specified Evaluation.
        </p>
      operationId: findEvaluation
      parameters:
      - name: name
        in: path
        description: '- the name of the desired Evaluation.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
  /repo/v1/evaluation/submission:
    post:
      tags:
      - EvaluationController
      summary: Creates a Submission and sends a submission notification email to the
        submitter's team members.
      description: |-
        Creates a Submission and sends a submission notification email to the submitter's team members.

        The passed request body should contain the following fields:
        <ul>
        <li>evaluationId - The ID of the Evaluation to which this Submission belongs.</li>
        <li>entityId - The ID of the Entity being submitted.</li>
        <li>versionNumber - The specific version of the Entity being submitted.</li>
        </ul>
        <p>
        A Submission must be either a Team or an Individual submission.  A Team submission must
        include a Team ID in the teamId field and the request must include a submissionEligibilityHash
        request parameter.  A Team submission may also include a list of submission contributors.
        (The submitter is taken to be a contributor and need not be included in the list.)
        An individual submission must have a null teamId, a null or empty contributor list, and no
        submissionEligibilityHash parameter.
        </p>
        <p>
        <b>Note:</b> The caller must be granted the <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.SUBMIT</a>.
        </p>
        <p>
        This call also creates an associated <a href="${org.sagebionetworks.evaluation.model.SubmissionStatus}">SubmissionStatus</a>,
        initialized with a SubmissionStatusEnum value of RECEIVED.
        </p>
      operationId: createSubmission
      parameters:
      - name: challengeEndpoint
        in: query
        description: |-
          The portal endpoint prefix to the an entity/challenge page. The entity ID of the
          challenge project is appended to create the complete URL. In normal operation, this parameter should be omitted.
        schema:
          type: string
          default: 'https://www.synapse.org/#!Synapse:'
      - name: etag
        in: query
        description: The current eTag of the Entity being submitted
        schema:
          type: string
      - name: notificationUnsubscribeEndpoint
        in: query
        description: |-
          The portal endpoint prefix for one-click email unsubscription.
          A signed, serialized token is appended to create the complete URL:
          <a href="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}">NotificationSettingsSignedToken</a>.
          In normal operation, this parameter should be omitted.
        schema:
          type: string
          default: https://www.synapse.org/#!SignedToken:Settings/
      - name: submissionEligibilityHash
        in: query
        description: |-
          The hash provided by the
          <a href="${org.sagebionetworks.evaluation.model.TeamSubmissionEligibility}">TeamSubmissionEligibility</a>
          object.
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Submission_model'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Submission_model'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Submission_model'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Submission_model'
      x-codegen-request-body-name: body
  /repo/v1/evaluation/submission/query:
    get:
      tags:
      - EvaluationController
      summary: Executes a user-defined query over the Submissions of a specific Evaluation.
      description: |-
        Executes a user-defined query over the Submissions of a specific Evaluation. Queries have the following form:

        <p/>
        SELECT &lt;fields&gt; FROM evaluation_&lt;id&gt; [WHERE &lt;filter&gt; (AND &lt;filter&gt;)*] [ORDER BY &lt;name&gt; asc|desc] [LIMIT &lt;L&gt; OFFSET &lt;O&gt;]
        <p/>
        where
        <p/>
        &lt;fields&gt; is either "*" or a comma delimited list of names
        <br/>
        <ul>
        <li>&lt;name&gt; is the name either of a system-defined field in a Submission or of a user-defined annotation.  The system-defined field names are:
        objectId, scopeId, userId, submitterAlias, entityId, versionNumber, name, createdOn, modifiedOn, and status.
        Note:  If a user-defined annotation name and type of value matches/collides with those of a system-defined field,
        the query will be against the field name, not the user defined annotation.</li>
        <li>&lt;id&gt; is the Evaluation's ID</li>
        <li>&lt;filter&gt; = &lt;name&gt; &lt;comparator&gt; &lt;value&gt;</li>
        <li>&lt;comparator&gt; is one of ==, !=, >, <, >=, or <=</li>
        <li>&lt;value&gt; is an annotation value, of type string, integer, or decimal</li>
        <li>&lt;L&gt; and &lt;O&gt; are optional limit and offset pagination parameters, limit>=1 and offset>=0.
        Note:  If pagination is used, LIMIT must precede OFFSET and the pair of parameters must follow ORDER BY (if used).</li>
        </ul>
        <br/>
        <p/>
        Examples:<br/>
        SELECT * FROM evaluation_123 WHERE myAnnotation == "foo"<br/>
        SELECT entityId, status, myAnnotation FROM evaluation_123 WHERE myAnnotation == "foo" AND status="RECEIVED"<br/>
        SELECT * FROM evaluation_123 order by status asc limit 20 offset 10<br/>
        <p/>
        Note:  The query is a <i>parameter</i> of the http request whose key is 'query' and the query parameter is URL encoded, so the URI is of the form:
        <br/>/evaluation/submission/query?query=select+*+from+evalution_123+WHERE+...<br/>
        <p/>
        <p/>
        Notes:
        <p/>
        User must be granted READ access to the Evaluation in order to issue any query.  READ_PRIVATE access provides access to those
        annotations having their "isPrivate" flag set to true.
        <p/>
        IF "SELECT *" is used and if the user lacks READ_PRIVATE access to the Evaluation, then any private annotations will
        be omitted from the resulting column headers.  However, if the selected annotations are specified explicitly then private
        annotation names <i>will</i> be included in the column headers, but their values will be returned as null.
        Further, if the private annotation is included in a filter then no results are returned.
        <p/>
        Filtering on 'myAnnotaton==null' is allowed, but will only return entries having 'myAnnotation' explicitly set to null,
        and not entries which simply have no annotation called 'myAnnotation'.
        <p/>
        While privacy levels for user defined annotations are set by the user, the privacy level of system-defined fields are always public.
        <br/>
        The following fields are system-defined:
        <br/>
        userId, teamId, submitterId, name, createdOn, submitterAlias, repositoryName, dockerDigest, objectId, scopeId, entityId, versionNumber, modifiedOn, status, canCancel, cancelRequested,
        and <a href="${org.sagebionetworks.evaluation.model.CancelControl}">CancelControl</a> are public.

        The submitterId field will be equal to either the userId, if the submission is for an individual, or the teamId, if the submission is on behalf of a team.

        <p/>
        The query is to be URL encoded in the submitted request.
        </p>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum frequency this method can be called</td>
        <td>1 calls per second</td>
        </tr>
        </table>
        </p>
      operationId: query
      parameters:
      - name: query
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_QueryTableResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_QueryTableResults'
      deprecated: true
  /repo/v1/evaluation/submission/{subId}:
    get:
      tags:
      - EvaluationController
      summary: Gets a Submission.
      description: |-
        Gets a Submission.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ_PRIVATE_SUBMISSION</a> on the specified Evaluation.
        </p>
      operationId: getSubmission
      parameters:
      - name: subId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Submission_model'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Submission_model'
    delete:
      tags:
      - EvaluationController
      summary: Deletes a Submission and its accompanying SubmissionStatus.
      description: |-
        Deletes a Submission and its accompanying SubmissionStatus.
        <b>This service is intended to only be used by ChallengesInfrastructure service account.</b>

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE_SUBMISSION</a> on the specified Evaluation.
        </p>
      operationId: deleteSubmission
      parameters:
      - name: subId
        in: path
        description: '- the ID of the Submission to be deleted.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/submission/{subId}/cancellation:
    put:
      tags:
      - EvaluationController
      summary: User requests to cancel their submission.
      description: |-
        User requests to cancel their submission. Only the user who submitted a submission
        can make this request.
      operationId: requestToCancelSubmission
      parameters:
      - name: subId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content: {}
  /repo/v1/evaluation/submission/{subId}/contributor:
    post:
      tags:
      - EvaluationController
      operationId: addSubmissionContributor
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/evaluation/submission/{subId}/file/{fileHandleId}:
    get:
      tags:
      - EvaluationController
      summary: Gets a pre-signed URL to access a requested File contained within a
        specified Submission.
      description: |-
        Gets a pre-signed URL to access a requested File contained within a specified Submission.

        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ_PRIVATE_SUBMISSION</a> on the specified Evaluation.
        </p>
      operationId: redirectURLForFileHandle
      parameters:
      - name: fileHandleId
        in: path
        description: '- the ID of the requested FileHandle contained in the Submission.'
        required: true
        schema:
          type: string
      - name: subId
        in: path
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/submission/{subId}/status:
    get:
      tags:
      - EvaluationController
      summary: Gets the SubmissionStatus object associated with a specified Submission.
      description: "Gets the SubmissionStatus object associated with a specified Submission.\n\
        \n<p>\n<b>Note:</b> The caller must be granted the <a\nhref=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\"\
        \n>ACCESS_TYPE.READ</a> on the specified Evaluation.\nFurthermore, the caller\
        \ must be granted the <a\nhref=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\"\
        \n>ACCESS_TYPE.READ_PRIVATE_SUBMISSION</a> to see all\ndata marked as \"private\"\
        \ in the SubmissionStatus.\t *\n</p>\n<p>\n<b>Service Limits</b>\n<table border=\"\
        1\">\n<tr>\n<th>resource</th>\n<th>limit</th>\n</tr>\n<tr>\n<td>The maximum\
        \ frequency this method can be called</td>\n<td>1 calls per second</td>\n\
        </tr>\n</table>\n</p>"
      operationId: getSubmissionStatus
      parameters:
      - name: subId
        in: path
        description: '- the ID of the requested SubmissionStatus.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus_model'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus_model'
    put:
      tags:
      - EvaluationController
      summary: Updates a SubmissionStatus object.
      description: |-
        Updates a SubmissionStatus object.

        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time an SubmissionStatus is updated a new etag will be
        issued to the SubmissionStatus. When an update is requested, Synapse will compare the
        etag of the passed SubmissionStatus with the current etag of the SubmissionStatus. If the
        etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs, the caller should
        fetch the latest copy of the SubmissionStatus and re-apply any changes, then re-attempt
        the SubmissionStatus update.
        </p>

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE_SUBMISSION</a> on the specified Evaluation.
        </p>
        </p>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum frequency this method can be called</td>
        <td>1 calls per second</td>
        </tr>
        </table>
        </p>
      operationId: updateSubmissionStatus
      parameters:
      - name: subId
        in: path
        description: '- the ID of the SubmissionStatus being updated.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SubmissionStatus_model'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SubmissionStatus_model'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus_model'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubmissionStatus_model'
      x-codegen-request-body-name: body
  /repo/v1/evaluation/{evalId}:
    get:
      tags:
      - EvaluationController
      summary: Gets an Evaluation.
      description: |-
        Gets an Evaluation.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> on the specified Evaluation.
        </p>
      operationId: getEvaluation
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the desired Evaluation'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
    put:
      tags:
      - EvaluationController
      summary: Updates an Evaluation.
      description: |-
        Updates an Evaluation.

        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time an Evaluation is updated a new etag will be
        issued to the Evaluation. When an update is requested, Synapse will compare the
        etag of the passed Evaluation with the current etag of the Evaluation. If the
        etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs, the caller should
        fetch the latest copy of the Evaluation and re-apply any changes, then re-attempt
        the Evaluation update.
        </p>

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> on the specified Evaluation.
        </p>
      operationId: updateEvaluation
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the Evaluation being updated'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Evaluation'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Evaluation'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Evaluation'
      x-codegen-request-body-name: body
    delete:
      tags:
      - EvaluationController
      summary: Deletes an Evaluation.
      description: |-
        Deletes an Evaluation.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> on the specified Evaluation.
        </p>
      operationId: deleteEvaluation
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the requested Evaluation'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{evalId}/access:
    get:
      tags:
      - EvaluationController
      summary: Determines whether a specified Synapse user has a certain.
      description: |-
        Determines whether a specified Synapse user has a certain
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE</a>
        on the specified Evaluation.
        </p>
      operationId: hasAccess2
      parameters:
      - name: evalId
        in: path
        required: true
        schema:
          type: string
      - name: accessType
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_BooleanResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_BooleanResult'
  /repo/v1/evaluation/{evalId}/accessApproval:
    get:
      tags:
      - AccessApprovalController
      summary: Retrieve the Access Approvals for the given Evaluation.
      description: Retrieve the Access Approvals for the given Evaluation.  This service
        is only available to the ACT.
      operationId: getEvaluationAccessApprovals
      parameters:
      - name: evalId
        in: path
        description: the evaluation of interest
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum limit for this call is 50.'
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/evaluation/{evalId}/acl:
    get:
      tags:
      - EvaluationController
      summary: Gets the access control list (ACL) governing the given evaluation.
      description: |-
        Gets the access control list (ACL) governing the given evaluation. The user should have the proper
        <a href="${org.sagebionetworks.evaluation.model.UserEvaluationPermissions}">permissions</a> to
        read the ACL.
      operationId: getAcl
      parameters:
      - name: evalId
        in: path
        description: The ID of the evaluation whose ACL is being retrieved.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The retrieving the ACL.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
    delete:
      tags:
      - EvaluationController
      summary: This method is deprecated and should be removed from future versions
        of the API.
      description: |-
        This method is deprecated and should be removed from future versions of the API.
        Deletes the ACL (access control list) of the specified evaluation. The user should have the proper
        <a href="${org.sagebionetworks.evaluation.model.UserEvaluationPermissions}">permissions</a>
        to delete the ACL.
      operationId: deleteAcl
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
  /repo/v1/evaluation/{evalId}/permissions:
    get:
      tags:
      - EvaluationController
      summary: Gets the.
      description: |-
        Gets the <a href="${org.sagebionetworks.evaluation.model.UserEvaluationPermissions}">user permissions</a>
        for the specified evaluation.
      operationId: getUserPermissionsForEvaluation
      parameters:
      - name: evalId
        in: path
        description: The ID of the evaluation over which the user permission are being
          retrieved.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The ID of the user whose permissions over the specified evaluation
          are being retrieved.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserEvaluationPermissions'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserEvaluationPermissions'
  /repo/v1/evaluation/{evalId}/round:
    post:
      tags:
      - EvaluationController
      operationId: createEvaluationRound
      parameters:
      - name: evalId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EvaluationRound'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EvaluationRound'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EvaluationRound'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EvaluationRound'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/evaluation/{evalId}/round/list:
    post:
      tags:
      - EvaluationController
      operationId: getAllEvaluationRounds
      parameters:
      - name: evalId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EvaluationRoundListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EvaluationRoundListRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EvaluationRoundListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EvaluationRoundListResponse'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/evaluation/{evalId}/round/{roundId}:
    get:
      tags:
      - EvaluationController
      operationId: getEvaluationRound
      parameters:
      - name: evalId
        in: path
        required: true
        schema:
          type: string
      - name: roundId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EvaluationRound'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EvaluationRound'
      deprecated: true
    put:
      tags:
      - EvaluationController
      operationId: updateEvaluationRound
      parameters:
      - name: evalId
        in: path
        required: true
        schema:
          type: string
      - name: roundId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EvaluationRound'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EvaluationRound'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EvaluationRound'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EvaluationRound'
      deprecated: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - EvaluationController
      operationId: deleteEvaluationRound
      parameters:
      - name: evalId
        in: path
        required: true
        schema:
          type: string
      - name: roundId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/evaluation/{evalId}/statusBatch:
    put:
      tags:
      - EvaluationController
      summary: Update multiple SubmissionStatuses.
      description: |-
        Update multiple SubmissionStatuses. The maximum batch size is 500.  To allow upload
        of more than this maximum, the system supports uploading of a <i>series</i> of batches.
        Synapse employs optimistic concurrency on the series in the form of a batch token.
        Each request (except the first) must include the 'batch token' returned in the
        response to the previous batch. If another client begins batch upload simultaneously,
        a PRECONDITION_FAILED (412) response will be generated and upload must restart from the
        first batch.  After the final batch is uploaded, the data for the Evaluation queue will
        be mirrored to the tables which support querying.  Therefore uploaded data will not appear
        in Evaluation queries until after the final batch is successfully uploaded.  It is the
        client's responsibility to note in each batch request (1) whether it is the first batch
        in the series and (2) whether it is the last batch.  (For a single batch both are set to 'true'.)
        Failure to use the flags correctly risks corrupted data (due to simultaneous, conflicting
        uploads by multiple clients) or data not appearing in query results.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE_SUBMISSION</a> on the specified Evaluation.
        </p>
      operationId: updateSubmissionStatusBatch
      parameters:
      - name: evalId
        in: path
        description: the ID of the Evaluation to which the SubmissionSatus objects
          belong.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SubmissionStatusBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SubmissionStatusBatch'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_BatchUploadResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_BatchUploadResponse'
      x-codegen-request-body-name: body
  /repo/v1/evaluation/{evalId}/submission:
    get:
      tags:
      - EvaluationController
      summary: Gets the requesting user's Submissions to a specified Evaluation.
      description: |-
        Gets the requesting user's Submissions to a specified Evaluation.
        </p>
      operationId: getMySubmissions
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the specified Evaluation.'
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first entity. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmission'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmission'
  /repo/v1/evaluation/{evalId}/submission/all:
    get:
      tags:
      - EvaluationController
      summary: Gets a collection of Submissions to a specified Evaluation.
      description: |-
        Gets a collection of Submissions to a specified Evaluation.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ_PRIVATE_SUBMISSION</a> on the specified Evaluation.
        </p>
      operationId: getAllSubmissions
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the specified Evaluation.'
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10, max value 100.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first entity. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: status
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmission'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmission'
  /repo/v1/evaluation/{evalId}/submission/bundle:
    get:
      tags:
      - EvaluationController
      summary: |-
        Gets the requesting user's bundled Submissions and SubmissionStatuses to a specified
        Evaluation.
      description: |-
        Gets the requesting user's bundled Submissions and SubmissionStatuses to a specified
        Evaluation.

        </p>
      operationId: getMySubmissionBundles
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the specified Evaluation.'
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first entity. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmissionBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmissionBundle'
  /repo/v1/evaluation/{evalId}/submission/bundle/all:
    get:
      tags:
      - EvaluationController
      summary: Gets a collection of bundled Submissions and SubmissionStatuses to
        a given Evaluation.
      description: |-
        Gets a collection of bundled Submissions and SubmissionStatuses to a given Evaluation.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ_PRIVATE_SUBMISSION</a> on the specified Evaluation.
        </p>
      operationId: getAllSubmissionBundles
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the specified Evaluation.'
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10, max value 100.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first entity. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: status
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmissionBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmissionBundle'
  /repo/v1/evaluation/{evalId}/submission/count:
    get:
      tags:
      - EvaluationController
      summary: Gets the number of Submissions to a specified Evaluation.
      description: |-
        Gets the number of Submissions to a specified Evaluation.

        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ_PRIVATE_SUBMISSION</a> on the specified Evaluation.
        </p>
      operationId: getSubmissionCount
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the specified Evaluation.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: integer
                description: ""
                format: int64
            application/xml:
              schema:
                type: integer
                description: ""
                format: int64
  /repo/v1/evaluation/{evalId}/submission/status/all:
    get:
      tags:
      - EvaluationController
      summary: Gets a collection of SubmissionStatuses to a specified Evaluation.
      description: |-
        Gets a collection of SubmissionStatuses to a specified Evaluation.

        <p>
        <b>Note:</b> The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> on the specified Evaluation.
        Furthermore, the caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ_PRIVATE_SUBMISSION</a> to see all
        data marked as "private" in the SubmissionStatuses.
        </p>
      operationId: getAllSubmissionStatuses
      parameters:
      - name: evalId
        in: path
        description: '- the ID of the specified Evaluation.'
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the number of entities that will be fetched for this
          page. When null it will default to 10, max value 100.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first entity. When null it will default
          to 0.
        schema:
          type: number
          default: 0.0
      - name: status
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmissionStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfSubmissionStatus'
  /repo/v1/evaluation/{evalId}/team/{id}/submissionEligibility:
    get:
      tags:
      - EvaluationController
      summary: |-
        Find out whether a Team and its members are eligible to submit to a given Evaluation queue (at the
        current time).
      description: |-
        Find out whether a Team and its members are eligible to submit to a given Evaluation queue (at the
        current time).  The request must include an Evaluation ID and a Team ID.   The 'eligibilityStateHash'
        field of the returned object is a required parameter of the subsequent Team Submission request made
        for the given Evaluation and Team.  (See: <a href="${POST.evaluation.submission}">POST
        /evaluation/submission</a>)
      operationId: getTeamSubmissionEligibility
      parameters:
      - name: evalId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_TeamSubmissionEligibility'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_TeamSubmissionEligibility'
  /repo/v1/evaluation/{ownerId}/wiki:
    get:
      tags:
      - WikiController
      summary: Get the root WikiPage for an Evaluation.
      description: |-
        Get the root WikiPage for an Evaluation.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionRootWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
    post:
      tags:
      - WikiController
      summary: Create a WikiPage with an Evaluation as an owner.
      description: |-
        Create a WikiPage with an Evaluation as an owner.

        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CREATE</a> permission on the owner.
        </p>
        <p>
        If the passed WikiPage is a root (parentWikiId = null) and the owner
        already has a root WikiPage, an error will be returned.
        </p>
      operationId: createCompetitionWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owner Evaluation.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
      x-codegen-request-body-name: body
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}:
    get:
      tags:
      - WikiController
      summary: Get a specific WikiPage of of an Evaluation.
      description: |-
        Get a specific WikiPage of of an Evaluation.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
    put:
      tags:
      - WikiController
      summary: Update a specific WikiPage of an Evaluation.
      description: |-
        Update a specific WikiPage of an Evaluation.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is request, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: updateCompetitionWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_WikiPage'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPage'
      x-codegen-request-body-name: body
    delete:
      tags:
      - WikiController
      summary: Delete a specific WikiPage of an Evaluation.
      description: |-
        Delete a specific WikiPage of an Evaluation.
        <p>
        Note: When a WikiPage is deleted, the delete will cascade to all children
        WikiPages (recursively) of the deleted WikiPage.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> permission on the owner.
        </p>
      operationId: deleteCompetitionWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluations.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachment:
    get:
      tags:
      - WikiController
      summary: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
      description: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionAttachmentFile
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}"
          >GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles</a>
          method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles:
    get:
      tags:
      - WikiController
      summary: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Evaluation.
      description: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Evaluation. This list will include Previews
        if they exist and will provide information about file sizes, content
        types and names.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionWikiAttachmenthHandles
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmentpreview:
    get:
      tags:
      - WikiController
      summary: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
      description: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionAttachmenthPreviewFile
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}"
          >GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles</a>
          method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{ownerId}/wiki2:
    get:
      tags:
      - V2WikiController
      summary: Get the root WikiPage for an Evaluation.
      description: |-
        Get the root WikiPage for an Evaluation.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionRootWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
    post:
      tags:
      - V2WikiController
      summary: Create a WikiPage with an Evaluation as an owner.
      description: |-
        Create a WikiPage with an Evaluation as an owner.

        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CREATE</a> permission on the owner.
        </p>
        <p>
        If the passed WikiPage is a root (parentWikiId = null) and the owner
        already has a root WikiPage, an error will be returned.
        </p>
      operationId: createCompetitionWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owner Evaluation.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
      x-codegen-request-body-name: body
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}:
    get:
      tags:
      - V2WikiController
      summary: Get a specific WikiPage of an Evaluation.
      description: |-
        Get a specific WikiPage of an Evaluation.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to get.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
    put:
      tags:
      - V2WikiController
      summary: Update a specific WikiPage of an Evaluation.
      description: |-
        Update a specific WikiPage of an Evaluation. This adds a new entry
        to the history of changes made to this specific WikiPage.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is request, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: updateCompetitionWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_V2WikiPage'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
      x-codegen-request-body-name: body
    delete:
      tags:
      - V2WikiController
      summary: Delete a specific WikiPage of an Evaluation.
      description: |-
        Delete a specific WikiPage of an Evaluation.
        <p>
        Note: When a WikiPage is deleted, the delete will cascade to all children
        WikiPages (recursively) of the deleted WikiPage.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> permission on the owner.
        </p>
      operationId: deleteCompetitionWikiPage2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluations.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachment:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
      description: |-
        Get a URL that can be used to download a file for a given WikiPage file
        attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionAttachmentFile2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}"
          >GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles</a>
          method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmenthandles:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Evaluation.
      description: |-
        Get the list of FileHandles for all file attachments of a specific
        WikiPage for a given owning Evaluation. This list will include Previews
        if they exist and will provide information about file sizes, content
        types and names.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionWikiAttachmenthHandles2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FileHandleResults'
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmentpreview:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
      description: |-
        Get a URL that can be used to download a preview file for a given
        WikiPage file attachment.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionAttachmenthPreviewFile2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: |-
          The name of the file to get. The file names can be found in
          the FileHandles from the <a
          href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}"
          >GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles</a>
          method.
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/markdown:
    get:
      tags:
      - V2WikiController
      summary: |-
        Get a URL that can be used to download the markdown file for a given
        WikiPage.
      description: |-
        Get a URL that can be used to download the markdown file for a given
        WikiPage.

        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEvaluationWikiMarkdownFile
      parameters:
      - name: ownerId
        in: path
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: wikiVersion
        in: query
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/wikihistory:
    get:
      tags:
      - V2WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot}">V2WikiHistorySnapshot</a>
        that belong to a specific WikiPage, which belong to the given owner Evaluation. The resulting list
        can be used to display a timeline of changes to the specific WikiPage for this owner.
        The first V2WikiHistorySnapshot describes the most recent change or update to the WikiPage.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionWikiHistory
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10.
        required: true
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHistorySnapshot'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHistorySnapshot'
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/{wikiVersion}:
    put:
      tags:
      - V2WikiController
      summary: For a specific WikiPage of an Evaluation, restore a version of the
        WikiPage's content.
      description: |-
        For a specific WikiPage of an Evaluation, restore a version of the WikiPage's content.
        <p>
        Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle
        concurrent updates. Each time a WikiPage is updated a new etag will be
        issued to the WikiPage. When an update is requested, Synapse will compare
        the etag of the passed WikiPage with the current etag of the WikiPage. If
        the etags do not match, then the update will be rejected with a
        PRECONDITION_FAILED (412) response. When this occurs the caller should
        get the latest copy of the WikiPage and re-apply any changes to the
        object, then re-attempt the update. This ensures the caller has all
        changes applied by other users before applying their own changes.
        </p>
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.UPDATE</a> permission on the owner.
        </p>
      operationId: restoreCompetitionWikiPage
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Entity.
        required: true
        schema:
          type: string
      - name: wikiId
        in: path
        description: The ID of the WikiPage to update.
        required: true
        schema:
          type: string
      - name: wikiVersion
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_V2WikiPage'
  /repo/v1/evaluation/{ownerId}/wikiheadertree:
    get:
      tags:
      - WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.wiki.WikiHeader}">WikiHeaders</a>
        that belong to the given owner Evaluation. The resulting list can be used
        to build a tree of the WikiPages for this owner. The first WikiHeader
        will be for the root WikiPage (parentWikiId = null).
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionWikiHeaderTree
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10.
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfWikiHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfWikiHeader'
  /repo/v1/evaluation/{ownerId}/wikiheadertree2:
    get:
      tags:
      - V2WikiController
      summary: Get a paginated list of all.
      description: |-
        Get a paginated list of all <a
        href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader}">V2WikiHeaders</a>
        that belong to the given owner Evaluation. The resulting list can be used
        to build a tree of the WikiPages for this owner. The first WikiHeader
        will be for the root WikiPage (parentWikiId = null).
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getCompetitionWikiHeaderTree2
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          Limits the size of the page returned. For example, a page size
          of 10 require limit = 10.
        schema:
          type: number
      - name: offset
        in: query
        description: |-
          The index of the pagination offset. For a page size of 10, the
          first page would be at offset = 0, and the second page would
          be at offset = 10.
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfV2WikiHeader'
  /repo/v1/evaluation/{ownerId}/wikikey:
    get:
      tags:
      - WikiController
      summary: Get the root WikiPageKey for an Evaluation.
      description: |-
        Get the root WikiPageKey for an Evaluation.
        <p>
        Note: The caller must be granted the <a
        href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.READ</a> permission on the owner.
        </p>
      operationId: getEvaluationRootWikiKey
      parameters:
      - name: ownerId
        in: path
        description: The ID of the owning Evaluation.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_WikiPageKey'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_WikiPageKey'
  /repo/v1/favorite:
    get:
      tags:
      - UserProfileController
      summary: |-
        Get a paginated result that contains the
        caller's.
      description: |-
        Get a paginated result that contains the
        caller's <a href="${org.sagebionetworks.repo.model.Favorite}">Favorites</a>
      operationId: getFavorites
      parameters:
      - name: limit
        in: query
        description: Limits the number of items that will be fetched for this page.
          <p><i>Default is 10</i></p>
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: The offset index determines where this page will start from.
          An index of 0 is the first item. <p><i>Default is 0</i></p>
        schema:
          type: integer
          default: 0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfEntityHeader'
  /repo/v1/favorite/{id}:
    post:
      tags:
      - UserProfileController
      summary: Add an.
      description: Add an <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>
        as a <a href="${org.sagebionetworks.repo.model.Favorite}">Favorite</a> of
        the caller.
      operationId: addFavorite
      parameters:
      - name: id
        in: path
        description: Entity ID of the favorite <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Add an <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>
          as a <a href="${org.sagebionetworks.repo.model.Favorite}">Favorite</a> of
          the caller.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_EntityHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_EntityHeader'
      x-codegen-request-body-name: body
    delete:
      tags:
      - UserProfileController
      summary: Remove an.
      description: Remove an <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>
        as a <a href="${org.sagebionetworks.repo.model.Favorite}">Favorite</a> of
        the caller.
      operationId: removeFavorite
      parameters:
      - name: id
        in: path
        description: Entity ID of the <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>
          that should be removed as a favorite
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Remove an <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>
          as a <a href="${org.sagebionetworks.repo.model.Favorite}">Favorite</a> of
          the caller.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/form/data:
    post:
      tags:
      - FormController
      summary: Create a new FormData object.
      description: |-
        Create a new FormData object. The caller will own the resulting object and
        will have access to read, update, and delete the FormData object.
        <p>
        Note: The caller must have the
        <a href= "${org.sagebionetworks.repo.model.ACCESS_TYPE}">SUBMIT</a>
        permission on the FormGrup to create/update/submit FormData.
      operationId: createFormData
      parameters:
      - name: groupId
        in: query
        description: |-
          The identifier of the group that manages this data.
          Required.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_FormChangeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_FormChangeRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FormData'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FormData'
      x-codegen-request-body-name: body
  /repo/v1/form/data/list:
    post:
      tags:
      - FormController
      summary: |-
        List FormData objects and their associated status that match the filters of
        the provided request that are owned by the caller.
      description: |-
        List FormData objects and their associated status that match the filters of
        the provided request that are owned by the caller. Note: Only objects owned
        by the caller will be returned.
      operationId: listFormStatus
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ListRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListResponse'
      x-codegen-request-body-name: body
  /repo/v1/form/data/list/reviewer:
    post:
      tags:
      - FormController
      summary: |-
        List FormData objects and their associated status that match the filters of
        the provided request for the entire group.
      description: |-
        List FormData objects and their associated status that match the filters of
        the provided request for the entire group. This is used by service accounts
        to review submissions. Filtering by WAITING_FOR_SUBMISSION is not allowed for
        this call.
        <p>
        Note: The caller must have the <a href=
        "${org.sagebionetworks.repo.model.ACCESS_TYPE}">READ_PRIVATE_SUBMISSION</a>
        permission on the identified group to update the group's ACL.
      operationId: listFormStatusReviewer
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ListRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListResponse'
      x-codegen-request-body-name: body
  /repo/v1/form/data/{id}:
    put:
      tags:
      - FormController
      summary: Update an existing FormData object.
      description: |-
        Update an existing FormData object. The caller must be the creator of the
        FormData object. Once a FormData object has been submitted, it cannot be
        updated until it has been processed. If the submission is accepted it becomes
        immutable. Rejected submission are editable. Updating a rejected submission
        will change its status back to waiting_for_submission.
        <p>
        Note: The caller must have the
        <a href= "${org.sagebionetworks.repo.model.ACCESS_TYPE}">SUBMIT</a>
        permission on the FormGrup to create/update/submit FormData.
      operationId: updateFormData
      parameters:
      - name: id
        in: path
        description: The identifier of the FormData to update.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_FormChangeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_FormChangeRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FormData'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FormData'
      x-codegen-request-body-name: body
    delete:
      tags:
      - FormController
      summary: Delete an existing FormData object.
      description: |-
        Delete an existing FormData object. The caller must be the creator of the
        FormData object.
        <p>
        Note: Cannot delete a FormData object once it has been submitted and caller
        must have the
        <a href= "${org.sagebionetworks.repo.model.ACCESS_TYPE}">SUBMIT</a>
        permission on the identified group to update the group's ACL.
      operationId: deleteFormData
      parameters:
      - name: id
        in: path
        description: Id of the FormData object to delete
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/form/data/{id}/accept:
    put:
      tags:
      - FormController
      summary: Called by the form reviewing service to accept a submitted data.
      description: |-
        Called by the form reviewing service to accept a submitted data.
        <p>
        Note: The caller must have the <a href=
        "${org.sagebionetworks.repo.model.ACCESS_TYPE}">READ_PRIVATE_SUBMISSION</a>
        permission on the identified group to update the group's ACL.
      operationId: reviewerAcceptForm
      parameters:
      - name: id
        in: path
        description: Identifier of the FormData to accept.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FormData'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FormData'
  /repo/v1/form/data/{id}/reject:
    put:
      tags:
      - FormController
      summary: Called by the form reviewing service to reject a submitted data.
      description: |-
        Called by the form reviewing service to reject a submitted data.
        <p>
        Note: The caller must have the <a href=
        "${org.sagebionetworks.repo.model.ACCESS_TYPE}">READ_PRIVATE_SUBMISSION</a>
        permission on the identified group to update the group's ACL.
      operationId: reviewerRejectForm
      parameters:
      - name: id
        in: path
        description: Identifier of the FormData to accept.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_FormRejection'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_FormRejection'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FormData'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FormData'
      x-codegen-request-body-name: body
  /repo/v1/form/data/{id}/submit:
    post:
      tags:
      - FormController
      summary: Submit the identified FormData from review.
      description: |-
        Submit the identified FormData from review.
        <p>
        Note: The caller must have the
        <a href= "${org.sagebionetworks.repo.model.ACCESS_TYPE}">SUBMIT</a>
        permission on the identified group to update the group's ACL.
      operationId: submitFormData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FormData'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FormData'
  /repo/v1/form/group:
    post:
      tags:
      - FormController
      summary: Create a FormGroup with the provided name.
      description: |-
        Create a FormGroup with the provided name. This method is idempotent. If a group
        with the provided name already exists and the caller has
        <a href= "${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.READ</a>
        permission the existing FormGroup will be returned.
        </p>
        The created FormGroup will have an
        <a href="${org.sagebionetworks.repo.model.AccessControlList}">Access Control
        List (ACL)</a> with the creator listed as an administrator.
      operationId: createGroup
      parameters:
      - name: name
        in: query
        description: |-
          A globally unique name for the group. Required. Between 3 and
          256 characters.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FormGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FormGroup'
  /repo/v1/form/group/{id}:
    get:
      tags:
      - FormController
      summary: Get a FormGroup with the provided ID.
      description: |-
        Get a FormGroup with the provided ID.
        </p>
        Note: The caller must have the
        <a href= "${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.READ</a>
        permission on the identified group.
      operationId: getFormGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_FormGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_FormGroup'
  /repo/v1/form/group/{id}/acl:
    get:
      tags:
      - FormController
      summary: Get the.
      description: |-
        Get the <a href="${org.sagebionetworks.repo.model.AccessControlList}">Access
        Control List (ACL)</a> for a FormGroup.
        </p>
        Note: The caller must have the
        <a href= "${org.sagebionetworks.repo.model.ACCESS_TYPE}">ACCESS_TYPE.READ</a>
        permission on the identified group.
      operationId: getGroupAcl
      parameters:
      - name: id
        in: path
        description: The identifier of the FormGroup.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
    put:
      tags:
      - FormController
      summary: Update the.
      description: |-
        Update the
        <a href="${org.sagebionetworks.repo.model.AccessControlList}">Access Control
        List (ACL)</a> for a FormGroup.
        <p>
        The following define the permissions in this context:
        <ul>
        <li><a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">READ</a> - Grants
        read access to the group. READ does <b>not</b> grant access to FormData of
        the group.</li>
        <li><a href=
        "${org.sagebionetworks.repo.model.ACCESS_TYPE}">CHANGE_PERMISSIONS</a> -
        Grants access to update the group's ACL.</li>
        <li><a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">SUBMIT</a> -
        Grants access to both create and submit FormData to the group.</li>
        <li><a href=
        "${org.sagebionetworks.repo.model.ACCESS_TYPE}">READ_PRIVATE_SUBMISSION</a> -
        Grants administrator's access to the submitted FormData, including both
        FormData reads and status updates. This permission should be reserved for the
        service account that evaluates submissions.</li>
        </ul>

        Users automatically have read/update access to FormData that they create.
        </p>


        Note: The caller must have the <a href=
        "${org.sagebionetworks.repo.model.ACCESS_TYPE}">CHANGE_PERMISSIONS</a>
        permission on the identified group to update the group's ACL.
      operationId: updateGroupAcl
      parameters:
      - name: id
        in: path
        description: The identifier of the FormGroup.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The updated ACL.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
      x-codegen-request-body-name: body
  /repo/v1/forum/{forumId}:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get the Forum's metadata for a given its ID.
      description: |-
        This API is used to get the Forum's metadata for a given its ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getForumByProject
      parameters:
      - name: forumId
        in: path
        description: '- The ID of the forum.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Forum'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Forum'
  /repo/v1/forum/{forumId}/moderators:
    get:
      tags:
      - DiscussionController
      summary: Returns a page of moderators for a given forum ID.
      description: |-
        Returns a page of moderators for a given forum ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getForumModerators
      parameters:
      - name: forumId
        in: path
        description: '- The forum ID to which the returning mederators belong'
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum Limit for this call is 100.'
        required: true
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        required: true
        schema:
          type: number
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedIds'
  /repo/v1/forum/{forumId}/threadcount:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get the total number of threads for a given forum
        ID.
      description: |-
        This API is used to get the total number of threads for a given forum ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getThreadCountForForum
      parameters:
      - name: forumId
        in: path
        description: '- The forum ID to which the returning threads belong'
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: '- Filter deleted/ not deleted threads. Available options: <a
          href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">DiscussionFilter</a>.'
        required: true
        schema:
          type: string
          enum:
          - DELETED_ONLY
          - EXCLUDE_DELETED
          - NO_FILTER
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ThreadCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ThreadCount'
  /repo/v1/forum/{forumId}/threads:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get N number of threads for a given forum ID.
      description: |-
        This API is used to get N number of threads for a given forum ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getThreadsForForum
      parameters:
      - name: forumId
        in: path
        description: '- The forum ID to which the returning threads belong'
        required: true
        schema:
          type: string
      - name: ascending
        in: query
        description: '- The direction of sort: true for ascending, and false for descending'
        schema:
          type: boolean
      - name: filter
        in: query
        description: '- Filter deleted/ not deleted threads. Available options: <a
          href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">DiscussionFilter</a>.'
        required: true
        schema:
          type: string
          enum:
          - DELETED_ONLY
          - EXCLUDE_DELETED
          - NO_FILTER
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum Limit for this call is 20.'
        required: true
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        required: true
        schema:
          type: number
      - name: sort
        in: query
        description: '- The field to sort the resulting threads on. Available options:
          <a href="${org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder}">DiscussionThreadOrder</a>.'
        schema:
          type: string
          enum:
          - NUMBER_OF_REPLIES
          - NUMBER_OF_VIEWS
          - PINNED_AND_LAST_ACTIVITY
          - THREAD_TITLE
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDiscussionThreadBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDiscussionThreadBundle'
  /repo/v1/healthcheck:
    head:
      tags:
      - HealthCheckController
      operationId: checkAmznHealthHead
      requestBody:
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/log:
    post:
      tags:
      - LogController
      summary: Logs the entry in the Synapse service logs.
      description: |-
        Logs the entry in the Synapse service logs. Clients can use this to log errors that the service should know
        about.
      operationId: log
      parameters:
      - name: User-Agent
        in: header
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user's id.
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Logs the entry in the Synapse service logs. Clients can use this to log errors that the service should know
          about.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/membershipInvitation:
    post:
      tags:
      - MembershipInvitationController
      summary: "."
      description: |-
        <p>Create a membership invitation and send an email notification to the invitee. The team must be specified.
        Also, either an inviteeId or an inviteeEmail must be specified. Optionally, the creator may include an
        invitation message and/or expiration date for the invitation. If no expiration date is specified then the
        invitation never expires.</p>

        <p>Note: The client must be an administrator of the specified Team to make this request.</p>
      operationId: createInvitation
      parameters:
      - name: acceptInvitationEndpoint
        in: query
        description: |-
          The portal endpoint prefix for one-click acceptance of the membership invitation.
          A signed, serialized token is appended to create the complete URL:
          <a href="${org.sagebionetworks.repo.model.JoinTeamSignedToken}">JoinTeamSignedToken</a>
          if an inviteeId is specified, or
          <a href="${org.sagebionetworks.repo.model.MembershipInvtnSignedToken}">MembershipInvtnSignedToken</a>
          if an inviteeEmail is specified.
          In normal operation, this parameter should be omitted.
        schema:
          type: string
      - name: notificationUnsubscribeEndpoint
        in: query
        description: |-
          The portal endpoint prefix for one-click email unsubscription.
          A signed, serialized token is appended to create the complete URL:
          <a href="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}">NotificationSettingsSignedToken</a>.
          In normal operation, this parameter should be omitted.
        schema:
          type: string
          default: https://www.synapse.org/#!SignedToken:Settings/
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MembershipInvitation'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MembershipInvitation'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MembershipInvitation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MembershipInvitation'
      x-codegen-request-body-name: body
  /repo/v1/membershipInvitation/openInvitationCount:
    get:
      tags:
      - MembershipInvitationController
      summary: Retrieve the number of pending Membership Invitations.
      description: Retrieve the number of pending Membership Invitations
      operationId: getOpenInvitationCount
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Count'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Count'
  /repo/v1/membershipInvitation/{id}:
    get:
      tags:
      - MembershipInvitationController
      summary: |-
        Retrieve an invitation by ID
        Note:  The client must be an administrator of the Team referenced by the invitation or the invitee to make this request.
      description: |-
        Retrieve an invitation by ID
        Note:  The client must be an administrator of the Team referenced by the invitation or the invitee to make this request.
      operationId: getInvitation
      parameters:
      - name: id
        in: path
        description: the ID of the invitation
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MembershipInvitation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MembershipInvitation'
    post:
      tags:
      - MembershipInvitationController
      summary: Retrieve an invitation by ID using a MembershipInvtnSignedToken for
        authorization.
      description: Retrieve an invitation by ID using a MembershipInvtnSignedToken
        for authorization
      operationId: getInvitation2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MembershipInvtnSignedToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MembershipInvtnSignedToken'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MembershipInvitation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MembershipInvitation'
      x-codegen-request-body-name: body
    delete:
      tags:
      - MembershipInvitationController
      summary: |-
        Delete an invitation
        Note:  The client must be an administrator of the Team referenced by the invitation or the invitee to make this request.
      description: |-
        Delete an invitation
        Note:  The client must be an administrator of the Team referenced by the invitation or the invitee to make this request.
      operationId: deleteInvitation
      parameters:
      - name: id
        in: path
        description: the ID of the invitation to be deleted
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/membershipInvitation/{id}/inviteeId:
    put:
      tags:
      - MembershipInvitationController
      summary: Set the inviteeId of a MembershipInvitation.
      description: |-
        Set the inviteeId of a MembershipInvitation.
        A valid InviteeVerificationSignedToken must have an inviteeId equal to the id of
        the authenticated user and a membershipInvitationId equal to the id in the URI.
        This call will only succeed if the indicated MembershipInvitation has a
        null inviteeId and a non null inviteeEmail.
        See https://sagebionetworks.jira.com/wiki/spaces/PLFM/pages/143628166/Invite+a+new+user+to+join+a+team for more information.
      operationId: updateInviteeId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_InviteeVerificationSignedToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_InviteeVerificationSignedToken'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/membershipInvitation/{id}/inviteeVerificationSignedToken:
    get:
      tags:
      - MembershipInvitationController
      summary: Verify whether the inviteeEmail of the indicated MembershipInvitation
        is associated with the authenticated user.
      description: |-
        Verify whether the inviteeEmail of the indicated MembershipInvitation is associated with the authenticated user.
        If it is, the response body will contain an InviteeVerificationSignedToken.
        If it is not, a response status 403 Forbidden will be returned.
        InviteeVerificationSignedTokens generated by this service expire 24 hours from creation.
        See https://sagebionetworks.jira.com/wiki/spaces/PLFM/pages/143628166/Invite+a+new+user+to+join+a+team for more information.
      operationId: getInviteeVerificationSignedToken
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_InviteeVerificationSignedToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_InviteeVerificationSignedToken'
  /repo/v1/membershipRequest:
    post:
      tags:
      - MembershipRequestController
      summary: "."
      description: |-
        <p>Create a membership request and send an email notification to the administrators of the team.
        The Team must be specified. Optionally, the creator may include a message and/or expiration date for the request.
        If no expiration date is specified then the request never expires.</p>
      operationId: createRequest
      parameters:
      - name: acceptRequestEndpoint
        in: query
        description: |-
          The portal end-point for one-click acceptance of the membership
          request.  A signed, serialized token is appended to create the complete:
          <a href="${org.sagebionetworks.repo.model.JoinTeamSignedToken}">JoinTeamSignedToken</a>
          In normal operation, this parameter should be omitted.
        schema:
          type: string
          default: https://www.synapse.org/#!SignedToken:JoinTeam/
      - name: notificationUnsubscribeEndpoint
        in: query
        description: |-
          The portal prefix for one-click email unsubscription.
          A signed, serialized token is appended to create the complete:
          <a href="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}">NotificationSettingsSignedToken</a>.
          In normal operation, this parameter should be omitted.
        schema:
          type: string
          default: https://www.synapse.org/#!SignedToken:Settings/
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MembershipRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MembershipRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MembershipRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MembershipRequest'
      x-codegen-request-body-name: body
  /repo/v1/membershipRequest/openRequestCount:
    get:
      tags:
      - MembershipRequestController
      summary: Retrieve the number of pending Membership Requests for teams that user
        is admin.
      description: Retrieve the number of pending Membership Requests for teams that
        user is admin
      operationId: getOpenMembershipRequestCount
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Count'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Count'
  /repo/v1/membershipRequest/{id}:
    get:
      tags:
      - MembershipRequestController
      summary: |-
        Retrieve an request by ID
        Note:  The client must be the creator of the membership request to make this request.
      description: |-
        Retrieve an request by ID
        Note:  The client must be the creator of the membership request to make this request.
      operationId: getRequest
      parameters:
      - name: id
        in: path
        description: the Team ID
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MembershipRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MembershipRequest'
    delete:
      tags:
      - MembershipRequestController
      summary: |-
        Delete a request
        Note:  The client must be the creator of the membership request to make this request.
      description: |-
        Delete a request
        Note:  The client must be the creator of the membership request to make this request.
      operationId: deleteRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/message:
    post:
      tags:
      - MessageController
      summary: "."
      description: |-
        <p>
        Sends a message.
        </p>
        <p>
        The "fileHandleId" field should point to a plain text file containing the body of the message.
        The file should be uploaded prior to this call.
        </p>
        <p>
        The "recipients" field should hold a set of IDs corresponding to the recipients of the message.
        </p>
        <p>
        All other fields are optional, including the "subject" field.
        To chain messages together into a conversation, specify the message you are replying to via the "inReplyTo" field.
        </p>
        <p>
        See the <a href="${org.sagebionetworks.repo.model.message.MessageToUser}">message schema</a>,
        <a href="${org.sagebionetworks.repo.model.message.MessageContent}">message content schema</a>,
        and <a href="${org.sagebionetworks.repo.model.message.MessageRecipientSet}">message recipient schema</a>
        for more information.
        </p>
        <p>
        In most cases, message delivery is asynchronous to message creation.
        i.e. It may take several seconds for a message to appear in a user's inbox.
        </p>
        <p>
        Notes:
        <br/>
        Unauthorized delivery, such as messaging a team you are not affiliated with,
        will result in a bounce message being sent to your email.
        <br/>
        There are limits on the number of message recipients you can specify (50) and
        the rate at which you can send messages (10 per minute).  Neither these restrictions,
        nor the restriction that you can't message a Team with which you are unaffiliated,
        apply if you are a member of the Trusted Message Senders Team.
        </p>
      operationId: createMessage
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MessageToUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MessageToUser'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
      x-codegen-request-body-name: body
  /repo/v1/message/inbox:
    get:
      tags:
      - MessageController
      summary: Retrieves the current authenticated user's inbox.
      description: |-
        Retrieves the current authenticated user's inbox.
        It may take several seconds for a message to appear in the inbox after creation.
        </br>
        By default, the most recent unread messages are returned first.
        To flip the ordering, set the "descending" parameter to "false".
        To change the way the messages are ordered, set the "orderBy" parameter to
        either "SEND_DATE" or "SUBJECT".
        To retrieve messages that have been read or archived, set the "inboxFilter" parameter to
        a comma-separated list of values defined in the <a href="${org.sagebionetworks.repo.model.message.MessageStatusType}">MessageStatusType enumeration</a>.
      operationId: getInbox
      parameters:
      - name: descending
        in: query
        schema:
          type: boolean
          default: true
      - name: inboxFilter
        in: query
        schema:
          type: string
          default: UNREAD
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: orderBy
        in: query
        schema:
          type: string
          default: SEND_DATE
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Retrieves the current authenticated user's inbox.
          It may take several seconds for a message to appear in the inbox after creation.
          </br>
          By default, the most recent unread messages are returned first.
          To flip the ordering, set the "descending" parameter to "false".
          To change the way the messages are ordered, set the "orderBy" parameter to
          either "SEND_DATE" or "SUBJECT".
          To retrieve messages that have been read or archived, set the "inboxFilter" parameter to
          a comma-separated list of values defined in the <a href="${org.sagebionetworks.repo.model.message.MessageStatusType}">MessageStatusType enumeration</a>.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMessageBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMessageBundle'
      x-codegen-request-body-name: body
  /repo/v1/message/outbox:
    get:
      tags:
      - MessageController
      summary: Retrieves the current authenticated user's outbox.
      description: |-
        Retrieves the current authenticated user's outbox.
        </br>
        By default, the most recent messages are returned first.
        To flip the ordering, set the "descending" parameter to "false".
        To change the way the messages are ordered, set the "orderBy" parameter to
        either "SEND_DATE" or "SUBJECT".
      operationId: getOutbox
      parameters:
      - name: descending
        in: query
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: orderBy
        in: query
        schema:
          type: string
          default: SEND_DATE
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Retrieves the current authenticated user's outbox.
          </br>
          By default, the most recent messages are returned first.
          To flip the ordering, set the "descending" parameter to "false".
          To change the way the messages are ordered, set the "orderBy" parameter to
          either "SEND_DATE" or "SUBJECT".
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMessageToUser'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMessageToUser'
      x-codegen-request-body-name: body
  /repo/v1/message/status:
    put:
      tags:
      - MessageController
      summary: Updates the current status of a message relative to the current authenticated
        user.
      description: |-
        Updates the current status of a message relative to the current authenticated user.
        Note: the "recipientId" field of the request body will be ignored.
      operationId: updateMessageStatus
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MessageStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MessageStatus'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/message/{messageId}:
    get:
      tags:
      - MessageController
      summary: Fetches the specified message.
      description: |-
        Fetches the specified message.
        The authenticated user must be either the sender or receiver of the message.
      operationId: getMessage
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
    delete:
      tags:
      - MessageController
      operationId: deleteMessage
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/message/{messageId}/conversation:
    get:
      tags:
      - MessageController
      summary: Retrieves messages belonging to the same thread as the given message.
      description: |-
        Retrieves messages belonging to the same thread as the given message.
        The current authenticated user will be either the sender or receiver of all returned messages.
        </br>
        By default, the most recent messages are returned first.
        To flip the ordering, set the "descending" parameter to "false".
        To change the way the messages are ordered, set the "orderBy" parameter to
        either "SEND_DATE" or "SUBJECT".
      operationId: getConversation
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
      - name: descending
        in: query
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: orderBy
        in: query
        schema:
          type: string
          default: SEND_DATE
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Retrieves messages belonging to the same thread as the given message.
          The current authenticated user will be either the sender or receiver of all returned messages.
          </br>
          By default, the most recent messages are returned first.
          To flip the ordering, set the "descending" parameter to "false".
          To change the way the messages are ordered, set the "orderBy" parameter to
          either "SEND_DATE" or "SUBJECT".
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMessageToUser'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMessageToUser'
      x-codegen-request-body-name: body
  /repo/v1/message/{messageId}/file:
    get:
      tags:
      - MessageController
      summary: Get the actual URL of the file associated with the message.
      description: |-
        Get the actual URL of the file associated with the message
        </br>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
      operationId: fileRedirectForMessage
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/message/{messageId}/forward:
    post:
      tags:
      - MessageController
      summary: Forwards a message to the specified set of recipients.
      description: |-
        Forwards a message to the specified set of recipients.
        The authenticated user must be either the sender or receiver of the forwarded message.
      operationId: forwardMessage
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MessageRecipientSet'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MessageRecipientSet'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MessageToUser'
      x-codegen-request-body-name: body
  /repo/v1/migration/count:
    get:
      tags:
      - MigrationController
      summary: Get the counts for a migration type.
      description: Get the counts for a migration type.
      operationId: getTypeCount
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeCount'
  /repo/v1/migration/counts:
    get:
      tags:
      - MigrationController
      summary: Get the counts for each migration type.
      description: Get the counts for each migration type.
      operationId: getTypeCounts
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeCounts'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeCounts'
  /repo/v1/migration/primarytypes:
    get:
      tags:
      - MigrationController
      summary: The list of primary migration types represents types that either stand-alone
        or are the owner's of other types.
      description: |-
        The list of primary migration types represents types that either stand-alone or are the owner's of other types.
        Migration is driven off this list as secondary types are migrated with their primary owners.
      operationId: getPrimaryTypes
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeList'
  /repo/v1/migration/primarytypes/names:
    get:
      tags:
      - MigrationController
      summary: The list of primary migration type names.
      description: The list of primary migration type names
      operationId: getPrimaryTypeNames
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeNames'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeNames'
  /repo/v1/migration/rangechecksum:
    get:
      tags:
      - MigrationController
      summary: A checksum on ETAG or backup ID for a given range and a given migration
        type.
      description: A checksum on ETAG or backup ID for a given range and a given migration
        type
      operationId: getChecksumForIdRange
      parameters:
      - name: maxId
        in: query
        required: true
        schema:
          type: number
      - name: migrationType
        in: query
        required: true
        schema:
          type: string
      - name: minId
        in: query
        required: true
        schema:
          type: number
      - name: salt
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationRangeChecksum'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationRangeChecksum'
  /repo/v1/migration/typechecksum:
    get:
      tags:
      - MigrationController
      summary: A (table) checksum on a given migration type.
      description: A (table) checksum on a given migration type
      operationId: getChecksumForType
      parameters:
      - name: migrationType
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeChecksum'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeChecksum'
  /repo/v1/migration/types:
    get:
      tags:
      - MigrationController
      summary: The list of  migration types.
      description: The list of  migration types.
      operationId: getMigrationTypes
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeList'
  /repo/v1/migration/types/names:
    get:
      tags:
      - MigrationController
      summary: The list of primary migration type names.
      description: The list of primary migration type names
      operationId: getMigrationTypeNames
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeNames'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MigrationTypeNames'
  /repo/v1/notificationEmail:
    get:
      tags:
      - PrincipalController
      summary: This service returns the email used for user notifications, i.
      description: |-
        This service returns the email used for user notifications, i.e. when a Synapse message is
        sent and if the user has elected to receive messages by email, then this is the email
        address at which the user will receive the message.
      operationId: getNotificationEmail
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_NotificationEmail'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_NotificationEmail'
    put:
      tags:
      - PrincipalController
      summary: This service sets the email used for user notifications, i.
      description: |-
        This service sets the email used for user notifications, i.e. when a Synapse message is
        sent and if the user has elected to receive messages by email, then this is the email
        address at which the user will receive the message.  Note:  The given email address
        must already be established as being owned by the user.
      operationId: setNotificationEmail
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the email address to use for notifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Username'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Username'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/notificationSettings:
    put:
      tags:
      - UserProfileController
      summary: Update email notification settings.
      description: |-
        Update email notification settings.  Note: The request is authenticated by a hash
        message authentication code, generated by Synapse.  The intended use of this
        service is by the portal, completing a round trip with a 'one-click unsubscribe'
        link provided by Synapse via email.
      operationId: updateNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_NotificationSettingsSignedToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_NotificationSettingsSignedToken'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ResponseMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ResponseMessage'
      x-codegen-request-body-name: body
  /repo/v1/principal/alias:
    post:
      tags:
      - PrincipalController
      summary: Lookup a principal ID using an alias and alias type.
      description: Lookup a principal ID using an alias and alias type.
      operationId: getPrincipalAlias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_PrincipalAliasRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_PrincipalAliasRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PrincipalAliasResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PrincipalAliasResponse'
      x-codegen-request-body-name: body
  /repo/v1/principal/available:
    post:
      tags:
      - PrincipalController
      summary: "."
      description: |-
        <p>
        This call is used to determine if an alias is currently available.
        </p>
        <p>A session token is not required for this call.</p>
        Each value of each <a
        href="${org.sagebionetworks.repo.model.principal.AliasType}"
        >AliasType</a> must have a unique string representation. While some
        AliasTypes allow white-space and punctuation, only letters and numbers
        contribute to the uniqueness of the alias. Also while an alias can have
        both upper and lower case letters, the uniqueness test is
        case-insensitive. Here are some examples:
        <ul>
        <li>'foo-bar', 'foo bar', and 'foo.bar' are all the same as 'foobar'</li>
        <li>'FooBar' and 'FOOBAR' are the same as 'foobar'</li>
        <li>'foo', 'foo1', and 'foo2' are each distinct</li>
        </ul>
        Note: This method will NOT reserve the passed alias. So it is possible
        that an alias, could be available during a pre-check, but then consumed
        before the caller has a chance to reserve it.
      operationId: checkAlias
      requestBody:
        description: The request should include both the type and alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AliasCheckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AliasCheckRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AliasCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AliasCheckResponse'
      x-codegen-request-body-name: body
  /repo/v1/project/{projectId}/forum:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get the Forum's metadata for a given project ID.
      description: |-
        This API is used to get the Forum's metadata for a given project ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getForumByProjectId
      parameters:
      - name: projectId
        in: path
        description: '- The ID of the project to which the forum belongs.'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Forum'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Forum'
  /repo/v1/projectSettings:
    put:
      tags:
      - ProjectSettingsController
      summary: Update an existing.
      description: |-
        Update an existing <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>.
        <p>
        Only the users with UPDATE access to the project can update a project setting.
        <p>
        Currently supports:

        <ul>
        <li>
        <a href="${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}">UploadDestinationListSetting</a>: Used to customize the
        storage location for files in a project.
        The id within the <b>locations</b> property must reference existing <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
        that the user created. To create <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
        refer to the <a href="${POST.storageLocation}">POST /storageLocation</a> service
        </li>
        <li>
        <a href="${org.sagebionetworks.repo.model.project.ProjectCertificationSetting}">ProjectCertificationSetting</a>: Used to customize the certification requirement on a project. Only an ACT member can update this setting.</li>
        </ul>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>Max number of storage locations per project</td>
        <td>10</td>
        </tr>
        </table>
        </p>
      operationId: updateProjectSetting
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>
          to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ProjectSetting'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ProjectSetting'
        required: false
      responses:
        200:
          description: ""
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - ProjectSettingsController
      summary: Create a.
      description: |-
        Create a <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a> for a project. The setting may be any of the
        implementations of <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>.
        <p>
        Only the users with CREATE access to the project can add a project setting.
        <p>
        Currently supports:

        <ul>
        <li><a href="${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}">UploadDestinationListSetting</a>: Used to customize the storage location for files in a project or folder.
        The id within the <b>locations</b> property must reference existing <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a> that the user created.</li>
        <li><a href="${org.sagebionetworks.repo.model.project.ProjectCertificationSetting}">ProjectCertificationSetting</a>: Used to customize the certification requirement on a project. Only an ACT member can create this setting.</li>
        </ul>
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>Max number of storage locations per project</td>
        <td>10</td>
        </tr>
        </table>
        </p>
      operationId: createProjectSetting
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>
          object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ProjectSetting'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ProjectSetting'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ProjectSetting'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ProjectSetting'
      x-codegen-request-body-name: body
  /repo/v1/projectSettings/{id}:
    get:
      tags:
      - ProjectSettingsController
      summary: Gets the.
      description: |-
        Gets the <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a> with the given id. Note that this is <b>not</b> the id of a project,
        in order to retrieve the project settings by the project id please refer to <a href="${GET.projectSettings.projectId.type.type}">GET /projectSettings/{projectId}/type/{type}</a>.
        <p>
        Only users with READ access on a project can retrieve its <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>.
      operationId: getProjectSetting
      parameters:
      - name: id
        in: path
        description: the ID of the <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ProjectSetting'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ProjectSetting'
    delete:
      tags:
      - ProjectSettingsController
      summary: Deletes a.
      description: |-
        Deletes a <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>.
        <p>
        Only the users with DELETE access to the project can delete a project setting.

        Additionally only an ACT member can delete a <a href="${org.sagebionetworks.repo.model.project.ProjectCertificationSetting}">ProjectCertificationSetting</a>.
      operationId: deleteProjectSetting
      parameters:
      - name: id
        in: path
        description: The ID of the <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>.
          This is not the ID of the project.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/projectSettings/{projectId}/type/{type}:
    get:
      tags:
      - ProjectSettingsController
      summary: Gets the.
      description: |-
        Gets the <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a> of a particular <a href="${org.sagebionetworks.repo.model.project.ProjectSettingsType}">type</a> for the
        project with the given id.
        <p>
        Currently supported types:
        <ul>
        <li><a href="${org.sagebionetworks.repo.model.project.ProjectSettingsType}">upload</a>: Used to retrieve the <a href="${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}">UploadDestinationListSetting</a></li>
        <li><a href="${org.sagebionetworks.repo.model.project.ProjectSettingsType}">certification</a>: Used to retrieve the <a href="${org.sagebionetworks.repo.model.project.ProjectCertificationSetting}">ProjectCertificationSetting</a></li>

        </ul>
        <p>
        Only users with READ access on a project can retrieve its <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>.
      operationId: getProjectSettingByProjectAndType
      parameters:
      - name: projectId
        in: path
        description: the ID of the project
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: The <a href="${org.sagebionetworks.repo.model.project.ProjectSettingsType}">ProjectSettingsType</a>
          to get.
        required: true
        schema:
          type: string
          enum:
          - certification
          - upload
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ProjectSetting'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ProjectSetting'
  /repo/v1/projects:
    get:
      tags:
      - UserProfileController
      summary: Get a paginated result that contains.
      description: |-
        Get a paginated result that contains <a href="${org.sagebionetworks.repo.model.ProjectHeader}">project
        headers</a> and user activity (last access date) of the caller. The project list includes only
        those for which the user or a team they are on is explicitly granted access in the project's share
        settings.  Other projects, including those visible by virtue of being Public, are not included.
        The list of projects is further filtered as follows:
        <br/>
        If <i>filter</i> is ALL (the default): the projects that the caller has READ access to by virtue of being
        included in the project's share settings personally or via a team in which they are a member, as described above.
        <br/>
        If <i>filter</i> is CREATED: only projects that the caller has created.
        <br/>
        If <i>filter</i> is PARTICIPATED: only projects that the caller has <em>not</em> created.
        <br/>
        If <i>filter</i> is TEAM: the projects that the caller has READ access by virtue of being included in
        the project's share settings via the team given by 'teamId' or, if no team ID is specified, then by any team
        which they are a member of.
        <br/>
      operationId: getProjects
      parameters:
      - name: filter
        in: query
        description: see above
        schema:
          type: string
          enum:
          - ALL
          - CREATED
          - PARTICIPATED
          - TEAM
      - name: nextPageToken
        in: query
        description: a token returned with the previous page of results
        schema:
          type: string
      - name: sort
        in: query
        description: |-
          The optional <a href="${org.sagebionetworks.repo.model.ProjectListSortColumn}">column</a> to sort on.
          <i>Default sort by last activity</i>
        schema:
          type: string
          enum:
          - LAST_ACTIVITY
          - PROJECT_NAME
      - name: sortDirection
        in: query
        description: |-
          The optional <a href="${org.sagebionetworks.repo.model.entity.query.SortDirection}">sort direction</a>.
          <i>Default sort descending</i>
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: teamId
        in: query
        description: If the projectFilter is 'TEAM' then this is the ID of the team
          through which the returned projects are shared with the user.
        schema:
          type: number
      - name: userId
        in: query
        description: The ID of the user making the request
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ProjectHeaderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ProjectHeaderList'
  /repo/v1/projects/user/{principalId}:
    get:
      tags:
      - UserProfileController
      summary: Get a paginated result that contains.
      description: |-
        Get a paginated result that contains <a href="${org.sagebionetworks.repo.model.ProjectHeader}">project
        headers</a> and user activity (last access date) of the user specified by 'principalId'. The project list includes only
        those for which the user or a team they are on is explicitly granted access in the project's share
        settings.  Other projects, including those visible by virtue of being Public, are not included.
        The list of projects is further filtered as follows:
        <br/>
        If <i>filter</i> is ALL (the default): the projects that the user has READ access to by virtue of being
        included in the project's share settings personally or via a team in which they are a member, as described above.
        <br/>
        If <i>filter</i> is CREATED: only projects that the user has created.
        <br/>
        If <i>filter</i> is PARTICIPATED: only projects that the user has <em>not</em> created.
        <br/>
        If <i>filter</i> is TEAM: the projects that the user has READ access by virtue of being included in
        the project's share settings via the team given by 'teamId' or, if no team ID is specified, then by any team
        which they are a member of.
        <br/>
      operationId: getOtherUsersProjects
      parameters:
      - name: principalId
        in: path
        description: The ID of the user to list projects for
        required: true
        schema:
          type: number
      - name: filter
        in: query
        description: see above
        schema:
          type: string
          enum:
          - ALL
          - CREATED
          - PARTICIPATED
          - TEAM
      - name: nextPageToken
        in: query
        description: a token returned with the previous page of results
        schema:
          type: string
      - name: sort
        in: query
        description: |-
          The optional <a href="${org.sagebionetworks.repo.model.ProjectListSortColumn}">column</a> to sort on.
          <i>Default sort by last activity</i>
        schema:
          type: string
          enum:
          - LAST_ACTIVITY
          - PROJECT_NAME
      - name: sortDirection
        in: query
        description: |-
          The optional <a href="${org.sagebionetworks.repo.model.entity.query.SortDirection}">sort direction</a>.
          <i>Default sort descending</i>
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: teamId
        in: query
        description: If the projectFilter is 'TEAM' then this is the ID of the team
          through which the returned projects are shared with 'principalId'.
        schema:
          type: number
      - name: userId
        in: query
        description: The ID of the user making the request
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ProjectHeaderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ProjectHeaderList'
  /repo/v1/projects/{deprecatedType}:
    get:
      tags:
      - UserProfileController
      operationId: getOwnProjectsDeprecated
      parameters:
      - name: deprecatedType
        in: path
        required: true
        schema:
          type: string
          enum:
          - MY_CREATED_PROJECTS
          - MY_PARTICIPATED_PROJECTS
          - MY_PROJECTS
          - MY_TEAM_PROJECTS
          - OTHER_USER_PROJECTS
          - TEAM_PROJECTS
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: sort
        in: query
        schema:
          type: string
          enum:
          - LAST_ACTIVITY
          - PROJECT_NAME
      - name: sortDirection
        in: query
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfProjectHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfProjectHeader'
      deprecated: true
  /repo/v1/projects/{deprecatedType}/team/{teamId}:
    get:
      tags:
      - UserProfileController
      operationId: getProjectsTeamDeprecated
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: number
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: sort
        in: query
        schema:
          type: string
          enum:
          - LAST_ACTIVITY
          - PROJECT_NAME
      - name: sortDirection
        in: query
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfProjectHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfProjectHeader'
      deprecated: true
  /repo/v1/projects/{deprecatedType}/user/{principalId}:
    get:
      tags:
      - UserProfileController
      operationId: getProjectsUserDeprecated
      parameters:
      - name: deprecatedType
        in: path
        required: true
        schema:
          type: string
          enum:
          - MY_CREATED_PROJECTS
          - MY_PARTICIPATED_PROJECTS
          - MY_PROJECTS
          - MY_TEAM_PROJECTS
          - OTHER_USER_PROJECTS
          - TEAM_PROJECTS
      - name: principalId
        in: path
        required: true
        schema:
          type: number
      - name: limit
        in: query
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        schema:
          type: number
          default: 0.0
      - name: sort
        in: query
        schema:
          type: string
          enum:
          - LAST_ACTIVITY
          - PROJECT_NAME
      - name: sortDirection
        in: query
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfProjectHeader'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfProjectHeader'
      deprecated: true
  /repo/v1/reply:
    post:
      tags:
      - DiscussionController
      summary: This API is used to create a new reply to a thread.
      description: |-
        This API is used to create a new reply to a thread.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: createReply
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- This object contains information needed to create a reply.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_CreateDiscussionReply'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_CreateDiscussionReply'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DiscussionReplyBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DiscussionReplyBundle'
      x-codegen-request-body-name: body
  /repo/v1/reply/messageUrl:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get the message URL of a reply.
      description: |-
        This API is used to get the message URL of a reply. The message URL is
        the URL to download the file which contains the reply message.
        <br/>
        Target users: anyone who has READ permission to the project.
        <p>
        The resulting URL will be signed with Content-Type ="text/plain; charset=utf-8";
        therefore, this header must be included with the GET on the URL.
        </p>
      operationId: getReplyUrl
      parameters:
      - name: messageKey
        in: query
        description: '- DiscussionReplyBundle.messageKey'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MessageURL'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MessageURL'
  /repo/v1/reply/{replyId}:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get a reply and its statistic given its ID.
      description: |-
        This API is used to get a reply and its statistic given its ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getReply
      parameters:
      - name: replyId
        in: path
        description: '- The ID of the reply being requested'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DiscussionReplyBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DiscussionReplyBundle'
    delete:
      tags:
      - DiscussionController
      summary: This API is used to mark a reply as deleted.
      description: |-
        This API is used to mark a reply as deleted.
        <br/>
        Target users: only forum's moderator can mark a reply as deleted.
      operationId: markReplyAsDeleted
      parameters:
      - name: replyId
        in: path
        description: '- the ID of the reply being marked as deleted'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/reply/{replyId}/message:
    put:
      tags:
      - DiscussionController
      summary: This API is used to update the message of a reply.
      description: |-
        This API is used to update the message of a reply.
        <br/>
        Target users: only the author of the reply can update its message.
      operationId: updateReplyMessage
      parameters:
      - name: replyId
        in: path
        description: '- The ID of the reply being updated'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- The new message'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_UpdateReplyMessage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_UpdateReplyMessage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DiscussionReplyBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DiscussionReplyBundle'
      x-codegen-request-body-name: body
  /repo/v1/researchProject:
    post:
      tags:
      - DataAccessController
      summary: Create a new ResearchProject or update an existing ResearchProject.
      description: Create a new ResearchProject or update an existing ResearchProject.
      operationId: createOrUpdate
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request.'
        required: true
        schema:
          type: number
      requestBody:
        description: '- The object that contains information needed to create/update
          a ResearchProject.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ResearchProject'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ResearchProject'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ResearchProject'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ResearchProject'
      x-codegen-request-body-name: body
  /repo/v1/restrictionInformation:
    post:
      tags:
      - DataAccessController
      summary: Retrieve restriction information on a restrictable object.
      description: Retrieve restriction information on a restrictable object
      operationId: getRestrictionInformation
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_RestrictionInformationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_RestrictionInformationRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_RestrictionInformationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_RestrictionInformationResponse'
      x-codegen-request-body-name: body
  /repo/v1/schema/list:
    post:
      tags:
      - JsonSchemaController
      summary: List all JSON schemas for an Organization.
      description: |-
        List all JSON schemas for an Organization. Each call will return a single
        page of schemas. Forward the provided nextPageToken to get the next page.
      operationId: listJsonSchemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ListJsonSchemaInfoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ListJsonSchemaInfoRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListJsonSchemaInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListJsonSchemaInfoResponse'
      x-codegen-request-body-name: body
  /repo/v1/schema/organization:
    get:
      tags:
      - JsonSchemaController
      summary: Lookup an Organization by name.
      description: Lookup an Organization by name.
      operationId: getOrganizationByName
      parameters:
      - name: name
        in: query
        description: The name of the Organization to lookup.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Organization'
    post:
      tags:
      - JsonSchemaController
      summary: Create a new.
      description: |-
        Create a new <a href=
        "${org.sagebionetworks.repo.model.schema.Organization}">Organization</a> by
        providing a unique organization name. The new Organization will have an
        auto-generated AcessControlList (ACL) granting the caller all relevant
        permission on the newly created Organization.
      operationId: createOrganziation
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_CreateOrganizationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_CreateOrganizationRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Organization'
      x-codegen-request-body-name: body
  /repo/v1/schema/organization/list:
    post:
      tags:
      - JsonSchemaController
      summary: List all organizations.
      description: |-
        List all organizations. Each call will return a single page of Organizations.
        Forward the provided nextPageToken to get the next page.
      operationId: listOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ListOrganizationsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ListOrganizationsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListOrganizationsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListOrganizationsResponse'
      x-codegen-request-body-name: body
  /repo/v1/schema/organization/{id}:
    delete:
      tags:
      - JsonSchemaController
      summary: Delete the identified Organization.
      description: |-
        Delete the identified Organization. All schemas defined within the
        Organization's name-space must first be deleted before an Organization can be
        deleted.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> permission on the Organization.
        </p>
      operationId: deleteOrganization
      parameters:
      - name: id
        in: path
        description: The numeric identifier of the organization.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/schema/organization/{id}/acl:
    get:
      tags:
      - JsonSchemaController
      summary: Get the AcessControlList (ACL) associated with the identified Organization.
      description: |-
        Get the AcessControlList (ACL) associated with the identified Organization.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}" >ACCESS_TYPE.READ</a>
        permission to get an Organization's ACL.
        </p>
      operationId: getOrganizationAcl
      parameters:
      - name: id
        in: path
        description: The numeric identifier of the organization.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
    put:
      tags:
      - JsonSchemaController
      summary: Update the AccessControlList (ACL) for the identified Organization.
      description: |-
        Update the AccessControlList (ACL) for the identified Organization.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.CHANGE_PERMISSIONS</a> permission to update an Organization's
        ACL.
        </p>
      operationId: updateOrganizationAcl
      parameters:
      - name: id
        in: path
        description: The numeric identifier of the organization.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The updated ACL.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
      x-codegen-request-body-name: body
  /repo/v1/schema/type/create/async/get/{asyncToken}:
    get:
      tags:
      - JsonSchemaController
      summary: |-
        Get the results of an asynchronous job that was started to create a new JSON
        schema.
      description: |-
        Get the results of an asynchronous job that was started to create a new JSON
        schema. *
        <p>
        Note: If the job has not completed, this method will return a status code of
        202 (ACCEPTED) and the response body will be a
        <a href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: createSchemaAsyncGet
      parameters:
      - name: asyncToken
        in: path
        description: Forward the token returned when the job was started.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_CreateSchemaResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_CreateSchemaResponse'
  /repo/v1/schema/type/create/async/start:
    post:
      tags:
      - JsonSchemaController
      summary: Start an asynchronous job to create a new JSON schema.
      description: "Start an asynchronous job to create a new JSON schema.\n<p>\n\
        A JSON schema must include an $id that is a relative URL of that schema. The\n\
        pseudo-BNF syntax for a valid $id is as follows:\n\n<pre>\n < $id > ::= <\
        \ organization name > \"-\" < schema name > [ \"-\"  < semantic version >\
        \ ]\n \n < organization name > ::= < dot separated alpha numeric > \n \n <\
        \ schema name > ::= < dot separated alpha numeric >\n \n < semantic version\
        \ > ::= See: https://semver.org/\n \n < dot separated alpha numeric >  ::\
        \ = < alpha numeric > ( \".\" < alpha numeric > )*\n \n < alpha numeric >\
        \ ::= < letter > ( < identifier > )*\n \n < letter > ::= [a-zA-Z]\n \n < identifier\
        \ > ::= < letter > | < digit >\n \n < digit > :: = [0-9]\n </pre>\n<p>\nTake\
        \ the following example, if organizationName=\"my.organization\",\nschemaName=\"\
        foo.Bar.json\", and semanticVersion=\"0.1.2\", then\n$id=\"my.organization-foo.Bar.json-0.1.2\"\
        . Note: The semantic version is\noptional. When provide the semantic version\
        \ is a label for a specific version\nthat allows other schemas to reference\
        \ it by its version. When a semantic\nversion is include, that version of\
        \ the schema is immutable. This means if a\nsemantic version is included in\
        \ a registered schema's $id, all $refs within\nthe schema must also include\
        \ a semantic version.\n</p>\n<p>\nAll $ref within a JSON schema must either\
        \ be references to \"definitions\"\nwithin the schema or references other\
        \ registered JSON schemas. References to\nnon-registered schemas is not currently\
        \ supported. To reference a registered\nschema $ref should equal the $id of\
        \ the referenced schema. To reference the\nexample schema from above use $ref=\"\
        my.organization-foo.Bar.json-0.1.2\".\n</p>\n<p>\nNote: The semantic version\
        \ of a referenced schema is optional. When the\nsemantic version is excluded\
        \ in a $ref the reference is assumed to reference\nthe latest version of the\
        \ schema. So $ref=\"my.organization-foo.Bar.json\"\nwould be a reference to\
        \ the latest version of that schema. While\n$ref=\"my.organization-foo.Bar.json-0.1.2\"\
        \ would be a reference to the version\n0.1.2\n</p>\nTo monitor the progress\
        \ of the job and to get the final results use:\n<a href=\"${GET.schema.type.create.async.get.asyncToken}\"\
        >GET\nschema/type/create/async/get/{asyncToken}\"</a>\n<p>\nNote: The caller\
        \ must be granted the\n<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\"\
        \n>ACCESS_TYPE.CREATE</a> permission on the Organization in the schema's $id.\n\
        </p>"
      operationId: createSchemaAsyncStart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_CreateSchemaRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_CreateSchemaRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/schema/type/registered/{id}:
    get:
      tags:
      - JsonSchemaController
      summary: Get a registered JSON schema using its $id.
      description: Get a registered JSON schema using its $id.
      operationId: getJsonSchemaNoVersion
      parameters:
      - name: id
        in: path
        description: The relative $id of the JSON schema to get.
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_JsonSchema'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_JsonSchema'
    delete:
      tags:
      - JsonSchemaController
      summary: Delete the given schema using its $id.
      description: |-
        Delete the given schema using its $id. If the $id excludes a semantic
        version, all versions of the schema will be deleted. If the $id includes a
        semantic version then just that version will be deleted. Caution: This
        operation cannot be undone.
        <p>
        Note: The caller must be granted the
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}"
        >ACCESS_TYPE.DELETE</a> permission on the schema's organization.
        </p>
      operationId: deleteSchemaAllVersions
      parameters:
      - name: id
        in: path
        description: The relative $id of the schema to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/schema/type/validation/async/get/{asyncToken}:
    get:
      tags:
      - JsonSchemaController
      summary: |-
        Get the results of an asynchronous job that was started to compile a
        'validation' schema for a JSON schema.
      description: |-
        Get the results of an asynchronous job that was started to compile a
        'validation' schema for a JSON schema.
        <p>
        Note: If the job has not completed, this method will return a status code of
        202 (ACCEPTED) and the response body will be a
        <a href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: getValidationSchemaResults
      parameters:
      - name: asyncToken
        in: path
        description: Forward the token returned when the job was started.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_GetValidationSchemaResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_GetValidationSchemaResponse'
  /repo/v1/schema/type/validation/async/start:
    post:
      tags:
      - JsonSchemaController
      summary: |-
        To use a JSON schema for validation, the JSON schema plus all of its
        dependency schemas must be provided to a JSON schema validator.
      description: |-
        To use a JSON schema for validation, the JSON schema plus all of its
        dependency schemas must be provided to a JSON schema validator. The
        'validation' schema is simply a JSON schema with all of its dependencies
        added to the 'definitions' section of the schema, making the schema
        self-contained.
        <p>
        Use this call to start an asynchronous job that will compile the 'validation'
        schema for a given JSON schema $id.
        </p>
        To monitor the progress of the job and to get the final results use:
        <a href="${GET.schema.type.create.async.get.asyncToken}">GET
        schema/type/validation/async/get/{asyncToken}"</a>
      operationId: startGetValidationSchema
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_GetValidationSchemaRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_GetValidationSchemaRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/schema/version/list:
    post:
      tags:
      - JsonSchemaController
      summary: List the version information for each version of a given schema.
      description: |-
        List the version information for each version of a given schema. Each call
        will return a single page of results. Forward the provide nextPageToken to
        get the next page of results.
      operationId: listJsonSchemasVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ListJsonSchemaVersionInfoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ListJsonSchemaVersionInfoRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListJsonSchemaVersionInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListJsonSchemaVersionInfoResponse'
      x-codegen-request-body-name: body
  /repo/v1/search:
    post:
      tags:
      - SearchController
      summary: Searches for.
      description: |-
        Searches for <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>s that are accessible by the current user.
        If not authenticated, only public result will be shown.
        See <a href="${org.sagebionetworks.repo.model.search.query.SearchFieldName}">SearchFieldName</a> for the list of searchable fields for use in booleanQuery, rangeQuery, and returnFields
      operationId: proxySearch
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SearchQuery'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SearchQuery'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SearchResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SearchResults'
      x-codegen-request-body-name: body
  /repo/v1/statistics:
    post:
      tags:
      - StatisticsController
      summary: Generic endpoint to retrieve statistics about objects.
      description: |-
        Generic endpoint to retrieve statistics about objects. The user should have
        <a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">READ</a> access on the object
        referenced by the objectId in the request.

        Currently supported requests:

        <ul>
        <li><a href=
        "${org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest}">ProjectFilesStatisticsRequest</a>:
        Used to retrieve the statistics about project files, response type: <a href=
        "${org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse}">ProjectFilesStatisticsResponse</a>
        </li>
        </ul>
      operationId: getObjectStatistics
      parameters:
      - name: userId
        in: query
        description: The id of the user requesting the statistics
        required: true
        schema:
          type: number
      requestBody:
        description: The request specifying which type of statistics that should be
          retrieved
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_ObjectStatisticsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_ObjectStatisticsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ObjectStatisticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ObjectStatisticsResponse'
      x-codegen-request-body-name: body
  /repo/v1/status:
    get:
      tags:
      - AdministrationController
      operationId: getStackStatus
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_StackStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_StackStatus'
  /repo/v1/storageLocation:
    get:
      tags:
      - ProjectSettingsController
      summary: This endpoint is deprecated, to retrieve the storage locations of a
        project use the.
      description: |-
        This endpoint is deprecated, to retrieve the storage locations of a project use the <a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">ProjectSetting</a>.
        The list returned by this call is limited to the last 100 storage locations.
        </p>
        Get a list of <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>s that the current user owns.
      operationId: getStorageLocationSettings
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfStorageLocationSetting'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfStorageLocationSetting'
      deprecated: true
    post:
      tags:
      - ProjectSettingsController
      summary: Creates a.
      description: |-
        Creates a <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>, which
        can be associated with a project for users to upload their data to a user-owned location. The request object should
        be an implementation class of <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>,
        such as <a href="${org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting}">ExternalS3StorageLocationSetting</a>.
        </p>
        The creation of a storage location is idempotent for the user: if the same user requests the creation of a storage location that already
        exists with the same properties the previous storage location will be returned.
        </p>
        A storage location can be linked to a project adding its id in the locations property of an
        <a href="${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}">UploadDestinationListSetting</a> and saving the setting to the
        project using the <a href="${POST.projectSettings}">POST /projectSettings</a> or <a href="${PUT.projectSettings}">PUT /projectSettings</a> services.
      operationId: createStorageLocationSetting
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: The setting to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_StorageLocationSetting'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_StorageLocationSetting'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_StorageLocationSetting'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_StorageLocationSetting'
      x-codegen-request-body-name: body
  /repo/v1/storageLocation/{id}:
    get:
      tags:
      - ProjectSettingsController
      summary: Get the.
      description: |-
        Get the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a> with the given id.
        <p>
        Only the creator of the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a> can retrieve it by its id.
      operationId: getStorageLocationSetting
      parameters:
      - name: id
        in: path
        description: the ID of the storage location setting.
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_StorageLocationSetting'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_StorageLocationSetting'
  /repo/v1/storageReport/async/get/{asyncToken}:
    get:
      tags:
      - StorageReportController
      summary: Get the results of a call to.
      description: Get the results of a call to <a href="${POST.storageReport.async.start}">POST
        /storageReport/async/start</a>
      operationId: getStorageReportResults
      parameters:
      - name: asyncToken
        in: path
        description: The async job token from the create/update call
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The ID of the user making the call
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DownloadStorageReportResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DownloadStorageReportResponse'
  /repo/v1/storageReport/async/start:
    post:
      tags:
      - StorageReportController
      summary: Asynchronously creates a report detailing the usage of Synapse storage
        with project-level resolution.
      description: |-
        Asynchronously creates a report detailing the usage of Synapse storage with project-level resolution.
        Retrieve the results with
        <a href="${GET.storageReport.async.get.asyncToken}">GET /storageReport/async/get/{asyncToken}</a>.
      operationId: generateStorageReportCsv
      parameters:
      - name: userId
        in: query
        description: The ID of the user making the call. This call can only be made
          by users in the Synapse Report team.
        required: true
        schema:
          type: number
      requestBody:
        description: A request containing a the type of storage report to generate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_DownloadStorageReportRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_DownloadStorageReportRequest'
        required: false
      responses:
        202:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/subscription:
    post:
      tags:
      - SubscriptionController
      summary: This API is used to subscribe to a topic.
      description: |-
        This API is used to subscribe to a topic.
        <br/>
        Target users: anyone who has READ permission on the object.
      operationId: create
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- Topic to subscribe to'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Topic'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Topic'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Subscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Subscription'
      x-codegen-request-body-name: body
  /repo/v1/subscription/all:
    get:
      tags:
      - SubscriptionController
      summary: This API is used to retrieve all subscriptions one has.
      description: |-
        This API is used to retrieve all subscriptions one has.
        <br/>
        Target users: all Synapse users.
      operationId: getAll
      parameters:
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum Limit for this call is 100.'
        required: true
        schema:
          type: number
      - name: objectType
        in: query
        description: '- User can use this param to filter the results by the type
          of object they subscribed to.'
        required: true
        schema:
          type: string
          enum:
          - DATA_ACCESS_SUBMISSION
          - DATA_ACCESS_SUBMISSION_STATUS
          - FORUM
          - THREAD
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        required: true
        schema:
          type: number
      - name: sortBy
        in: query
        description: '- When provided, the results will be sorted by this type.'
        schema:
          type: string
          enum:
          - CREATED_ON
          - OBJECT_ID
          - OBJECT_TYPE
          - SUBSCRIBER_ID
          - SUBSCRIPTION_ID
      - name: sortDirection
        in: query
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubscriptionPagedResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubscriptionPagedResults'
    post:
      tags:
      - SubscriptionController
      summary: This API is used to subscribe to all topic of the same SubscriptionObjectType.
      description: |-
        This API is used to subscribe to all topic of the same SubscriptionObjectType.
        <br/>
        Only the following SubscriptionObjectType are allowed in this API:
        <ul><li>DATA_ACCESS_SUBMISSION</li></ul>
      operationId: subscribeAll
      parameters:
      - name: objectType
        in: query
        description: '- SubscriptionObjectType to subscribe to'
        required: true
        schema:
          type: string
          enum:
          - DATA_ACCESS_SUBMISSION
          - DATA_ACCESS_SUBMISSION_STATUS
          - FORUM
          - THREAD
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Subscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Subscription'
    delete:
      tags:
      - SubscriptionController
      summary: This API is used to unsubscribe all topics one followed.
      description: |-
        This API is used to unsubscribe all topics one followed.
        <br/>
        Target users: Synapse users
      operationId: deleteAll
      parameters:
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/subscription/list:
    post:
      tags:
      - SubscriptionController
      summary: This API is used to retrieve subscriptions one has based on a list
        of provided topics.
      description: |-
        This API is used to retrieve subscriptions one has based on a list of provided topics.
        These topics must have the same objectType.
        <br/>
        Target users: all Synapse users.
      operationId: getList
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- This object defines what topics the user is asking for'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SubscriptionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SubscriptionRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubscriptionPagedResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubscriptionPagedResults'
      x-codegen-request-body-name: body
  /repo/v1/subscription/subscribers:
    post:
      tags:
      - SubscriptionController
      summary: Retrieve subscribers for a given topic.
      description: Retrieve subscribers for a given topic.
      operationId: getSubscribers
      parameters:
      - name: nextPageToken
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Topic'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Topic'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubscriberPagedResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubscriberPagedResults'
      x-codegen-request-body-name: body
  /repo/v1/subscription/subscribers/count:
    post:
      tags:
      - SubscriptionController
      summary: Retrieve number of subscribers for a given topic.
      description: Retrieve number of subscribers for a given topic.
      operationId: getSubscriberCount
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Topic'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Topic'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SubscriberCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SubscriberCount'
      x-codegen-request-body-name: body
  /repo/v1/subscription/{id}:
    get:
      tags:
      - SubscriptionController
      summary: This API is used to retrieve a subscription given its ID.
      description: |-
        This API is used to retrieve a subscription given its ID
        <br/>
        Target users: Synapse user who created this subscription.
      operationId: get
      parameters:
      - name: id
        in: path
        description: '- the ID of the subscription that is created when the user subscribed
          to the topic'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Subscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Subscription'
    delete:
      tags:
      - SubscriptionController
      summary: This API is used to unsubscribe to a topic.
      description: |-
        This API is used to unsubscribe to a topic.
        <br/>
        Target users: Synapse user who created this subscription.
      operationId: delete
      parameters:
      - name: id
        in: path
        description: '- the ID of the subscription that is created when the user subscribed
          to the topic'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/table/download/csv/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      operationId: csvDownloadAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DownloadFromTableResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DownloadFromTableResult'
      deprecated: true
  /repo/v1/table/download/csv/async/start:
    post:
      tags:
      - TableController
      operationId: csvDownloadAsyncStart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_DownloadFromTableRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_DownloadFromTableRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/table/sql/transform:
    post:
      tags:
      - TableController
      summary: Request to transform the provided SQL based on the request parameters.
      description: |-
        Request to transform the provided SQL based on the request parameters. For
        example, a <a href=
        "${org.sagebionetworks.repo.model.table.TransformSqlWithFacetsRequest}"
        >TransformSqlWithFacetsRequest</a> can be used to alter the where clause
        of the provided SQL based on the provided selected facets.
      operationId: transformSqlRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SqlTransformRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SqlTransformRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SqlTransformResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SqlTransformResponse'
      x-codegen-request-body-name: body
  /repo/v1/table/upload/csv/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      operationId: csvUploadAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UploadToTableResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UploadToTableResult'
      deprecated: true
  /repo/v1/table/upload/csv/async/start:
    post:
      tags:
      - TableController
      operationId: csvUploadAsyncStart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_UploadToTableRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_UploadToTableRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      deprecated: true
      x-codegen-request-body-name: body
  /repo/v1/table/upload/csv/preview/async/get/{asyncToken}:
    get:
      tags:
      - TableController
      summary: Asynchronously get the results of a csv upload preview started with.
      description: |-
        Asynchronously get the results of a csv upload preview started with <a
        href="${POST.table.upload.csv.preview.async.start}">POST
        /table/upload/csv/async/start</a>

        <p>
        Note: When the result is not ready yet, this method will return a status
        code of 202 (ACCEPTED) and the response body will be a <a
        href="${org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus}"
        >AsynchronousJobStatus</a> object.
        </p>
      operationId: csvUploadPreviewAsyncGet
      parameters:
      - name: asyncToken
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UploadToTablePreviewResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UploadToTablePreviewResult'
  /repo/v1/table/upload/csv/preview/async/start:
    post:
      tags:
      - TableController
      summary: "."
      description: |-
        <p>
        The method can be used to test both the parameters for reading an upload
        CSV file and the required table schema. The caller can then adjust both
        parameters and schema before applying the CSV to that table.
        </p>
        Asynchronously start a csv upload preview. Use the returned job id and <a
        href="${GET.table.upload.csv.preview.async.get.asyncToken}">GET
        /table/upload/csv/preview/async/get/{asyncToken}</a> to get the results.
      operationId: csvUploadPreviewAsyncStart
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_UploadToTablePreviewRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_UploadToTablePreviewRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AsyncJobId'
      x-codegen-request-body-name: body
  /repo/v1/team:
    put:
      tags:
      - TeamController
      summary: Update the Team metadata for the specified Team.
      description: |-
        Update the Team metadata for the specified Team.
        Note: The client must be a Team administrator to make this request.
      operationId: updateTeam
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the new metadata for the Team
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Team'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Team'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Team'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Team'
      x-codegen-request-body-name: body
    post:
      tags:
      - TeamController
      summary: Create a new Team.
      description: |-
        Create a new Team. The passed request body may contain the following fields:
        <ul>
        <li>name - Give your new Team a name.  The name must be unique, not used by an existing Team (required).</li>
        <li>description - a short text description of the Team's purpose (optional).</li>
        <li>icon - a fileHandle ID for an icon image file previously uploaded to Synapse (optional).</li>
        </ul>
        <p>
        To specify a Team icon, the icon file must first be uploaded to Synapse as
        <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a> (see
        <a href="${org.sagebionetworks.file.controller.UploadController}">File
        Services</a>). The FileHandle ID can then be put into the Team's icon field.
      operationId: createTeam
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Team'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Team'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Team'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Team'
      x-codegen-request-body-name: body
  /repo/v1/team/acl:
    put:
      tags:
      - TeamController
      summary: Update the Access Control List for the specified Team.
      description: Update the Access Control List for the specified Team.
      operationId: updateTeamACL
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the updated Access Control List
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AccessControlList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
      x-codegen-request-body-name: body
  /repo/v1/team/{id}:
    get:
      tags:
      - TeamController
      summary: Retrieve the metadata for a specified Team.
      description: |-
        Retrieve the metadata for a specified Team.
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum frequency this method can be called</td>
        <td>1 calls per second</td>
        </tr>
        </table>
        </p>
      operationId: getTeam
      parameters:
      - name: id
        in: path
        description: the ID of the Team of interest
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Team'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Team'
    delete:
      tags:
      - TeamController
      summary: Delete the Team.
      description: |-
        Delete the Team.
        Note: The client must be a Team administrator to make this request.
      operationId: deleteTeam
      parameters:
      - name: id
        in: path
        description: the ID of the Team to delete.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/team/{id}/accessApproval:
    get:
      tags:
      - AccessApprovalController
      summary: Retrieve the Access Approvals for the given Team.
      description: Retrieve the Access Approvals for the given Team.  This service
        is only available to the ACT.
      operationId: getTeamAccessApprovals
      parameters:
      - name: id
        in: path
        description: the Team of interest
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum limit for this call is 50.'
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/team/{id}/accessRequirement:
    get:
      tags:
      - AccessRequirementController
      summary: Retrieve paginated list of ALL Access Requirements associated with
        a Team.
      description: Retrieve paginated list of ALL Access Requirements associated with
        a Team.
      operationId: getTeamAccessRequirements
      parameters:
      - name: id
        in: path
        description: the ID of the Team whose Access Requirements are retrieved.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum limit for this call is 50.'
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfAccessRequirement'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfAccessRequirement'
  /repo/v1/team/{id}/acl:
    get:
      tags:
      - TeamController
      summary: Retrieve the AccessControlList for a specified Team.
      description: Retrieve the AccessControlList for a specified Team.
      operationId: getTeamACL
      parameters:
      - name: id
        in: path
        description: the ID of the Team of interest
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_AccessControlList'
  /repo/v1/team/{id}/icon:
    get:
      tags:
      - TeamController
      summary: Retrieve the download URL for the Team icon, or receive a redirect
        response to said URL.
      description: Retrieve the download URL for the Team icon, or receive a redirect
        response to said URL.
      operationId: fileRedirectURLForTeamIcon
      parameters:
      - name: id
        in: path
        description: the ID of the Team
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: if true or omitted, then redirect to the URL.  If false then
          simply return the URL.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/team/{id}/icon/preview:
    get:
      tags:
      - TeamController
      summary: Retrieve the download URL for the Team icon preview, or receive a redirect
        response to said URL.
      description: Retrieve the download URL for the Team icon preview, or receive
        a redirect response to said URL.
      operationId: filePreviewRedirectURLForTeamIcon
      parameters:
      - name: id
        in: path
        description: the ID of the Team
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: if true or omitted, then redirect to the URL.  If false then
          simply return the URL.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/team/{id}/member/{principalId}:
    get:
      tags:
      - TeamController
      summary: "."
      description: |-
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum frequency this method can be called</td>
        <td>1 calls per second</td>
        </tr>
        </table>
        </p>
      operationId: getTeamMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: principalId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_TeamMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_TeamMember'
    put:
      tags:
      - TeamController
      summary: Add a member to the Team.
      description: |-
        Add a member to the Team.
        If the one making the request is the user to be added, then the user must have
        an open invitation from the Team.  If the one making the request is an administrator
        on the Team, then there must be a pending request from the user to the Team, asking
        to be added. If both teamEndpoint and notificationUnsubscribeEndpoint are provided,
        notification email(s) will be sent to the appropriate parties.
      operationId: addTeamMember
      parameters:
      - name: id
        in: path
        description: the ID of the Team to which the user is to be added.
        required: true
        schema:
          type: string
      - name: principalId
        in: path
        description: the ID of the user to be added to the Team.
        required: true
        schema:
          type: string
      - name: notificationUnsubscribeEndpoint
        in: query
        description: |-
          the portal prefix for one-click email unsubscription.
          A signed, serialized token is appended to create the complete URL:
          <ahref="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}">NotificationSettingsSignedToken</a>
        schema:
          type: string
      - name: teamEndpoint
        in: query
        description: the portal prefix for the Team URL. The team ID is appended to
          create the complete URL.
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
    delete:
      tags:
      - TeamController
      summary: Remove the given member from the specified Team.
      description: |-
        Remove the given member from the specified Team.
        Note:  The client must either be a Team administrator or the member being removed.
      operationId: removeTeamMember
      parameters:
      - name: id
        in: path
        description: the Team ID
        required: true
        schema:
          type: string
      - name: principalId
        in: path
        description: the member's principal ID
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/team/{id}/member/{principalId}/membershipStatus:
    get:
      tags:
      - TeamController
      summary: Retrieve the Team Membership Status bundle for a team and user.
      description: |-
        Retrieve the Team Membership Status bundle for a team and user.  This says whether a user is
        a member of a Team, whether there are outstanding membership requests or invitations, and
        whether the client making the request can add the given user to the given Team.
      operationId: getTeamMembershipStatus
      parameters:
      - name: id
        in: path
        description: the Team ID
        required: true
        schema:
          type: string
      - name: principalId
        in: path
        description: the user ID
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_TeamMembershipStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_TeamMembershipStatus'
  /repo/v1/team/{id}/member/{principalId}/permission:
    put:
      tags:
      - TeamController
      summary: Add or remove administrative permission for a Team member.
      description: |-
        Add or remove administrative permission for a Team member.
        Note: The client must be a Team administrator to make this request.
      operationId: setTeamAdmin
      parameters:
      - name: id
        in: path
        description: the Team ID
        required: true
        schema:
          type: string
      - name: principalId
        in: path
        description: the user ID
        required: true
        schema:
          type: string
      - name: isAdmin
        in: query
        description: if true, administrative permission is grant.  If false it is
          revoked.
        required: true
        schema:
          type: boolean
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      deprecated: true
  /repo/v1/team/{id}/memberList:
    post:
      tags:
      - TeamController
      summary: Returns the TeamMember info for a team and a given list of members'
        principal IDs.
      description: |-
        Returns the TeamMember info for a team and a given list of members' principal IDs.

        Invalid IDs in the list are ignored:  The results list is simply
        smaller than the list of IDs passed in.
      operationId: listTeamMembersGivenTeamandUserList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_IdList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_IdList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfTeamMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfTeamMember'
      x-codegen-request-body-name: body
  /repo/v1/team/{id}/openInvitation:
    get:
      tags:
      - MembershipInvitationController
      summary: Retrieve the open invitations from a Team, optionally filtering by
        the invitee.
      description: |-
        Retrieve the open invitations from a Team, optionally filtering by the invitee.
        An invitation is only open if it has not expired and if the user has not joined the Team.

        Note: certain fields may be omitted when returned if the field value is null
      operationId: getOpenInvitationsByTeam
      parameters:
      - name: id
        in: path
        description: the ID of the Team extending the invitations
        required: true
        schema:
          type: string
      - name: inviteeId
        in: query
        description: the ID of the Synapse user to which invitations have been extended
          (optional)
        schema:
          type: string
      - name: limit
        in: query
        description: the maximum number of invitations to return (default 10)
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: the starting index of the returned results (default 0)
        schema:
          type: integer
          default: 0
      - name: userId
        in: query
        description: the ID of the user making the request
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipInvitation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipInvitation'
  /repo/v1/team/{id}/openRequest:
    get:
      tags:
      - MembershipRequestController
      summary: Retrieve the open requests submitted to a Team, optionally filtering
        by the requester.
      description: |-
        Retrieve the open requests submitted to a Team, optionally filtering by the requester.
        An request is only open if it has not expired and if the requester has not been added the Team.
        <p>
        <b>Service Limits</b>
        <table border="1">
        <tr>
        <th>resource</th>
        <th>limit</th>
        </tr>
        <tr>
        <td>The maximum frequency this method can be called</td>
        <td>40 calls per minute</td>
        </tr>
        </table>
        </p>
      operationId: getOpenRequestsByTeam
      parameters:
      - name: id
        in: path
        description: Team ID
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: the maximum number of requests to return (default 10)
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: the starting index of the returned results (default 0)
        schema:
          type: integer
          default: 0
      - name: requestorId
        in: query
        description: the ID of the user requesting admission to the Team
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipRequest'
  /repo/v1/teamList:
    post:
      tags:
      - TeamController
      summary: Retrieve a list of Teams given their IDs.
      description: |-
        Retrieve a list of Teams given their IDs.

        Invalid IDs in the list are ignored:  The results list is simply
        smaller than the list of IDs passed in.
      operationId: listTeams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_IdList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_IdList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfTeam'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfTeam'
      x-codegen-request-body-name: body
  /repo/v1/teamMember:
    put:
      tags:
      - TeamController
      summary: Add a member to the Team.
      description: |-
        Add a member to the Team.  Note: The request is authenticated by a hash
        message authentication code in the request body, generated by Synapse.  The intended use of this
        service is by the portal, completing a round trip with a 'one-click join-team'
        link provided to the user by Synapse via email. If both teamEndpoint and
        notificationUnsubscribeEndpoint are provided, notification email(s) will
        be sent to the appropriate parties.
      operationId: addTeamMemberViaSignedToken
      parameters:
      - name: notificationUnsubscribeEndpoint
        in: query
        schema:
          type: string
      - name: teamEndpoint
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_JoinTeamSignedToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_JoinTeamSignedToken'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ResponseMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ResponseMessage'
      x-codegen-request-body-name: body
  /repo/v1/teamMembers/count/{id}:
    get:
      tags:
      - TeamController
      summary: Retrieve the number of Team members matching the supplied name prefix.
      description: |-
        Retrieve the number of Team members matching the supplied name prefix.  If the prefix
        is omitted then the number of members in the team is returned.
        <br>
        Note:  This service has JSONP support:  If the request parameter "callback=jsMethod" is included (where
        'jsMethod' is any function name you wish), then the response body will be wrapped in "jsMethod(...);".
      operationId: getTeamMemberCount
      parameters:
      - name: id
        in: path
        description: the id of the Team of interest
        required: true
        schema:
          type: string
      - name: fragment
        in: query
        description: a prefix of the user's first or last name or email address (optional)
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_Count'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_Count'
  /repo/v1/teamMembers/{id}:
    get:
      tags:
      - TeamController
      summary: Retrieve a paginated list of Team members matching the supplied name
        prefix.
      description: |-
        Retrieve a paginated list of Team members matching the supplied name prefix.  If the prefix
        is omitted then all members are returned.
        <br>
        Note:  This service has JSONP support:  If the request parameter "callback=jsMethod" is included (where
        'jsMethod' is any function name you wish), then the response body will be wrapped in "jsMethod(...);".
      operationId: getTeamMembers
      parameters:
      - name: id
        in: path
        description: the id of the Team of interest
        required: true
        schema:
          type: string
      - name: fragment
        in: query
        description: a prefix of the user's first or last name or email address (optional)
        schema:
          type: string
      - name: limit
        in: query
        description: the maximum number of members to return (default 10, max limit
          50)
        schema:
          type: integer
          default: 10
      - name: memberType
        in: query
        description: the type of team user to retrieve (optional; default "ALL")
        schema:
          type: string
          enum:
          - ADMIN
          - ALL
          - MEMBER
      - name: offset
        in: query
        description: the starting index of the returned results (default 0)
        schema:
          type: integer
          default: 0
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTeamMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTeamMember'
  /repo/v1/teams:
    get:
      tags:
      - TeamController
      summary: |-
        Retrieve a paginated list of Teams matching the supplied name fragment (optional),
        in alphabetical order by Team name.
      description: |-
        Retrieve a paginated list of Teams matching the supplied name fragment (optional),
        in alphabetical order by Team name.
        <br>
        Note:  This service has JSONP support:  If the request parameter "callback=jsMethod" is included (where
        'jsMethod' is any function name you wish), then the response body will be wrapped in "jsMethod(...);".
      operationId: getTeamsByNameFragment
      parameters:
      - name: fragment
        in: query
        description: |-
          a prefix of the Team name, or a prefix of any sub-string in the name preceded by a space.
          If omitted, all Teams are returned.
        schema:
          type: string
      - name: limit
        in: query
        description: the maximum number of Teams to return (default 10, max limit
          50)
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: the starting index of the returned results (default 0)
        schema:
          type: integer
          default: 0
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTeam'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTeam'
  /repo/v1/thread:
    post:
      tags:
      - DiscussionController
      summary: This API is used to create a new thread in a forum.
      description: |-
        This API is used to create a new thread in a forum.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: createThread
      parameters:
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- This object contains information needed to create a thread'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_CreateDiscussionThread'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_CreateDiscussionThread'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
      x-codegen-request-body-name: body
  /repo/v1/thread/messageUrl:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get the message URL of a thread.
      description: |-
        This API is used to get the message URL of a thread. The message URL is
        the URL to download the file which contains the thread message.
        <br/>
        Target users: anyone who has READ permission to the project.
        <p>
        The resulting URL will be signed with Content-Type ="text/plain; charset=utf-8";
        therefore, this header must be included with the GET on the URL.
        </p>
      operationId: getThreadUrl
      parameters:
      - name: messageKey
        in: query
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MessageURL'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_MessageURL'
  /repo/v1/thread/{threadId}:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get a thread and its statistic given its ID.
      description: |-
        This API is used to get a thread and its statistic given its ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getThread
      parameters:
      - name: threadId
        in: path
        description: '- The ID of the thread being requested'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
    delete:
      tags:
      - DiscussionController
      summary: This API is used to mark a thread as deleted.
      description: |-
        This API is used to mark a thread as deleted.
        <br/>
        Target users: only forum's moderator can mark a thread as deleted.
      operationId: markThreadAsDeleted
      parameters:
      - name: threadId
        in: path
        description: '- the ID of the thread being marked as deleted'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/thread/{threadId}/message:
    put:
      tags:
      - DiscussionController
      summary: This API is used to update the message of a thread.
      description: |-
        This API is used to update the message of a thread.
        <br/>
        Target users: only the author of the thread can update its message.
      operationId: updateThreadMessage
      parameters:
      - name: threadId
        in: path
        description: '- The ID of the thread being updated'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- The new message'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_UpdateThreadMessage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_UpdateThreadMessage'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
      x-codegen-request-body-name: body
  /repo/v1/thread/{threadId}/pin:
    put:
      tags:
      - DiscussionController
      summary: This API is used to mark a thread as pinned.
      description: |-
        This API is used to mark a thread as pinned.
        <br/>
        Target users: only forum's moderator can mark a thread as pinned.
      operationId: pinThread
      parameters:
      - name: threadId
        in: path
        description: '- the ID of the thread being marked as pinned'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/thread/{threadId}/replies:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get N number of replies for a given thread ID.
      description: |-
        This API is used to get N number of replies for a given thread ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getRepliesForThread
      parameters:
      - name: threadId
        in: path
        description: '- The thread ID to which the returning replies belong'
        required: true
        schema:
          type: string
      - name: ascending
        in: query
        description: '- The direction of sort: true for ascending, and false for descending'
        schema:
          type: boolean
      - name: filter
        in: query
        description: '- Filter deleted/ not deleted replies. Available options: <a
          href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">DiscussionFilter</a>.'
        required: true
        schema:
          type: string
          enum:
          - DELETED_ONLY
          - EXCLUDE_DELETED
          - NO_FILTER
      - name: limit
        in: query
        description: '- Limits the size of the page returned. For example, a page
          size of 10 require limit = 10. The maximum Limit for this call is 100.'
        required: true
        schema:
          type: number
      - name: offset
        in: query
        description: '- The index of the pagination offset. For a page size of 10,
          the first page would be at offset = 0, and the second page would be at offset
          = 10.'
        required: true
        schema:
          type: number
      - name: sort
        in: query
        description: '- The field to sort the resulting replies on. Available options:
          <a href="${org.sagebionetworks.repo.model.discussion.DiscussionReplyOrder}">DiscussionReplyOrder</a>.'
        schema:
          type: string
          enum:
          - CREATED_ON
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDiscussionReplyBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfDiscussionReplyBundle'
  /repo/v1/thread/{threadId}/replycount:
    get:
      tags:
      - DiscussionController
      summary: This API is used to get the total number of replies for a given thread
        ID.
      description: |-
        This API is used to get the total number of replies for a given thread ID.
        <br/>
        Target users: anyone who has READ permission to the project.
      operationId: getReplyCountForThread
      parameters:
      - name: threadId
        in: path
        description: '- The thread ID to which the returning replies belong'
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: '- Filter deleted/ not deleted replies. Available options: <a
          href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">DiscussionFilter</a>.'
        required: true
        schema:
          type: string
          enum:
          - DELETED_ONLY
          - EXCLUDE_DELETED
          - NO_FILTER
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ReplyCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ReplyCount'
  /repo/v1/thread/{threadId}/restore:
    put:
      tags:
      - DiscussionController
      summary: This API is used to restore a deleted thread.
      description: |-
        This API is used to restore a deleted thread.
        <br/>
        Target users: only forum's moderator can restore a deleted thread.
      operationId: restoreDeletedThread
      parameters:
      - name: threadId
        in: path
        description: '- the ID of the thread that was marked as deleted'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/thread/{threadId}/title:
    put:
      tags:
      - DiscussionController
      summary: This API is used to update the title of a thread.
      description: |-
        This API is used to update the title of a thread.
        <br/>
        Target users: only the author of the thread can update its title.
      operationId: updateThreadTitle
      parameters:
      - name: threadId
        in: path
        description: '- The ID of the thread being updated'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- The ID of the user who is making the request'
        required: true
        schema:
          type: number
      requestBody:
        description: '- The new title'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_UpdateThreadTitle'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_UpdateThreadTitle'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_DiscussionThreadBundle'
      x-codegen-request-body-name: body
  /repo/v1/thread/{threadId}/unpin:
    put:
      tags:
      - DiscussionController
      summary: This API is used to unpin a thread.
      description: |-
        This API is used to unpin a thread.
        <br/>
        Target users: only forum's moderator can unpin a thread.
      operationId: unpinThread
      parameters:
      - name: threadId
        in: path
        description: '- the ID of the thread being unpinned'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: '- the ID of the user who is making the request'
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/trashcan/purge/{id}:
    put:
      tags:
      - TrashController
      summary: Flags the specified entity for priority purge.
      description: |-
        Flags the specified entity for priority purge. The entity will be deleted as soon as possible. Once purging is done, the entity
        will be permanently deleted from the system.
      operationId: flagForPurge
      parameters:
      - name: id
        in: path
        description: The ID of the entity to be purged.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Flags the specified entity for priority purge. The entity will be deleted as soon as possible. Once purging is done, the entity
          will be permanently deleted from the system.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/trashcan/restore/{id}:
    put:
      tags:
      - TrashController
      summary: Moves an entity and its descendants out of the trash can back to its
        original parent.
      description: |-
        Moves an entity and its descendants out of the trash can back to its original parent. An exception
        is thrown if the original parent does not exist any more.  In that case, please use
        <a href="${PUT.trashcan.restore.id.parentId}">PUT /trashcan/restored/{id}/{parentId}</a> to
        restore to a new parent.  In such a case you must be a member of the Synapse Access and
        Compliance Team.
      operationId: restoreFromTrash
      parameters:
      - name: id
        in: path
        description: The ID of the entity being restored out of the trash can.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Moves an entity and its descendants out of the trash can back to its original parent. An exception
          is thrown if the original parent does not exist any more.  In that case, please use
          <a href="${PUT.trashcan.restore.id.parentId}">PUT /trashcan/restored/{id}/{parentId}</a> to
          restore to a new parent.  In such a case you must be a member of the Synapse Access and
          Compliance Team.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/trashcan/restore/{id}/{parentId}:
    put:
      tags:
      - TrashController
      summary: Moves an entity and its descendants out of the trash can to a new parent.
      description: |-
        Moves an entity and its descendants out of the trash can to a new parent.
        NOTE:  This operation cannot be completed if the original parent has been
        deleted (unless the caller is a member of the Synapse Access and Compliance Team).
        The service will return a NotFoundException.  This is because of the potential
        security hole arising from allowing access requirements
        on folders:  If an entity is in a restricted folder and then deleted, it cannot
        be restored unless the new parent has the same restriction level as the original one.
      operationId: restoreFromTrash
      parameters:
      - name: id
        in: path
        description: The ID of the entity being restored out of the trash can.
        required: true
        schema:
          type: string
      - name: parentId
        in: path
        description: The ID of the new parent entity.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Moves an entity and its descendants out of the trash can to a new parent.
          NOTE:  This operation cannot be completed if the original parent has been
          deleted (unless the caller is a member of the Synapse Access and Compliance Team).
          The service will return a NotFoundException.  This is because of the potential
          security hole arising from allowing access requirements
          on folders:  If an entity is in a restricted folder and then deleted, it cannot
          be restored unless the new parent has the same restriction level as the original one.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/trashcan/trash/{id}:
    put:
      tags:
      - TrashController
      summary: Moves an entity and its descendants to the trash can.
      description: Moves an entity and its descendants to the trash can.
      operationId: moveToTrash
      parameters:
      - name: id
        in: path
        description: The ID of the entity being moved to the trash can.
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Moves an entity and its descendants to the trash can.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/trashcan/view:
    get:
      tags:
      - TrashController
      summary: Retrieves the paginated list of trash entities deleted by the current
        user.
      description: Retrieves the paginated list of trash entities deleted by the current
        user.
      operationId: viewTrashForUser
      parameters:
      - name: limit
        in: query
        description: The maximum number of entities to retrieve per page.
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: Paginated results. Offset to the current page.
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Retrieves the paginated list of trash entities deleted by the
          current user.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTrashedEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTrashedEntity'
      x-codegen-request-body-name: body
  /repo/v1/user:
    get:
      tags:
      - UserProfileController
      summary: Get all publicly available.
      description: Get all publicly available <a href="${org.sagebionetworks.repo.model.UserProfile}">UserProfile</a>
        data in the system
      operationId: getUserProfilesPaginated
      parameters:
      - name: ascending
        in: query
        description: Used to indicate whether the sort direction is ascending or not.  <p><i>Default
          is true</i></p>
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        description: Limits the number of items that will be fetched for this page.
          <p><i>Default is 100</i></p>
        schema:
          type: integer
          default: 100
      - name: offset
        in: query
        description: The offset index determines where this page will start from.
          An index of 0 is the first item. <p><i>Default is 0</i></p>
        schema:
          type: integer
          default: 0
      - name: sort
        in: query
        description: Used to indicate upon which field(s) to sort. <p><i>Default is
          NONE</i></p>
        schema:
          type: string
          default: NONE
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: Get all publicly available <a href="${org.sagebionetworks.repo.model.UserProfile}">UserProfile</a>
          data in the system
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfUserProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfUserProfile'
      x-codegen-request-body-name: body
  /repo/v1/user/bundle:
    get:
      tags:
      - UserProfileController
      summary: Get the user bundle of the caller (my own bundle).
      description: |-
        Get the user bundle of the caller (my own bundle).
        <p><b>Note:</b> Private fields will be returned.</p>
      operationId: getMyOwnUserBundle
      parameters:
      - name: mask
        in: query
        description: "integer flag defining which components to include in the bundle\n\
          \n<p> This integer is used as a bit-string of flags to specify which parts\
          \ to include\nin the UserBundle. The mask is defined as follows:\n<ul>\n\
          <li>\tUserProfile  = 0x1 </li>\n<li> ORCID  = 0x2 </li>\n<li> VerificationSubmission\
          \  = 0x4 </li>\n<li> IsCertified = 0x8 </li>\n<li> Is Verified  = 0x10 </li>\n\
          <li> Is ACT Member = 0x20 </li>\n</ul>\n</p>"
        required: true
        schema:
          type: integer
      - name: userId
        in: query
        description: The user who is making the request.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserBundle'
  /repo/v1/user/{id}/bundle:
    get:
      tags:
      - UserProfileController
      summary: Get the user bundle of a specified user.
      description: |-
        Get the user bundle of a specified user.
        <p><b>Note:</b> Private fields (e.g. "rStudioUrl") are omitted unless the requester is the profile owner or an administrator.</p>
      operationId: getUserBundleByOwnerId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: mask
        in: query
        description: "integer flag defining which components to include in the bundle\n\
          \n<p> This integer is used as a bit-string of flags to specify which parts\
          \ to include\nin the UserBundle. The mask is defined as follows:\n<ul>\n\
          <li>\tUserProfile  = 0x1 </li>\n<li> ORCID  = 0x2 </li>\n<li> VerificationSubmission\
          \  = 0x4 </li>\n<li> IsCertified = 0x8 </li>\n<li> Is Verified  = 0x10 </li>\n\
          <li> Is ACT Member = 0x20 </li>\n</ul>\n</p>"
        required: true
        schema:
          type: integer
      - name: userId
        in: query
        description: The user who is making the request.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserBundle'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserBundle'
  /repo/v1/user/{id}/certificationStatus:
    put:
      tags:
      - CertifiedUserController
      operationId: setUserCertificationStatus
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
  /repo/v1/user/{id}/certifiedUserPassingRecord:
    get:
      tags:
      - CertifiedUserController
      summary: Retrieve the Passing Record on the User Certification test for the
        given user.
      description: Retrieve the Passing Record on the User Certification test for
        the given user.
      operationId: getPassingRecord
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PassingRecord'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PassingRecord'
  /repo/v1/user/{id}/certifiedUserPassingRecords:
    get:
      tags:
      - CertifiedUserController
      operationId: getPassingRecords
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
            application/xml:
              schema:
                type: string
                description: ""
        410:
          description: ""
          content: {}
      deprecated: true
  /repo/v1/user/{id}/memberList:
    post:
      tags:
      - TeamController
      summary: Returns the TeamMember info for a user and a given list of Team IDs.
      description: |-
        Returns the TeamMember info for a user and a given list of Team IDs.
        Not Found status is returned if the user ID is invalid, any of the Team IDs
        are invalid, or the user is not in any of the given teams.
      operationId: listTeamMembersGivenUserandTeamList
      parameters:
      - name: id
        in: path
        description: user's ID
        required: true
        schema:
          type: number
      requestBody:
        description: Team IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_IdList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_IdList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfTeamMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfTeamMember'
      x-codegen-request-body-name: body
  /repo/v1/user/{id}/openInvitation:
    get:
      tags:
      - MembershipInvitationController
      summary: Retrieve the open invitations to a user, optionally filtering by the
        Team of origin.
      description: |-
        Retrieve the open invitations to a user, optionally filtering by the Team of origin.
        An invitation is only open if it has not expired and if the user has not joined the Team.

        Note: certain fields may be omitted when returned if the field value is null
      operationId: getOpenInvitationsByUser
      parameters:
      - name: id
        in: path
        description: the ID of the Synapse user to which invitations have been extended.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: the maximum number of invitations to return (default 10)
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: the starting index of the returned results (default 0)
        schema:
          type: integer
          default: 0
      - name: teamId
        in: query
        description: the ID of the Team extending the invitations (optional)
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipInvitation'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipInvitation'
  /repo/v1/user/{id}/openRequest:
    get:
      tags:
      - MembershipRequestController
      summary: Retrieve the open requests submitted by a user, optionally filtering
        by the Team.
      description: |-
        Retrieve the open requests submitted by a user, optionally filtering by the Team.
        An request is only open if it has not expired and if the requester has not been added the Team.
        Note:  The 'id' in the URI must be the same ID as that of the authenticated user issuing the request.
      operationId: getOpenRequestsByUser
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: the maximum number of requests to return (default 10)
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: the starting index of the returned results (default 0)
        schema:
          type: integer
          default: 0
      - name: teamId
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfMembershipRequest'
  /repo/v1/user/{id}/team:
    get:
      tags:
      - TeamController
      summary: Retrieve a paginated list of Teams to which the given user belongs.
      description: Retrieve a paginated list of Teams to which the given user belongs.
      operationId: getTeamsByMember
      parameters:
      - name: id
        in: path
        description: the principal ID of the user of interest.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: the maximum number of Teams to return (default 10)
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: the starting index of the returned results (default 0)
        schema:
          type: integer
          default: 0
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTeam'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfTeam'
  /repo/v1/user/{id}/team/id:
    get:
      tags:
      - TeamController
      summary: Retrieve a paginated list of IDs of Teams to which the given user belongs.
      description: |-
        Retrieve a paginated list of IDs of Teams to which the given user belongs. If sorting is desired, both sort and
        ascending must be specified. If they are omitted, results are not sorted.
      operationId: getTeamIdsByMember
      parameters:
      - name: id
        in: path
        description: the principal ID of the user of interest
        required: true
        schema:
          type: string
      - name: ascending
        in: query
        description: 'the direction of sort: true for ascending, and false for descending'
        schema:
          type: boolean
      - name: nextPageToken
        in: query
        description: controls pagination
        schema:
          type: string
      - name: sort
        in: query
        description: the field to sort the team IDs on. Available options <a href="${org.sagebionetworks.repo.model.TeamSortOrder}">TeamSortOrder</a>
        schema:
          type: string
          enum:
          - TEAM_NAME
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedTeamIds'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedTeamIds'
  /repo/v1/userGroup:
    get:
      tags:
      - UserGroupController
      summary: Get the user-groups in the system.
      description: Get the user-groups in the system
      operationId: getUserGroups
      parameters:
      - name: ascending
        in: query
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        schema:
          type: integer
          default: 100
      - name: offset
        in: query
        schema:
          type: integer
          default: 0
      - name: sort
        in: query
        schema:
          type: string
          default: NONE
      - name: userId
        in: query
        description: '- The user that is making the request.'
        required: true
        schema:
          type: number
      requestBody:
        description: Get the user-groups in the system
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfUserGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_PaginatedResultsOfUserGroup'
      x-codegen-request-body-name: body
  /repo/v1/userGroupHeaders:
    get:
      tags:
      - UserProfileController
      summary: Get Users and Groups that match the given prefix.
      description: Get Users and Groups that match the given prefix.
      operationId: getUserGroupHeadersByPrefix
      parameters:
      - name: limit
        in: query
        description: |-
          Limits the number of items that will be fetched for this page.
          <p>
          <i>Default is 10</i>
          </p>
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: |-
          The offset index determines where this page will start from.
          An index of 0 is the first item.
          <p>
          <i>Default is 0</i>
          </p>
        schema:
          type: integer
          default: 0
      - name: prefix
        in: query
        description: The name to search for.
        schema:
          type: string
      - name: typeFilter
        in: query
        description: |-
          Restrict the results to a type of principal.
          Available options: <a href="${org.sagebionetworks.repo.model.principal.TypeFilter}">TypeFilter</a>.
        schema:
          type: string
          enum:
          - ALL
          - TEAMS_ONLY
          - USERS_ONLY
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserGroupHeaderResponsePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserGroupHeaderResponsePage'
  /repo/v1/userGroupHeaders/aliases:
    post:
      tags:
      - UserProfileController
      summary: Get Users and Groups that match the given list of aliases.
      description: Get Users and Groups that match the given list of aliases.
      operationId: getUserGroupHeadersByAliases
      requestBody:
        description: |-
          The list of principal aliases to lookup. Each alias must be
          either a user name or team name. The maximum number of aliases per request is 100.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_AliasList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_AliasList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserGroupHeaderResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserGroupHeaderResponse'
      x-codegen-request-body-name: body
  /repo/v1/userGroupHeaders/batch:
    get:
      tags:
      - UserProfileController
      summary: Batch get UserGroupHeaders.
      description: |-
        Batch get UserGroupHeaders.
        This fetches information about a collection of users or groups, specified by Synapse IDs.
      operationId: getUserGroupHeadersByIds
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: ids
        in: query
        description: 'IDs are specified as request parameters at the end of the URL,
          separated by commas.  <p>For example: <pre class="prettyprint">ids=1001,819</pre></p>'
        required: true
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: |-
          Batch get UserGroupHeaders.
          This fetches information about a collection of users or groups, specified by Synapse IDs.
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserGroupHeaderResponsePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserGroupHeaderResponsePage'
      x-codegen-request-body-name: body
  /repo/v1/userProfile:
    get:
      tags:
      - UserProfileController
      summary: Get the profile of the caller (my profile).
      description: |-
        Get the profile of the caller (my profile).
        <p><b>Note:</b> Private user profile fields will be returned.</p>
      operationId: getMyOwnUserProfile
      parameters:
      - name: userId
        in: query
        description: The user who is making the request.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserProfile'
    put:
      tags:
      - UserProfileController
      summary: Update your own profile.
      description: |-
        Update your own profile
        <p><b>Note: </b> The user associated with the UserProfile "ownerId" must match the identity of the caller,
        otherwise an Unauthorized response will occur.</p>
      operationId: updateUserProfile
      parameters:
      - name: userId
        in: query
        description: The user that is making the request.
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_UserProfile'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_UserProfile'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserProfile'
      x-codegen-request-body-name: body
    post:
      tags:
      - UserProfileController
      summary: Batch get UserGroupHeaders.
      description: |-
        Batch get UserGroupHeaders.
        This fetches information about a collection of users or groups, specified by Synapse IDs.
      operationId: listUserProfiles
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: 'IDs are specified as request parameters at the end of the URL,
          separated by commas. <p>For example: <pre class="prettyprint">ids=1001,819</pre></p>'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_IdList'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_IdList'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfUserProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_ListWrapperOfUserProfile'
      x-codegen-request-body-name: body
  /repo/v1/userProfile/{profileId}:
    get:
      tags:
      - UserProfileController
      summary: Get the profile of a specified user.
      description: |-
        Get the profile of a specified user.
        <p><b>Note:</b> Private fields (e.g. "rStudioUrl") are omitted unless the requester is the profile owner or an administrator.</p>
      operationId: getUserProfileByOwnerId
      parameters:
      - name: profileId
        in: path
        description: The target profile owner ID (the "id" field returned in the "/user"
          request).
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user who is making the request.
        required: true
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_UserProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_UserProfile'
  /repo/v1/userProfile/{profileId}/image:
    get:
      tags:
      - UserProfileController
      summary: Get the actual URL of the image file associated with a user's profile.
      description: |-
        Get the actual URL of the image file associated with a user's profile.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
      operationId: imageRedirectURLForUser
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: Success
          content: {}
  /repo/v1/userProfile/{profileId}/image/preview:
    get:
      tags:
      - UserProfileController
      summary: Get the actual URL of the image file associated with a user's profile.
      description: |-
        Get the actual URL of the image file associated with a user's profile.
        <p>
        Note: This call will result in a HTTP temporary redirect (307), to the
        actual file URL if the caller meets all of the download requirements.
        </p>
      operationId: imagePreviewRedirectURLForUser
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
      - name: redirect
        in: query
        description: |-
          When set to false, the URL will be returned as text/plain
          instead of redirecting.
        schema:
          type: boolean
      - name: status
        in: query
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        200:
          description: Success
          content: {}
  /repo/v1/verificationSubmission:
    get:
      tags:
      - VerificationController
      summary: List the verification submissions in the system.
      description: |-
        List the verification submissions in the system.  This service is available only
        to the Synapse Access and Compliance Team.  Submissions may be filtered by the
        requesting user and/or the submission state.
      operationId: listVerificationSubmissions
      parameters:
      - name: currentVerificationState
        in: query
        description: filter on the state of the verification submission (optional)
        schema:
          type: string
          enum:
          - APPROVED
          - REJECTED
          - SUBMITTED
          - SUSPENDED
      - name: limit
        in: query
        description: page size pagination parameter (optional)
        schema:
          type: number
          default: 10.0
      - name: offset
        in: query
        description: page start pagination parameter (zero offset, optional)
        schema:
          type: number
          default: 0.0
      - name: userId
        in: query
        required: true
        schema:
          type: number
      - name: verifiedUserId
        in: query
        description: filter on the user requesting verification (optional)
        schema:
          type: number
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_VerificationPagedResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_VerificationPagedResults'
    post:
      tags:
      - VerificationController
      summary: Create a VerficationSubmission.
      description: |-
        Create a VerficationSubmission.  The content must match that of the user's
        profile.  Notification is the request is sent to the Synapse Access and
        Compliance Team.
      operationId: createVerificationSubmission
      parameters:
      - name: notificationUnsubscribeEndpoint
        in: query
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the object holding the submitted verification content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_VerificationSubmission'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_VerificationSubmission'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_VerificationSubmission'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_VerificationSubmission'
      x-codegen-request-body-name: body
  /repo/v1/verificationSubmission/{id}:
    delete:
      tags:
      - VerificationController
      summary: Delete a verification submission by its ID.
      description: |-
        Delete a verification submission by its ID.
        Note:  This service may be called only by the original verification requestor.
      operationId: deleteVerificationSubmission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: userId
        in: query
        required: true
        schema:
          type: number
      responses:
        204:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
  /repo/v1/verificationSubmission/{id}/state:
    post:
      tags:
      - VerificationController
      summary: Update the state of a verification submission.
      description: "Update the state of a verification submission.  The allowed transitions\
        \ are:\n<ul>\n<li>\tSubmitted -> Approved </li>\n<li>\tSubmitted -> Rejected\
        \ </li>\n<li>\tApproved  -> Suspended </li>\n</ul>\nNotification is sent to\
        \ the user who requested verification. After approval or rejection the files\
        \ attached to the submission\nwill not be available."
      operationId: changeVerificationSubmissionState
      parameters:
      - name: id
        in: path
        description: the ID of the verification submission
        required: true
        schema:
          type: number
      - name: notificationUnsubscribeEndpoint
        in: query
        description: the portal prefix for one-click email unsubscription
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: number
      requestBody:
        description: the state to which the verification submission is to be set
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_VerificationState'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_VerificationState'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
            application/xml:
              schema:
                type: string
                description: ""
                format: binary
      x-codegen-request-body-name: body
  /repo/v1/version:
    get:
      tags:
      - SynapseVersionInfoController
      operationId: getVersionInfo
      requestBody:
        content:
          application/json: {}
          application/xml: {}
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SynapseVersionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/json_SynapseVersionInfo'
      x-codegen-request-body-name: body
components:
  schemas:
    json_ACCESS_TYPE:
      title: ACCESS_TYPE
      type: string
      description: ""
      enum:
      - CREATE
      - READ
      - UPDATE
      - DELETE
      - CHANGE_PERMISSIONS
      - DOWNLOAD
      - UPLOAD
      - PARTICIPATE
      - SUBMIT
      - READ_PRIVATE_SUBMISSION
      - UPDATE_SUBMISSION
      - DELETE_SUBMISSION
      - TEAM_MEMBERSHIP_UPDATE
      - SEND_MESSAGE
      - CHANGE_SETTINGS
      - MODERATE
    json_AccessApproval:
      title: AccessApproval
      type: object
      properties:
        state:
          $ref: '#/components/schemas/json_ApprovalState'
        createdBy:
          type: string
          description: ""
        id:
          type: number
          description: ""
        requirementId:
          type: number
          description: ""
        createdOn:
          type: number
          description: ""
        submitterId:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        requirementVersion:
          type: number
          description: ""
        modifiedOn:
          type: number
          description: ""
        accessorId:
          type: string
          description: ""
        expiredOn:
          type: number
          description: ""
        modifiedBy:
          type: string
          description: ""
      description: ""
      example:
        state: APPROVED
        createdBy: '...'
        id: 12345
        requirementId: 12345
        createdOn: 12345
        submitterId: '...'
        etag: '...'
        requirementVersion: 12345
        modifiedOn: 12345
        accessorId: '...'
        expiredOn: 12345
        modifiedBy: '...'
    json_AccessApprovalInfo:
      title: AccessApprovalInfo
      type: object
      properties:
        hasAccessApproval:
          type: boolean
          description: ""
        accessRequirementId:
          type: string
          description: ""
        userId:
          type: string
          description: ""
      description: ""
      example:
        hasAccessApproval: true
        accessRequirementId: '...'
        userId: '...'
    json_AccessApprovalNotification:
      title: AccessApprovalNotification
      type: object
      properties:
        sentOn:
          type: number
          description: ""
        recipientId:
          type: number
          description: ""
        notificationType:
          $ref: '#/components/schemas/json_NotificationType'
        requirementId:
          type: number
          description: ""
      description: ""
      example:
        sentOn: 12345
        recipientId: 12345
        notificationType: FIRST_RENEWAL_REMINDER
        requirementId: 12345
    json_AccessApprovalNotificationRequest:
      title: AccessApprovalNotificationRequest
      type: object
      properties:
        recipientIds:
          type: array
          description: ""
          items:
            type: number
        requirementId:
          type: number
          description: ""
      description: ""
      example:
        recipientIds:
        - 12345
        - 12345
        requirementId: 12345
    json_AccessApprovalNotificationResponse:
      title: AccessApprovalNotificationResponse
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessApprovalNotification'
        requirementId:
          type: number
          description: ""
      description: ""
      example:
        results:
        - sentOn: 12345
          recipientId: 12345
          notificationType: REVOCATION
          requirementId: 12345
        - sentOn: 12345
          recipientId: 12345
          notificationType: REVOCATION
          requirementId: 12345
        requirementId: 12345
    json_AccessControlList:
      title: AccessControlList
      type: object
      properties:
        createdBy:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        resourceAccess:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ResourceAccess'
        creationDate:
          type: number
          description: ""
        id:
          type: string
          description: ""
      description: ""
      example:
        createdBy: '...'
        etag: '...'
        modifiedBy: '...'
        modifiedOn: 12345
        resourceAccess:
        - principalId: 12345
          accessType:
          - UPDATE_SUBMISSION
          - CHANGE_PERMISSIONS
        - principalId: 12345
          accessType:
          - UPDATE
          - SEND_MESSAGE
        creationDate: 12345
        id: '...'
    json_AccessRequirement:
      title: AccessRequirement
      type: object
      properties:
        subjectIds:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_RestrictableObjectDescriptor'
        etag:
          type: string
          description: ""
        accessType:
          $ref: '#/components/schemas/json_ACCESS_TYPE'
        concreteType:
          type: string
          description: ""
        versionNumber:
          type: number
          description: ""
        modifiedBy:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        description:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        id:
          type: number
          description: ""
      description: ""
      example:
        subjectIds:
        - type: EVALUATION
          id: '...'
        - type: TEAM
          id: '...'
        etag: '...'
        accessType: SUBMIT
        concreteType: '...'
        versionNumber: 12345
        modifiedBy: '...'
        createdBy: '...'
        createdOn: 12345
        description: '...'
        modifiedOn: 12345
        id: 12345
    json_AccessRequirementConversionRequest:
      title: AccessRequirementConversionRequest
      type: object
      properties:
        etag:
          type: string
          description: ""
        accessRequirementId:
          type: string
          description: ""
        currentVersion:
          type: number
          description: ""
      description: ""
      example:
        etag: '...'
        accessRequirementId: '...'
        currentVersion: 12345
    json_AccessRequirementStatus:
      title: AccessRequirementStatus
      type: object
      properties:
        accessRequirementId:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        expiredOn:
          type: number
          description: ""
        isApproved:
          type: boolean
          description: ""
      description: ""
      example:
        accessRequirementId: '...'
        concreteType: '...'
        expiredOn: 12345
        isApproved: true
    json_AccessType:
      title: AccessType
      type: string
      description: ""
      enum:
      - GAIN_ACCESS
      - RENEW_ACCESS
      - REVOKE_ACCESS
    json_AccessorChange:
      title: AccessorChange
      type: object
      properties:
        userId:
          type: string
          description: ""
        type:
          $ref: '#/components/schemas/json_AccessType'
      description: ""
      example:
        userId: '...'
        type: RENEW_ACCESS
    json_AccessorGroup:
      title: AccessorGroup
      type: object
      properties:
        accessRequirementId:
          type: string
          description: ""
        expiredOn:
          type: number
          description: ""
        submitterId:
          type: string
          description: ""
        accessorIds:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        accessRequirementId: '...'
        expiredOn: 12345
        submitterId: '...'
        accessorIds:
        - '...'
        - '...'
    json_AccessorGroupRequest:
      title: AccessorGroupRequest
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        expireBefore:
          type: number
          description: ""
        accessRequirementId:
          type: string
          description: ""
        submitterId:
          type: string
          description: ""
      description: ""
      example:
        nextPageToken: '...'
        expireBefore: 12345
        accessRequirementId: '...'
        submitterId: '...'
    json_AccessorGroupResponse:
      title: AccessorGroupResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessorGroup'
      description: ""
      example:
        nextPageToken: '...'
        results:
        - accessRequirementId: '...'
          expiredOn: 12345
          submitterId: '...'
          accessorIds:
          - '...'
          - '...'
        - accessRequirementId: '...'
          expiredOn: 12345
          submitterId: '...'
          accessorIds:
          - '...'
          - '...'
    json_AccessorGroupRevokeRequest:
      title: AccessorGroupRevokeRequest
      type: object
      properties:
        accessRequirementId:
          type: string
          description: ""
        submitterId:
          type: string
          description: ""
      description: ""
      example:
        accessRequirementId: '...'
        submitterId: '...'
    json_AccountSetupInfo:
      title: AccountSetupInfo
      type: object
      properties:
        password:
          type: string
          description: ""
        firstName:
          type: string
          description: ""
        lastName:
          type: string
          description: ""
        username:
          type: string
          description: ""
        emailValidationSignedToken:
          $ref: '#/components/schemas/json_EmailValidationSignedToken'
      description: ""
      example:
        password: '...'
        firstName: '...'
        lastName: '...'
        username: '...'
        emailValidationSignedToken:
          userId: '...'
          concreteType: '...'
          email: '...'
          hmac: '...'
          version: 12345
          createdOn: 12345
          expiresOn: 12345
    json_Activity:
      title: Activity
      type: object
      properties:
        modifiedOn:
          type: number
          description: ""
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        used:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Used'
        modifiedBy:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        description:
          type: string
          description: ""
        name:
          type: string
          description: ""
        id:
          type: string
          description: ""
      description: ""
      example:
        modifiedOn: 12345
        createdBy: '...'
        createdOn: 12345
        used:
        - wasExecuted: true
          concreteType: '...'
        - wasExecuted: true
          concreteType: '...'
        modifiedBy: '...'
        etag: '...'
        description: '...'
        name: '...'
        id: '...'
    json_AdminRequest:
      title: AdminRequest
      type: object
      properties:
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
    json_AliasCheckRequest:
      title: AliasCheckRequest
      type: object
      properties:
        type:
          $ref: '#/components/schemas/json_AliasType'
        alias:
          type: string
          description: ""
      description: ""
      example:
        type: USER_EMAIL
        alias: '...'
    json_AliasCheckResponse:
      title: AliasCheckResponse
      type: object
      properties:
        valid:
          type: boolean
          description: ""
        available:
          type: boolean
          description: ""
      description: ""
      example:
        valid: true
        available: true
    json_AliasList:
      title: AliasList
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        list:
        - '...'
        - '...'
    json_AliasType:
      title: AliasType
      type: string
      description: ""
      enum:
      - USER_NAME
      - TEAM_NAME
      - USER_EMAIL
      - USER_OPEN_ID
      - USER_ORCID
    json_Annotations_v2:
      title: Annotations
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/json_AnnotationsValue'
          description: ""
        id:
          type: string
          description: ""
        etag:
          type: string
          description: ""
      description: ""
      example:
        annotations:
          property1:
            value:
            - '...'
            - '...'
            type: STRING
          property2:
            value:
            - '...'
            - '...'
            type: STRING
        id: '...'
        etag: '...'
    json_Annotations:
      title: Annotations
      type: object
      properties:
        etag:
          type: string
          description: ""
        stringAnnotations:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: ""
        doubleAnnotations:
          type: object
          additionalProperties:
            type: array
            items:
              type: number
          description: ""
        dateAnnotations:
          type: object
          additionalProperties:
            type: array
            items:
              type: number
          description: ""
        empty:
          type: boolean
          description: ""
        id:
          type: string
          description: ""
        blobAnnotations:
          type: object
          additionalProperties:
            type: string
          description: ""
        longAnnotations:
          type: object
          additionalProperties:
            type: array
            items:
              type: number
          description: ""
      description: ""
      example:
        etag: '...'
        stringAnnotations:
          property1:
          - '...'
          - '...'
          property2:
          - '...'
          - '...'
        doubleAnnotations:
          property1:
          - 12345
          - 12345
          property2:
          - 12345
          - 12345
        dateAnnotations:
          property1:
          - 12345
          - 12345
          property2:
          - 12345
          - 12345
        empty: true
        id: '...'
        blobAnnotations:
          property1: '...'
          property2: '...'
        longAnnotations:
          property1:
          - 12345
          - 12345
          property2:
          - 12345
          - 12345
    json_Annotations_annotation:
      title: Annotations
      type: object
      properties:
        objectId:
          type: string
          description: ""
        doubleAnnos:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_DoubleAnnotation'
        scopeId:
          type: string
          description: ""
        version:
          type: number
          description: ""
        stringAnnos:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_StringAnnotation'
        longAnnos:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_LongAnnotation'
      description: ""
      example:
        objectId: '...'
        doubleAnnos:
        - key: '...'
          isPrivate: true
          value: 12345
        - key: '...'
          isPrivate: true
          value: 12345
        scopeId: '...'
        version: 12345
        stringAnnos:
        - key: '...'
          value: '...'
          isPrivate: true
        - key: '...'
          value: '...'
          isPrivate: true
        longAnnos:
        - value: 12345
          key: '...'
          isPrivate: true
        - value: 12345
          key: '...'
          isPrivate: true
    json_AnnotationsValue:
      title: AnnotationsValue
      type: object
      properties:
        value:
          type: array
          description: ""
          items:
            type: string
        type:
          $ref: '#/components/schemas/json_AnnotationsValueType'
      description: ""
      example:
        value:
        - '...'
        - '...'
        type: DOUBLE
    json_AnnotationsValueType:
      title: AnnotationsValueType
      type: string
      description: ""
      enum:
      - STRING
      - DOUBLE
      - LONG
      - TIMESTAMP_MS
    json_AppendableRowSet:
      title: AppendableRowSet
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        tableId:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        tableId: '...'
    json_AppendableRowSetRequest:
      title: AppendableRowSetRequest
      type: object
      properties:
        toAppend:
          $ref: '#/components/schemas/json_AppendableRowSet'
        concreteType:
          type: string
          description: ""
        entityId:
          type: string
          description: ""
      description: ""
      example:
        toAppend:
          concreteType: '...'
          tableId: '...'
        concreteType: '...'
        entityId: '...'
    json_ApprovalState:
      title: ApprovalState
      type: string
      description: ""
      enum:
      - APPROVED
      - REVOKED
    json_AsyncJobId:
      title: AsyncJobId
      type: object
      properties:
        token:
          type: string
          description: ""
      description: ""
      example:
        token: '...'
    json_AsyncMigrationRequest:
      title: AsyncMigrationRequest
      type: object
      properties:
        adminRequest:
          $ref: '#/components/schemas/json_AdminRequest'
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        adminRequest:
          concreteType: '...'
        concreteType: '...'
    json_AsynchJobState:
      title: AsynchJobState
      type: string
      description: ""
      enum:
      - PROCESSING
      - FAILED
      - COMPLETE
    json_AsynchronousJobStatus:
      title: AsynchronousJobStatus
      type: object
      properties:
        etag:
          type: string
          description: ""
        jobCanceling:
          type: boolean
          description: ""
        changedOn:
          type: number
          description: ""
        progressCurrent:
          type: number
          description: ""
        responseBody:
          $ref: '#/components/schemas/json_AsynchronousResponseBody'
        errorMessage:
          type: string
          description: ""
        startedOn:
          type: number
          description: ""
        requestBody:
          $ref: '#/components/schemas/json_AsynchronousRequestBody'
        progressTotal:
          type: number
          description: ""
        startedByUserId:
          type: number
          description: ""
        progressMessage:
          type: string
          description: ""
        jobId:
          type: string
          description: ""
        runtimeMS:
          type: number
          description: ""
        exception:
          type: string
          description: ""
        errorDetails:
          type: string
          description: ""
        jobState:
          $ref: '#/components/schemas/json_AsynchJobState'
      description: ""
      example:
        etag: '...'
        jobCanceling: true
        changedOn: 12345
        progressCurrent: 12345
        responseBody:
          concreteType: '...'
        errorMessage: '...'
        startedOn: 12345
        requestBody:
          concreteType: '...'
        progressTotal: 12345
        startedByUserId: 12345
        progressMessage: '...'
        jobId: '...'
        runtimeMS: 12345
        exception: '...'
        errorDetails: '...'
        jobState: PROCESSING
    json_AsynchronousRequestBody:
      title: AsynchronousRequestBody
      type: object
      properties:
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
    json_AsynchronousResponseBody:
      title: AsynchronousResponseBody
      type: object
      properties:
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
    json_Attachment:
      title: Attachment
      type: object
      properties:
        file_name:
          type: string
          description: ""
        disposition:
          type: string
          description: ""
        content_type:
          type: string
          description: ""
        content_id:
          type: string
          description: ""
        url:
          type: string
          description: ""
        content:
          type: string
          description: ""
        size:
          type: string
          description: ""
      description: ""
      example:
        file_name: '...'
        disposition: '...'
        content_type: '...'
        content_id: '...'
        url: '...'
        content: '...'
        size: '...'
    json_AttachmentMetadata:
      title: AttachmentMetadata
      type: object
      properties:
        fileName:
          type: string
          description: ""
        id:
          type: string
          description: ""
      description: ""
      example:
        fileName: '...'
        id: '...'
    json_AuthorizationCheckHeader:
      title: AuthorizationCheckHeader
      type: object
      properties:
        to:
          type: string
          description: ""
        from:
          type: string
          description: ""
        helo_domain:
          type: string
          description: ""
        remote_ip:
          type: string
          description: ""
        size:
          type: number
          description: ""
      description: ""
      example:
        to: '...'
        from: '...'
        helo_domain: '...'
        remote_ip: '...'
        size: 12345
    json_BatchAccessApprovalInfoRequest:
      title: BatchAccessApprovalInfoRequest
      type: object
      properties:
        accessRequirementIds:
          type: array
          description: ""
          items:
            type: string
        userId:
          type: string
          description: ""
      description: ""
      example:
        accessRequirementIds:
        - '...'
        - '...'
        userId: '...'
    json_BatchAccessApprovalInfoResponse:
      title: BatchAccessApprovalInfoResponse
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessApprovalInfo'
      description: ""
      example:
        results:
        - hasAccessApproval: true
          accessRequirementId: '...'
          userId: '...'
        - hasAccessApproval: true
          accessRequirementId: '...'
          userId: '...'
    json_BatchUploadResponse:
      title: BatchUploadResponse
      type: object
      properties:
        nextUploadToken:
          type: string
          description: ""
      description: ""
      example:
        nextUploadToken: '...'
    json_BindSchemaToEntityRequest:
      title: BindSchemaToEntityRequest
      type: object
      properties:
        schema$id:
          type: string
          description: ""
        entityId:
          type: string
          description: ""
      description: ""
      example:
        schema$id: '...'
        entityId: '...'
    json_BooleanResult:
      title: BooleanResult
      type: object
      properties:
        result:
          type: boolean
          description: ""
      description: ""
      example:
        result: true
    json_BoundObjectType:
      title: BoundObjectType
      type: string
      description: ""
      enum:
      - entity
    json_Challenge:
      title: Challenge
      type: object
      properties:
        etag:
          type: string
          description: ""
        projectId:
          type: string
          description: ""
        participantTeamId:
          type: string
          description: ""
        id:
          type: string
          description: ""
      description: ""
      example:
        etag: '...'
        projectId: '...'
        participantTeamId: '...'
        id: '...'
    json_ChallengePagedResults:
      title: ChallengePagedResults
      type: object
      properties:
        totalNumberOfResults:
          type: number
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Challenge'
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - etag: '...'
          projectId: '...'
          participantTeamId: '...'
          id: '...'
        - etag: '...'
          projectId: '...'
          participantTeamId: '...'
          id: '...'
    json_ChallengeTeam:
      title: ChallengeTeam
      type: object
      properties:
        id:
          type: string
          description: ""
        teamId:
          type: string
          description: ""
        challengeId:
          type: string
          description: ""
        message:
          type: string
          description: ""
        etag:
          type: string
          description: ""
      description: ""
      example:
        id: '...'
        teamId: '...'
        challengeId: '...'
        message: '...'
        etag: '...'
    json_ChallengeTeamPagedResults:
      title: ChallengeTeamPagedResults
      type: object
      properties:
        totalNumberOfResults:
          type: number
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ChallengeTeam'
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - id: '...'
          teamId: '...'
          challengeId: '...'
          message: '...'
          etag: '...'
        - id: '...'
          teamId: '...'
          challengeId: '...'
          message: '...'
          etag: '...'
    json_ChangeMessage:
      title: ChangeMessage
      type: object
      properties:
        objectType:
          $ref: '#/components/schemas/json_ObjectType'
        concreteType:
          type: string
          description: ""
        objectVersion:
          type: number
          description: ""
        timestamp:
          type: number
          description: ""
        changeNumber:
          type: number
          description: ""
        userId:
          type: number
          description: ""
        changeType:
          $ref: '#/components/schemas/json_ChangeType'
        objectId:
          type: string
          description: ""
      description: ""
      example:
        objectType: PROJECT_SETTING
        concreteType: '...'
        objectVersion: 12345
        timestamp: 12345
        changeNumber: 12345
        userId: 12345
        changeType: CREATE
        objectId: '...'
    json_ChangeMessages:
      title: ChangeMessages
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ChangeMessage'
      description: ""
      example:
        list:
        - objectType: WIKI
          concreteType: '...'
          objectVersion: 12345
          timestamp: 12345
          changeNumber: 12345
          userId: 12345
          changeType: CREATE
          objectId: '...'
        - objectType: TEAM
          concreteType: '...'
          objectVersion: 12345
          timestamp: 12345
          changeNumber: 12345
          userId: 12345
          changeType: UPDATE
          objectId: '...'
    json_ChangeType:
      title: ChangeType
      type: string
      description: ""
      enum:
      - CREATE
      - UPDATE
      - DELETE
    json_ColumnModel:
      title: ColumnModel
      type: object
      properties:
        maximumSize:
          type: number
          description: ""
        enumValues:
          type: array
          description: ""
          items:
            type: string
        name:
          type: string
          description: ""
        columnType:
          $ref: '#/components/schemas/json_ColumnType'
        id:
          type: string
          description: ""
        maximumListLength:
          type: number
          description: ""
        defaultValue:
          type: string
          description: ""
        facetType:
          $ref: '#/components/schemas/json_FacetType'
      description: ""
      example:
        maximumSize: 12345
        enumValues:
        - '...'
        - '...'
        name: '...'
        columnType: INTEGER_LIST
        id: '...'
        maximumListLength: 12345
        defaultValue: '...'
        facetType: enumeration
    json_ColumnModelPage:
      title: ColumnModelPage
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ColumnModel'
      description: ""
      example:
        nextPageToken: '...'
        results:
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: ENTITYID_LIST
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: USERID_LIST
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
    json_ColumnType:
      title: ColumnType
      type: string
      description: ""
      enum:
      - STRING
      - DOUBLE
      - INTEGER
      - BOOLEAN
      - DATE
      - FILEHANDLEID
      - ENTITYID
      - SUBMISSIONID
      - EVALUATIONID
      - LINK
      - LARGETEXT
      - USERID
      - STRING_LIST
      - INTEGER_LIST
      - BOOLEAN_LIST
      - DATE_LIST
      - ENTITYID_LIST
      - USERID_LIST
    json_Count:
      title: Count
      type: object
      properties:
        count:
          type: number
          description: ""
      description: ""
      example:
        count: 12345
    json_CreateDiscussionReply:
      title: CreateDiscussionReply
      type: object
      properties:
        messageMarkdown:
          type: string
          description: ""
        threadId:
          type: string
          description: ""
      description: ""
      example:
        messageMarkdown: '...'
        threadId: '...'
    json_CreateDiscussionThread:
      title: CreateDiscussionThread
      type: object
      properties:
        messageMarkdown:
          type: string
          description: ""
        title:
          type: string
          description: ""
        forumId:
          type: string
          description: ""
      description: ""
      example:
        messageMarkdown: '...'
        title: '...'
        forumId: '...'
    json_CreateOrganizationRequest:
      title: CreateOrganizationRequest
      type: object
      properties:
        organizationName:
          type: string
          description: ""
      description: ""
      example:
        organizationName: '...'
    json_CreateSchemaRequest:
      title: CreateSchemaRequest
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/json_JsonSchema'
        concreteType:
          type: string
          description: ""
        dryRun:
          type: boolean
          description: ""
      description: ""
      example:
        schema:
          oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: array
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        concreteType: '...'
        dryRun: true
    json_CreateSchemaResponse:
      title: CreateSchemaResponse
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        newVersionInfo:
          $ref: '#/components/schemas/json_JsonSchemaVersionInfo'
        validationSchema:
          $ref: '#/components/schemas/json_JsonSchema'
      description: ""
      example:
        concreteType: '...'
        newVersionInfo:
          organizationName: '...'
          versionId: '...'
          $id: '...'
          semanticVersion: '...'
          schemaId: '...'
          schemaName: '...'
          createdBy: '...'
          jsonSHA256Hex: '...'
          organizationId: '...'
          createdOn: 12345
        validationSchema:
          oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: number
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
    json_CreateSubmissionRequest:
      title: CreateSubmissionRequest
      type: object
      properties:
        requestId:
          type: string
          description: ""
        subjectId:
          type: string
          description: ""
        requestEtag:
          type: string
          description: ""
        subjectType:
          $ref: '#/components/schemas/json_RestrictableObjectType'
      description: ""
      example:
        requestId: '...'
        subjectId: '...'
        requestEtag: '...'
        subjectType: EVALUATION
    json_CsvTableDescriptor:
      title: CsvTableDescriptor
      type: object
      properties:
        separator:
          type: string
          description: ""
        isFirstLineHeader:
          type: boolean
          description: ""
        quoteCharacter:
          type: string
          description: ""
        lineEnd:
          type: string
          description: ""
        escapeCharacter:
          type: string
          description: ""
      description: ""
      example:
        separator: '...'
        isFirstLineHeader: true
        quoteCharacter: '...'
        lineEnd: '...'
        escapeCharacter: '...'
    json_DataType:
      title: DataType
      type: string
      description: ""
      enum:
      - SENSITIVE_DATA
      - OPEN_DATA
    json_DataTypeResponse:
      title: DataTypeResponse
      type: object
      properties:
        objectType:
          $ref: '#/components/schemas/json_ObjectType'
        updatedBy:
          type: string
          description: ""
        updatedOn:
          type: number
          description: ""
        dataType:
          $ref: '#/components/schemas/json_DataType'
        objectId:
          type: string
          description: ""
      description: ""
      example:
        objectType: FORM_GROUP
        updatedBy: '...'
        updatedOn: 12345
        dataType: OPEN_DATA
        objectId: '...'
    json_Direction:
      title: Direction
      type: string
      description: ""
      enum:
      - ASC
      - DESC
    json_DiscussionReplyBundle:
      title: DiscussionReplyBundle
      type: object
      properties:
        threadId:
          type: string
          description: ""
        id:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        forumId:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        projectId:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        isDeleted:
          type: boolean
          description: ""
        isEdited:
          type: boolean
          description: ""
        messageKey:
          type: string
          description: ""
      description: ""
      example:
        threadId: '...'
        id: '...'
        modifiedOn: 12345
        forumId: '...'
        createdBy: '...'
        createdOn: 12345
        projectId: '...'
        etag: '...'
        isDeleted: true
        isEdited: true
        messageKey: '...'
    json_DiscussionThreadBundle:
      title: DiscussionThreadBundle
      type: object
      properties:
        etag:
          type: string
          description: ""
        id:
          type: string
          description: ""
        messageKey:
          type: string
          description: ""
        isDeleted:
          type: boolean
          description: ""
        createdOn:
          type: number
          description: ""
        isPinned:
          type: boolean
          description: ""
        modifiedOn:
          type: number
          description: ""
        isEdited:
          type: boolean
          description: ""
        activeAuthors:
          type: array
          description: ""
          items:
            type: string
        projectId:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        forumId:
          type: string
          description: ""
        title:
          type: string
          description: ""
        lastActivity:
          type: number
          description: ""
        numberOfViews:
          type: number
          description: ""
        numberOfReplies:
          type: number
          description: ""
      description: ""
      example:
        etag: '...'
        id: '...'
        messageKey: '...'
        isDeleted: true
        createdOn: 12345
        isPinned: true
        modifiedOn: 12345
        isEdited: true
        activeAuthors:
        - '...'
        - '...'
        projectId: '...'
        createdBy: '...'
        forumId: '...'
        title: '...'
        lastActivity: 12345
        numberOfViews: 12345
        numberOfReplies: 12345
    json_DockerAuthorizationToken:
      title: DockerAuthorizationToken
      type: object
      properties:
        token:
          type: string
          description: ""
      description: ""
      example:
        token: '...'
    json_DockerCommit:
      title: DockerCommit
      type: object
      properties:
        digest:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        tag:
          type: string
          description: ""
      description: ""
      example:
        digest: '...'
        createdOn: 12345
        tag: '...'
    json_DockerRegistryEvent:
      title: DockerRegistryEvent
      type: object
      properties:
        request:
          $ref: '#/components/schemas/json_RegistryEventRequest'
        actor:
          $ref: '#/components/schemas/json_RegistryEventActor'
        action:
          $ref: '#/components/schemas/json_RegistryEventAction'
        source:
          $ref: '#/components/schemas/json_RegistryEventSource'
        id:
          type: string
          description: ""
        target:
          $ref: '#/components/schemas/json_RegistryEventTarget'
        timestamp:
          type: number
          description: ""
      description: ""
      example:
        request:
          addr: '...'
          useragent: '...'
          host: '...'
          id: '...'
          method: '...'
        actor:
          name: '...'
        action: push
        source:
          addr: '...'
          instanceID: '...'
        id: '...'
        target:
          size: 12345
          mediaType: '...'
          repository: '...'
          url: '...'
          digest: '...'
          length: 12345
          tag: '...'
        timestamp: 12345
    json_DockerRegistryEventList:
      title: DockerRegistryEventList
      type: object
      properties:
        events:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_DockerRegistryEvent'
      description: ""
      example:
        events:
        - request:
            addr: '...'
            useragent: '...'
            host: '...'
            id: '...'
            method: '...'
          actor:
            name: '...'
          action: push
          source:
            addr: '...'
            instanceID: '...'
          id: '...'
          target:
            size: 12345
            mediaType: '...'
            repository: '...'
            url: '...'
            digest: '...'
            length: 12345
            tag: '...'
          timestamp: 12345
        - request:
            addr: '...'
            useragent: '...'
            host: '...'
            id: '...'
            method: '...'
          actor:
            name: '...'
          action: push
          source:
            addr: '...'
            instanceID: '...'
          id: '...'
          target:
            size: 12345
            mediaType: '...'
            repository: '...'
            url: '...'
            digest: '...'
            length: 12345
            tag: '...'
          timestamp: 12345
    json_Doi_doi:
      title: Doi
      type: object
      properties:
        id:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        objectId:
          type: string
          description: ""
        objectType:
          $ref: '#/components/schemas/json_ObjectType'
        doiStatus:
          $ref: '#/components/schemas/json_DoiStatus'
        objectVersion:
          type: number
          description: ""
        updatedOn:
          type: number
          description: ""
        createdOn:
          type: number
          description: ""
      description: ""
      example:
        id: '...'
        createdBy: '...'
        etag: '...'
        objectId: '...'
        objectType: ORGANIZATION
        doiStatus: CREATED
        objectVersion: 12345
        updatedOn: 12345
        createdOn: 12345
    json_Doi:
      title: Doi
      description: ""
      allOf:
      - $ref: '#/components/schemas/json_DoiAssociation'
      - type: object
        properties:
          resourceType:
            $ref: '#/components/schemas/json_DoiResourceType'
          publicationYear:
            type: number
            description: ""
          creators:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/json_DoiCreator'
          titles:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/json_DoiTitle'
    json_DoiAssociation:
      title: DoiAssociation
      type: object
      properties:
        associatedBy:
          type: string
          description: ""
        updatedOn:
          type: number
          description: ""
        objectVersion:
          type: number
          description: ""
        objectType:
          $ref: '#/components/schemas/json_ObjectType'
        doiUri:
          type: string
          description: ""
        updatedBy:
          type: string
          description: ""
        associationId:
          type: string
          description: ""
        associatedOn:
          type: number
          description: ""
        etag:
          type: string
          description: ""
        objectId:
          type: string
          description: ""
        doiUrl:
          type: string
          description: ""
      description: ""
      example:
        associatedBy: '...'
        updatedOn: 12345
        objectVersion: 12345
        objectType: WIKI
        doiUri: '...'
        updatedBy: '...'
        associationId: '...'
        associatedOn: 12345
        etag: '...'
        objectId: '...'
        doiUrl: '...'
    json_DoiCreator:
      title: DoiCreator
      type: object
      properties:
        creatorName:
          type: string
          description: ""
        nameIdentifiers:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_DoiNameIdentifier'
      description: ""
      example:
        creatorName: '...'
        nameIdentifiers:
        - nameIdentifierScheme: ISNI
          identifier: '...'
        - nameIdentifierScheme: ORCID
          identifier: '...'
    json_DoiNameIdentifier:
      title: DoiNameIdentifier
      type: object
      properties:
        nameIdentifierScheme:
          $ref: '#/components/schemas/json_NameIdentifierScheme'
        identifier:
          type: string
          description: ""
      description: ""
      example:
        nameIdentifierScheme: ISNI
        identifier: '...'
    json_DoiRequest:
      title: DoiRequest
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        doi:
          $ref: '#/components/schemas/json_Doi'
      description: ""
      example:
        concreteType: '...'
        doi:
          resourceType:
            resourceTypeGeneral: Dataset
          publicationYear: 12345
          creators:
          - creatorName: '...'
            nameIdentifiers:
            - {}
            - {}
          - creatorName: '...'
            nameIdentifiers:
            - {}
            - {}
          titles:
          - title: '...'
          - title: '...'
          associatedBy: '...'
          updatedOn: 12345
          objectVersion: 12345
          objectType: FORUM
          doiUri: '...'
          updatedBy: '...'
          associationId: '...'
          associatedOn: 12345
          etag: '...'
          objectId: '...'
          doiUrl: '...'
    json_DoiResourceType:
      title: DoiResourceType
      type: object
      properties:
        resourceTypeGeneral:
          $ref: '#/components/schemas/json_DoiResourceTypeGeneral'
      description: ""
      example:
        resourceTypeGeneral: Image
    json_DoiResourceTypeGeneral:
      title: DoiResourceTypeGeneral
      type: string
      description: ""
      enum:
      - Audiovisual
      - Collection
      - DataPaper
      - Dataset
      - Event
      - Image
      - InteractiveResource
      - Model
      - PhysicalObject
      - Service
      - Software
      - Sound
      - Text
      - Workflow
      - Other
    json_DoiResponse:
      title: DoiResponse
      type: object
      properties:
        doi:
          $ref: '#/components/schemas/json_Doi'
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        doi:
          resourceType:
            resourceTypeGeneral: Sound
          publicationYear: 12345
          creators:
          - creatorName: '...'
            nameIdentifiers:
            - {}
            - {}
          - creatorName: '...'
            nameIdentifiers:
            - {}
            - {}
          titles:
          - title: '...'
          - title: '...'
          associatedBy: '...'
          updatedOn: 12345
          objectVersion: 12345
          objectType: FORM_GROUP
          doiUri: '...'
          updatedBy: '...'
          associationId: '...'
          associatedOn: 12345
          etag: '...'
          objectId: '...'
          doiUrl: '...'
        concreteType: '...'
    json_DoiStatus:
      title: DoiStatus
      type: string
      description: ""
      enum:
      - IN_PROCESS
      - CREATED
      - READY
      - ERROR
    json_DoiTitle:
      title: DoiTitle
      type: object
      properties:
        title:
          type: string
          description: ""
      description: ""
      example:
        title: '...'
    json_DoubleAnnotation:
      title: DoubleAnnotation
      type: object
      properties:
        key:
          type: string
          description: ""
        isPrivate:
          type: boolean
          description: ""
        value:
          type: number
          description: ""
      description: ""
      example:
        key: '...'
        isPrivate: true
        value: 12345
    json_DownloadFromTableRequest:
      title: DownloadFromTableRequest
      description: ""
      allOf:
      - $ref: '#/components/schemas/json_Query'
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
          entityId:
            type: string
            description: ""
          writeHeader:
            type: boolean
            description: ""
          csvTableDescriptor:
            $ref: '#/components/schemas/json_CsvTableDescriptor'
          includeRowIdAndRowVersion:
            type: boolean
            description: ""
    json_DownloadFromTableResult:
      title: DownloadFromTableResult
      type: object
      properties:
        headers:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SelectColumn'
        etag:
          type: string
          description: ""
        resultsFileHandleId:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        tableId:
          type: string
          description: ""
      description: ""
      example:
        headers:
        - name: '...'
          columnType: LINK
          id: '...'
        - name: '...'
          columnType: STRING_LIST
          id: '...'
        etag: '...'
        resultsFileHandleId: '...'
        concreteType: '...'
        tableId: '...'
    json_DownloadStorageReportRequest:
      title: DownloadStorageReportRequest
      type: object
      properties:
        reportType:
          $ref: '#/components/schemas/json_StorageReportType'
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        reportType: ALL_PROJECTS
        concreteType: '...'
    json_DownloadStorageReportResponse:
      title: DownloadStorageReportResponse
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        resultsFileHandleId:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        resultsFileHandleId: '...'
    json_ENCODING:
      title: ENCODING
      type: string
      description: ""
      enum:
      - BINARY
    json_EmailQuarantineReason:
      title: EmailQuarantineReason
      type: string
      description: ""
      enum:
      - PERMANENT_BOUNCE
      - TRANSIENT_BOUNCE
      - COMPLAINT
      - OTHER
    json_EmailQuarantineStatus:
      title: EmailQuarantineStatus
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/json_EmailQuarantineReason'
        expiration:
          type: number
          description: ""
        reasonDetails:
          type: string
          description: ""
      description: ""
      example:
        reason: OTHER
        expiration: 12345
        reasonDetails: '...'
    json_EmailValidationSignedToken:
      title: EmailValidationSignedToken
      type: object
      properties:
        userId:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        email:
          type: string
          description: ""
        hmac:
          type: string
          description: ""
        version:
          type: number
          description: ""
        createdOn:
          type: number
          description: ""
        expiresOn:
          type: number
          description: ""
      description: ""
      example:
        userId: '...'
        concreteType: '...'
        email: '...'
        hmac: '...'
        version: 12345
        createdOn: 12345
        expiresOn: 12345
    json_Entity:
      title: Entity
      type: object
      properties:
        etag:
          type: string
          description: ""
        description:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        id:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        parentId:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        name:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
      description: ""
      example:
        etag: '...'
        description: '...'
        concreteType: '...'
        modifiedBy: '...'
        id: '...'
        createdOn: 12345
        parentId: '...'
        createdBy: '...'
        name: '...'
        modifiedOn: 12345
    json_EntityBundle:
      title: EntityBundle
      type: object
      properties:
        unmetAccessRequirements:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessRequirement'
        fileName:
          type: string
          description: ""
        fileHandles:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FileHandle'
        doiAssociation:
          $ref: '#/components/schemas/json_DoiAssociation'
        entity:
          $ref: '#/components/schemas/json_Entity'
        hasChildren:
          type: boolean
          description: ""
        entityType:
          type: string
          description: ""
        referencedBy:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EntityHeader'
        tableBundle:
          $ref: '#/components/schemas/json_TableBundle'
        annotations:
          $ref: '#/components/schemas/json_Annotations'
        threadCount:
          type: number
          description: ""
        rootWikiId:
          type: string
          description: ""
        accessRequirements:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessRequirement'
        path:
          $ref: '#/components/schemas/json_EntityPath'
        doi:
          $ref: '#/components/schemas/json_Doi_doi'
        acl:
          $ref: '#/components/schemas/json_AccessControlList'
        restrictionInformation:
          $ref: '#/components/schemas/json_RestrictionInformationResponse'
        permissions:
          $ref: '#/components/schemas/json_UserEntityPermissions'
        accessControlList:
          $ref: '#/components/schemas/json_AccessControlList'
        benefactorAcl:
          $ref: '#/components/schemas/json_AccessControlList'
      description: ""
      example:
        unmetAccessRequirements:
        - subjectIds:
          - type: ENTITY
            id: '...'
          - type: TEAM
            id: '...'
          etag: '...'
          accessType: DOWNLOAD
          concreteType: '...'
          versionNumber: 12345
          modifiedBy: '...'
          createdBy: '...'
          createdOn: 12345
          description: '...'
          modifiedOn: 12345
          id: 12345
        - subjectIds:
          - type: TEAM
            id: '...'
          - type: TEAM
            id: '...'
          etag: '...'
          accessType: UPDATE
          concreteType: '...'
          versionNumber: 12345
          modifiedBy: '...'
          createdBy: '...'
          createdOn: 12345
          description: '...'
          modifiedOn: 12345
          id: 12345
        fileName: '...'
        fileHandles:
        - storageLocationId: 12345
          contentMd5: '...'
          etag: '...'
          createdBy: '...'
          createdOn: 12345
          concreteType: '...'
          contentType: '...'
          contentSize: 12345
          id: '...'
          fileName: '...'
        - storageLocationId: 12345
          contentMd5: '...'
          etag: '...'
          createdBy: '...'
          createdOn: 12345
          concreteType: '...'
          contentType: '...'
          contentSize: 12345
          id: '...'
          fileName: '...'
        doiAssociation:
          associatedBy: '...'
          updatedOn: 12345
          objectVersion: 12345
          objectType: MEMBERSHIP_INVITATION
          doiUri: '...'
          updatedBy: '...'
          associationId: '...'
          associatedOn: 12345
          etag: '...'
          objectId: '...'
          doiUrl: '...'
        entity:
          etag: '...'
          description: '...'
          concreteType: '...'
          modifiedBy: '...'
          id: '...'
          createdOn: 12345
          parentId: '...'
          createdBy: '...'
          name: '...'
          modifiedOn: 12345
        hasChildren: true
        entityType: '...'
        referencedBy:
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
        tableBundle:
          maxRowsPerPage: 12345
          columnModels:
          - maximumSize: 12345
            enumValues:
            - '...'
            - '...'
            name: '...'
            columnType: FILEHANDLEID
            id: '...'
            maximumListLength: 12345
            defaultValue: '...'
            facetType: enumeration
          - maximumSize: 12345
            enumValues:
            - '...'
            - '...'
            name: '...'
            columnType: DATE_LIST
            id: '...'
            maximumListLength: 12345
            defaultValue: '...'
            facetType: enumeration
        annotations:
          etag: '...'
          stringAnnotations:
            property1:
            - '...'
            - '...'
            property2:
            - '...'
            - '...'
          doubleAnnotations:
            property1:
            - 12345
            - 12345
            property2:
            - 12345
            - 12345
          dateAnnotations:
            property1:
            - 12345
            - 12345
            property2:
            - 12345
            - 12345
          empty: true
          id: '...'
          blobAnnotations:
            property1: '...'
            property2: '...'
          longAnnotations:
            property1:
            - 12345
            - 12345
            property2:
            - 12345
            - 12345
        threadCount: 12345
        rootWikiId: '...'
        accessRequirements:
        - subjectIds:
          - type: ENTITY
            id: '...'
          - type: TEAM
            id: '...'
          etag: '...'
          accessType: TEAM_MEMBERSHIP_UPDATE
          concreteType: '...'
          versionNumber: 12345
          modifiedBy: '...'
          createdBy: '...'
          createdOn: 12345
          description: '...'
          modifiedOn: 12345
          id: 12345
        - subjectIds:
          - type: TEAM
            id: '...'
          - type: TEAM
            id: '...'
          etag: '...'
          accessType: UPLOAD
          concreteType: '...'
          versionNumber: 12345
          modifiedBy: '...'
          createdBy: '...'
          createdOn: 12345
          description: '...'
          modifiedOn: 12345
          id: 12345
        path:
          path:
          - modifiedOn: 12345
            id: '...'
            modifiedBy: '...'
            versionLabel: '...'
            versionNumber: 12345
            createdOn: 12345
            name: '...'
            type: '...'
            createdBy: '...'
            benefactorId: 12345
          - modifiedOn: 12345
            id: '...'
            modifiedBy: '...'
            versionLabel: '...'
            versionNumber: 12345
            createdOn: 12345
            name: '...'
            type: '...'
            createdBy: '...'
            benefactorId: 12345
        acl:
          createdBy: '...'
          etag: '...'
          modifiedBy: '...'
          modifiedOn: 12345
          resourceAccess:
          - principalId: 12345
            accessType:
            - DOWNLOAD
            - UPDATE_SUBMISSION
          - principalId: 12345
            accessType:
            - UPDATE_SUBMISSION
            - DELETE
          creationDate: 12345
          id: '...'
        restrictionInformation:
          hasUnmetAccessRequirement: true
          restrictionLevel: RESTRICTED_BY_TERMS_OF_USE
        permissions:
          canCertifiedUserEdit: true
          canPublicRead: true
          canDelete: true
          isCertifiedUser: true
          isCertificationRequired: true
          canAddChild: true
          canChangePermissions: true
          canCertifiedUserAddChild: true
          canDownload: true
          canUpload: true
          canView: true
          canChangeSettings: true
          canModerate: true
          canEnableInheritance: true
          canEdit: true
          ownerPrincipalId: 12345
        accessControlList:
          createdBy: '...'
          etag: '...'
          modifiedBy: '...'
          modifiedOn: 12345
          resourceAccess:
          - principalId: 12345
            accessType:
            - READ_PRIVATE_SUBMISSION
            - DOWNLOAD
          - principalId: 12345
            accessType:
            - UPDATE
            - DELETE
          creationDate: 12345
          id: '...'
        benefactorAcl:
          createdBy: '...'
          etag: '...'
          modifiedBy: '...'
          modifiedOn: 12345
          resourceAccess:
          - principalId: 12345
            accessType:
            - UPLOAD
            - CHANGE_SETTINGS
          - principalId: 12345
            accessType:
            - DELETE
            - SUBMIT
          creationDate: 12345
          id: '...'
    json_EntityBundle_v2:
      title: EntityBundle
      type: object
      properties:
        threadCount:
          type: number
          description: ""
        entity:
          $ref: '#/components/schemas/json_Entity'
        permissions:
          $ref: '#/components/schemas/json_UserEntityPermissions'
        doiAssociation:
          $ref: '#/components/schemas/json_DoiAssociation'
        entityType:
          $ref: '#/components/schemas/json_EntityType'
        rootWikiId:
          type: string
          description: ""
        accessControlList:
          $ref: '#/components/schemas/json_AccessControlList'
        tableBundle:
          $ref: '#/components/schemas/json_TableBundle'
        fileHandles:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FileHandle'
        benefactorAcl:
          $ref: '#/components/schemas/json_AccessControlList'
        path:
          $ref: '#/components/schemas/json_EntityPath'
        restrictionInformation:
          $ref: '#/components/schemas/json_RestrictionInformationResponse'
        annotations:
          $ref: '#/components/schemas/json_Annotations_v2'
        hasChildren:
          type: boolean
          description: ""
        fileName:
          type: string
          description: ""
      description: ""
      example:
        threadCount: 12345
        entity:
          etag: '...'
          description: '...'
          concreteType: '...'
          modifiedBy: '...'
          id: '...'
          createdOn: 12345
          parentId: '...'
          createdBy: '...'
          name: '...'
          modifiedOn: 12345
        permissions:
          canCertifiedUserEdit: true
          canPublicRead: true
          canDelete: true
          isCertifiedUser: true
          isCertificationRequired: true
          canAddChild: true
          canChangePermissions: true
          canCertifiedUserAddChild: true
          canDownload: true
          canUpload: true
          canView: true
          canChangeSettings: true
          canModerate: true
          canEnableInheritance: true
          canEdit: true
          ownerPrincipalId: 12345
        doiAssociation:
          associatedBy: '...'
          updatedOn: 12345
          objectVersion: 12345
          objectType: VERIFICATION_SUBMISSION
          doiUri: '...'
          updatedBy: '...'
          associationId: '...'
          associatedOn: 12345
          etag: '...'
          objectId: '...'
          doiUrl: '...'
        entityType: entityview
        rootWikiId: '...'
        accessControlList:
          createdBy: '...'
          etag: '...'
          modifiedBy: '...'
          modifiedOn: 12345
          resourceAccess:
          - principalId: 12345
            accessType:
            - CHANGE_PERMISSIONS
            - UPDATE_SUBMISSION
          - principalId: 12345
            accessType:
            - DOWNLOAD
            - MODERATE
          creationDate: 12345
          id: '...'
        tableBundle:
          maxRowsPerPage: 12345
          columnModels:
          - maximumSize: 12345
            enumValues:
            - '...'
            - '...'
            name: '...'
            columnType: STRING
            id: '...'
            maximumListLength: 12345
            defaultValue: '...'
            facetType: enumeration
          - maximumSize: 12345
            enumValues:
            - '...'
            - '...'
            name: '...'
            columnType: USERID_LIST
            id: '...'
            maximumListLength: 12345
            defaultValue: '...'
            facetType: range
        fileHandles:
        - storageLocationId: 12345
          contentMd5: '...'
          etag: '...'
          createdBy: '...'
          createdOn: 12345
          concreteType: '...'
          contentType: '...'
          contentSize: 12345
          id: '...'
          fileName: '...'
        - storageLocationId: 12345
          contentMd5: '...'
          etag: '...'
          createdBy: '...'
          createdOn: 12345
          concreteType: '...'
          contentType: '...'
          contentSize: 12345
          id: '...'
          fileName: '...'
        benefactorAcl:
          createdBy: '...'
          etag: '...'
          modifiedBy: '...'
          modifiedOn: 12345
          resourceAccess:
          - principalId: 12345
            accessType:
            - UPLOAD
            - DELETE
          - principalId: 12345
            accessType:
            - CHANGE_SETTINGS
            - CREATE
          creationDate: 12345
          id: '...'
        path:
          path:
          - modifiedOn: 12345
            id: '...'
            modifiedBy: '...'
            versionLabel: '...'
            versionNumber: 12345
            createdOn: 12345
            name: '...'
            type: '...'
            createdBy: '...'
            benefactorId: 12345
          - modifiedOn: 12345
            id: '...'
            modifiedBy: '...'
            versionLabel: '...'
            versionNumber: 12345
            createdOn: 12345
            name: '...'
            type: '...'
            createdBy: '...'
            benefactorId: 12345
        restrictionInformation:
          hasUnmetAccessRequirement: true
          restrictionLevel: RESTRICTED_BY_TERMS_OF_USE
        annotations:
          annotations:
            property1:
              value:
              - '...'
              - '...'
              type: STRING
            property2:
              value:
              - '...'
              - '...'
              type: TIMESTAMP_MS
          id: '...'
          etag: '...'
        hasChildren: true
        fileName: '...'
    json_EntityBundleCreate_v2:
      title: EntityBundleCreate
      type: object
      properties:
        accessControlList:
          $ref: '#/components/schemas/json_AccessControlList'
        entity:
          $ref: '#/components/schemas/json_Entity'
        annotations:
          $ref: '#/components/schemas/json_Annotations_v2'
      description: ""
      example:
        accessControlList:
          createdBy: '...'
          etag: '...'
          modifiedBy: '...'
          modifiedOn: 12345
          resourceAccess:
          - principalId: 12345
            accessType:
            - PARTICIPATE
            - UPDATE_SUBMISSION
          - principalId: 12345
            accessType:
            - DELETE
            - UPLOAD
          creationDate: 12345
          id: '...'
        entity:
          etag: '...'
          description: '...'
          concreteType: '...'
          modifiedBy: '...'
          id: '...'
          createdOn: 12345
          parentId: '...'
          createdBy: '...'
          name: '...'
          modifiedOn: 12345
        annotations:
          annotations:
            property1:
              value:
              - '...'
              - '...'
              type: STRING
            property2:
              value:
              - '...'
              - '...'
              type: STRING
          id: '...'
          etag: '...'
    json_EntityBundleCreate:
      title: EntityBundleCreate
      type: object
      properties:
        annotations:
          $ref: '#/components/schemas/json_Annotations'
        accessRequirement:
          $ref: '#/components/schemas/json_AccessRequirement'
        entity:
          $ref: '#/components/schemas/json_Entity'
        accessControlList:
          $ref: '#/components/schemas/json_AccessControlList'
      description: ""
      example:
        annotations:
          etag: '...'
          stringAnnotations:
            property1:
            - '...'
            - '...'
            property2:
            - '...'
            - '...'
          doubleAnnotations:
            property1:
            - 12345
            - 12345
            property2:
            - 12345
            - 12345
          dateAnnotations:
            property1:
            - 12345
            - 12345
            property2:
            - 12345
            - 12345
          empty: true
          id: '...'
          blobAnnotations:
            property1: '...'
            property2: '...'
          longAnnotations:
            property1:
            - 12345
            - 12345
            property2:
            - 12345
            - 12345
        accessRequirement:
          subjectIds:
          - type: EVALUATION
            id: '...'
          - type: TEAM
            id: '...'
          etag: '...'
          accessType: READ
          concreteType: '...'
          versionNumber: 12345
          modifiedBy: '...'
          createdBy: '...'
          createdOn: 12345
          description: '...'
          modifiedOn: 12345
          id: 12345
        entity:
          etag: '...'
          description: '...'
          concreteType: '...'
          modifiedBy: '...'
          id: '...'
          createdOn: 12345
          parentId: '...'
          createdBy: '...'
          name: '...'
          modifiedOn: 12345
        accessControlList:
          createdBy: '...'
          etag: '...'
          modifiedBy: '...'
          modifiedOn: 12345
          resourceAccess:
          - principalId: 12345
            accessType:
            - READ
            - TEAM_MEMBERSHIP_UPDATE
          - principalId: 12345
            accessType:
            - TEAM_MEMBERSHIP_UPDATE
            - TEAM_MEMBERSHIP_UPDATE
          creationDate: 12345
          id: '...'
    json_EntityBundleRequest:
      title: EntityBundleRequest
      type: object
      properties:
        includeEntityPath:
          type: boolean
          description: ""
        includeAccessControlList:
          type: boolean
          description: ""
        includeFileHandles:
          type: boolean
          description: ""
        includeHasChildren:
          type: boolean
          description: ""
        includeAnnotations:
          type: boolean
          description: ""
        includeTableBundle:
          type: boolean
          description: ""
        includeRestrictionInformation:
          type: boolean
          description: ""
        includeRootWikiId:
          type: boolean
          description: ""
        includeBenefactorACL:
          type: boolean
          description: ""
        includeThreadCount:
          type: boolean
          description: ""
        includeFileName:
          type: boolean
          description: ""
        includeEntity:
          type: boolean
          description: ""
        includePermissions:
          type: boolean
          description: ""
        includeDOIAssociation:
          type: boolean
          description: ""
      description: ""
      example:
        includeEntityPath: true
        includeAccessControlList: true
        includeFileHandles: true
        includeHasChildren: true
        includeAnnotations: true
        includeTableBundle: true
        includeRestrictionInformation: true
        includeRootWikiId: true
        includeBenefactorACL: true
        includeThreadCount: true
        includeFileName: true
        includeEntity: true
        includePermissions: true
        includeDOIAssociation: true
    json_EntityChildrenRequest:
      title: EntityChildrenRequest
      type: object
      properties:
        includeSumFileSizes:
          type: boolean
          description: ""
        includeTypes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EntityType'
        sortBy:
          $ref: '#/components/schemas/json_SortBy'
        sortDirection:
          $ref: '#/components/schemas/json_Direction'
        nextPageToken:
          type: string
          description: ""
        parentId:
          type: string
          description: ""
        includeTotalChildCount:
          type: boolean
          description: ""
      description: ""
      example:
        includeSumFileSizes: true
        includeTypes:
        - entityview
        - project
        sortBy: CREATED_ON
        sortDirection: DESC
        nextPageToken: '...'
        parentId: '...'
        includeTotalChildCount: true
    json_EntityChildrenResponse:
      title: EntityChildrenResponse
      type: object
      properties:
        totalChildCount:
          type: number
          description: ""
        page:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EntityHeader'
        sumFileSizesBytes:
          type: number
          description: ""
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        totalChildCount: 12345
        page:
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
        sumFileSizesBytes: 12345
        nextPageToken: '...'
    json_EntityHeader:
      title: EntityHeader
      type: object
      properties:
        modifiedOn:
          type: number
          description: ""
        id:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        versionLabel:
          type: string
          description: ""
        versionNumber:
          type: number
          description: ""
        createdOn:
          type: number
          description: ""
        name:
          type: string
          description: ""
        type:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        benefactorId:
          type: number
          description: ""
      description: ""
      example:
        modifiedOn: 12345
        id: '...'
        modifiedBy: '...'
        versionLabel: '...'
        versionNumber: 12345
        createdOn: 12345
        name: '...'
        type: '...'
        createdBy: '...'
        benefactorId: 12345
    json_EntityId:
      title: EntityId
      type: object
      properties:
        id:
          type: string
          description: ""
      description: ""
      example:
        id: '...'
    json_EntityIdList:
      title: EntityIdList
      type: object
      properties:
        idList:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        idList:
        - '...'
        - '...'
    json_EntityLookupRequest:
      title: EntityLookupRequest
      type: object
      properties:
        parentId:
          type: string
          description: ""
        entityName:
          type: string
          description: ""
      description: ""
      example:
        parentId: '...'
        entityName: '...'
    json_EntityPath:
      title: EntityPath
      type: object
      properties:
        path:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EntityHeader'
      description: ""
      example:
        path:
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
    json_EntityThreadCount:
      title: EntityThreadCount
      type: object
      properties:
        entityId:
          type: string
          description: ""
        count:
          type: number
          description: ""
      description: ""
      example:
        entityId: '...'
        count: 12345
    json_EntityThreadCounts:
      title: EntityThreadCounts
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EntityThreadCount'
      description: ""
      example:
        list:
        - entityId: '...'
          count: 12345
        - entityId: '...'
          count: 12345
    json_EntityType:
      title: EntityType
      type: string
      description: ""
      enum:
      - project
      - folder
      - file
      - table
      - link
      - entityview
      - dockerrepo
      - submissionview
    json_EnumValue:
      title: EnumValue
      type: object
      properties:
        description:
          type: string
          description: ""
        name:
          type: string
          description: ""
      description: ""
      example:
        description: '...'
        name: '...'
    json_Envelope:
      title: Envelope
      type: object
      properties:
        to:
          type: string
          description: ""
        recipients:
          type: array
          description: ""
          items:
            type: string
        helo_domain:
          type: string
          description: ""
        from:
          type: string
          description: ""
        remote_ip:
          type: string
          description: ""
        spf:
          type: string
          description: ""
      description: ""
      example:
        to: '...'
        recipients:
        - '...'
        - '...'
        helo_domain: '...'
        from: '...'
        remote_ip: '...'
        spf: '...'
    json_Evaluation:
      title: Evaluation
      type: object
      properties:
        ownerId:
          type: string
          description: ""
        quota:
          $ref: '#/components/schemas/json_SubmissionQuota'
        createdOn:
          type: number
          description: ""
        submissionReceiptMessage:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        submissionInstructionsMessage:
          type: string
          description: ""
        contentSource:
          type: string
          description: ""
        description:
          type: string
          description: ""
        status:
          $ref: '#/components/schemas/json_EvaluationStatus'
        name:
          type: string
          description: ""
        id:
          type: string
          description: ""
      description: ""
      example:
        ownerId: '...'
        quota:
          roundDurationMillis: 12345
          numberOfRounds: 12345
          submissionLimit: 12345
          firstRoundStart: 12345
        createdOn: 12345
        submissionReceiptMessage: '...'
        etag: '...'
        submissionInstructionsMessage: '...'
        contentSource: '...'
        description: '...'
        status: PLANNED
        name: '...'
        id: '...'
    json_EvaluationRound:
      title: EvaluationRound
      type: object
      properties:
        id:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        roundEnd:
          type: number
          description: ""
        roundStart:
          type: number
          description: ""
        limits:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EvaluationRoundLimit'
        evaluationId:
          type: string
          description: ""
      description: ""
      example:
        id: '...'
        etag: '...'
        roundEnd: 12345
        roundStart: 12345
        limits:
        - limitType: TOTAL
          maximumSubmissions: 12345
        - limitType: WEEKLY
          maximumSubmissions: 12345
        evaluationId: '...'
    json_EvaluationRoundLimit:
      title: EvaluationRoundLimit
      type: object
      properties:
        limitType:
          $ref: '#/components/schemas/json_EvaluationRoundLimitType'
        maximumSubmissions:
          type: number
          description: ""
      description: ""
      example:
        limitType: MONTHLY
        maximumSubmissions: 12345
    json_EvaluationRoundLimitType:
      title: EvaluationRoundLimitType
      type: string
      description: ""
      enum:
      - TOTAL
      - DAILY
      - WEEKLY
      - MONTHLY
    json_EvaluationRoundListRequest:
      title: EvaluationRoundListRequest
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        nextPageToken: '...'
    json_EvaluationRoundListResponse:
      title: EvaluationRoundListResponse
      type: object
      properties:
        page:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EvaluationRound'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        page:
        - id: '...'
          etag: '...'
          roundEnd: 12345
          roundStart: 12345
          limits:
          - limitType: TOTAL
            maximumSubmissions: 12345
          - limitType: TOTAL
            maximumSubmissions: 12345
          evaluationId: '...'
        - id: '...'
          etag: '...'
          roundEnd: 12345
          roundStart: 12345
          limits:
          - limitType: TOTAL
            maximumSubmissions: 12345
          - limitType: MONTHLY
            maximumSubmissions: 12345
          evaluationId: '...'
        nextPageToken: '...'
    json_EvaluationStatus:
      title: EvaluationStatus
      type: string
      description: ""
      enum:
      - PLANNED
      - OPEN
      - CLOSED
      - COMPLETED
    json_FORMAT:
      title: FORMAT
      type: string
      description: ""
      enum:
      - DATE_TIME
      - DATE
      - TIME
      - UTC_MILLISEC
      - REGEX
      - COLOR
      - STYLE
      - PHONE
      - URI
      - EMAIL
      - IP_ADDRESS
      - IPV6
      - HOST_NAME
    json_Facet:
      title: Facet
      type: object
      properties:
        type:
          $ref: '#/components/schemas/json_FacetTypeNames'
        max:
          type: number
          description: ""
        constraints:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FacetConstraint'
        min:
          type: number
          description: ""
        name:
          type: string
          description: ""
      description: ""
      example:
        type: DATE
        max: 12345
        constraints:
        - count: 12345
          value: '...'
        - count: 12345
          value: '...'
        min: 12345
        name: '...'
    json_FacetColumnRequest:
      title: FacetColumnRequest
      type: object
      properties:
        columnName:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        columnName: '...'
        concreteType: '...'
    json_FacetColumnResult:
      title: FacetColumnResult
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        facetType:
          $ref: '#/components/schemas/json_FacetType'
        columnName:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        facetType: enumeration
        columnName: '...'
    json_FacetConstraint:
      title: FacetConstraint
      type: object
      properties:
        count:
          type: number
          description: ""
        value:
          type: string
          description: ""
      description: ""
      example:
        count: 12345
        value: '...'
    json_FacetType:
      title: FacetType
      type: string
      description: ""
      enum:
      - enumeration
      - range
    json_FacetTypeNames:
      title: FacetTypeNames
      type: string
      description: ""
      enum:
      - LITERAL
      - DATE
      - CONTINUOUS
    json_Feature:
      title: Feature
      type: string
      description: ""
      enum:
      - DATA_ACCESS_NOTIFICATIONS
      - DATA_ACCESS_AUTO_REVOCATION
    json_FeatureStatus:
      title: FeatureStatus
      type: object
      properties:
        enabled:
          type: boolean
          description: ""
        feature:
          $ref: '#/components/schemas/json_Feature'
      description: ""
      example:
        enabled: true
        feature: DATA_ACCESS_NOTIFICATIONS
    json_FileHandle:
      title: FileHandle
      type: object
      properties:
        storageLocationId:
          type: number
          description: ""
        contentMd5:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        concreteType:
          type: string
          description: ""
        contentType:
          type: string
          description: ""
        contentSize:
          type: number
          description: ""
        id:
          type: string
          description: ""
        fileName:
          type: string
          description: ""
      description: ""
      example:
        storageLocationId: 12345
        contentMd5: '...'
        etag: '...'
        createdBy: '...'
        createdOn: 12345
        concreteType: '...'
        contentType: '...'
        contentSize: 12345
        id: '...'
        fileName: '...'
    json_FileHandleResults:
      title: FileHandleResults
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FileHandle'
      description: ""
      example:
        list:
        - storageLocationId: 12345
          contentMd5: '...'
          etag: '...'
          createdBy: '...'
          createdOn: 12345
          concreteType: '...'
          contentType: '...'
          contentSize: 12345
          id: '...'
          fileName: '...'
        - storageLocationId: 12345
          contentMd5: '...'
          etag: '...'
          createdBy: '...'
          createdOn: 12345
          concreteType: '...'
          contentType: '...'
          contentSize: 12345
          id: '...'
          fileName: '...'
    json_FileHandleUpdateRequest:
      title: FileHandleUpdateRequest
      type: object
      properties:
        oldFileHandleId:
          type: string
          description: ""
        newFileHandleId:
          type: string
          description: ""
      description: ""
      example:
        oldFileHandleId: '...'
        newFileHandleId: '...'
    json_FireMessagesResult:
      title: FireMessagesResult
      type: object
      properties:
        nextChangeNumber:
          type: number
          description: ""
      description: ""
      example:
        nextChangeNumber: 12345
    json_FormChangeRequest:
      title: FormChangeRequest
      type: object
      properties:
        name:
          type: string
          description: ""
        fileHandleId:
          type: string
          description: ""
      description: ""
      example:
        name: '...'
        fileHandleId: '...'
    json_FormData:
      title: FormData
      type: object
      properties:
        dataFileHandleId:
          type: string
          description: ""
        name:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        formDataId:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        groupId:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        submissionStatus:
          $ref: '#/components/schemas/json_SubmissionStatus_form'
        createdOn:
          type: number
          description: ""
      description: ""
      example:
        dataFileHandleId: '...'
        name: '...'
        modifiedOn: 12345
        formDataId: '...'
        etag: '...'
        groupId: '...'
        createdBy: '...'
        submissionStatus:
          state: REJECTED
          submittedOn: 12345
          reviewedOn: 12345
          reviewedBy: '...'
          rejectionMessage: '...'
        createdOn: 12345
    json_FormGroup:
      title: FormGroup
      type: object
      properties:
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        name:
          type: string
          description: ""
        groupId:
          type: string
          description: ""
      description: ""
      example:
        createdBy: '...'
        createdOn: 12345
        name: '...'
        groupId: '...'
    json_FormRejection:
      title: FormRejection
      type: object
      properties:
        reason:
          type: string
          description: ""
      description: ""
      example:
        reason: '...'
    json_Forum:
      title: Forum
      type: object
      properties:
        etag:
          type: string
          description: ""
        id:
          type: string
          description: ""
        projectId:
          type: string
          description: ""
      description: ""
      example:
        etag: '...'
        id: '...'
        projectId: '...'
    json_GetValidationSchemaRequest:
      title: GetValidationSchemaRequest
      type: object
      properties:
        $id:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        $id: '...'
        concreteType: '...'
    json_GetValidationSchemaResponse:
      title: GetValidationSchemaResponse
      type: object
      properties:
        validationSchema:
          $ref: '#/components/schemas/json_JsonSchema'
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        validationSchema:
          oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: number
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        concreteType: '...'
    json_Headers:
      title: Headers
      type: object
      properties:
        subject:
          type: string
          description: ""
        from:
          type: string
          description: ""
        to:
          type: string
          description: ""
        bcc:
          type: string
          description: ""
        cc:
          type: string
          description: ""
      description: ""
      example:
        subject: '...'
        from: '...'
        to: '...'
        bcc: '...'
        cc: '...'
    json_Hit:
      title: Hit
      type: object
      properties:
        description:
          type: string
          description: ""
        consortium:
          type: string
          description: ""
        created_on:
          type: number
          description: ""
        name:
          type: string
          description: ""
        id:
          type: string
          description: ""
        tissue:
          type: string
          description: ""
        modified_on:
          type: number
          description: ""
        etag:
          type: string
          description: ""
        alias:
          type: string
          description: ""
        modified_by:
          type: string
          description: ""
        path:
          $ref: '#/components/schemas/json_EntityPath'
        diagnosis:
          type: string
          description: ""
        created_by:
          type: string
          description: ""
        organ:
          type: string
          description: ""
        node_type:
          type: string
          description: ""
      description: ""
      example:
        description: '...'
        consortium: '...'
        created_on: 12345
        name: '...'
        id: '...'
        tissue: '...'
        modified_on: 12345
        etag: '...'
        alias: '...'
        modified_by: '...'
        path:
          path:
          - modifiedOn: 12345
            id: '...'
            modifiedBy: '...'
            versionLabel: '...'
            versionNumber: 12345
            createdOn: 12345
            name: '...'
            type: '...'
            createdBy: '...'
            benefactorId: 12345
          - modifiedOn: 12345
            id: '...'
            modifiedBy: '...'
            versionLabel: '...'
            versionNumber: 12345
            createdOn: 12345
            name: '...'
            type: '...'
            createdBy: '...'
            benefactorId: 12345
        diagnosis: '...'
        created_by: '...'
        organ: '...'
        node_type: '...'
    json_IdGeneratorExport:
      title: IdGeneratorExport
      type: object
      properties:
        exportScript:
          type: string
          description: ""
      description: ""
      example:
        exportScript: '...'
    json_IdList:
      title: IdList
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            type: number
      description: ""
      example:
        list:
        - 12345
        - 12345
    json_InviteeVerificationSignedToken:
      title: InviteeVerificationSignedToken
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        version:
          type: number
          description: ""
        createdOn:
          type: number
          description: ""
        inviteeId:
          type: string
          description: ""
        membershipInvitationId:
          type: string
          description: ""
        hmac:
          type: string
          description: ""
        expiresOn:
          type: number
          description: ""
      description: ""
      example:
        concreteType: '...'
        version: 12345
        createdOn: 12345
        inviteeId: '...'
        membershipInvitationId: '...'
        hmac: '...'
        expiresOn: 12345
    json_IteratorOfObjectSchema:
      title: IteratorOfObjectSchema
      type: object
      description: ""
      example: {}
    json_JSONObject:
      title: JSONObject
      type: object
      description: ""
      example: {}
    json_JoinTeamSignedToken:
      title: JoinTeamSignedToken
      type: object
      properties:
        teamId:
          type: string
          description: ""
        memberId:
          type: string
          description: ""
        hmac:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        concreteType:
          type: string
          description: ""
        expiresOn:
          type: number
          description: ""
        version:
          type: number
          description: ""
        userId:
          type: string
          description: ""
      description: ""
      example:
        teamId: '...'
        memberId: '...'
        hmac: '...'
        createdOn: 12345
        concreteType: '...'
        expiresOn: 12345
        version: 12345
        userId: '...'
    json_JsonSchema:
      title: JsonSchema
      type: object
      properties:
        oneOf:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_JsonSchema'
        _if:
          $ref: '#/components/schemas/json_JsonSchema'
        description:
          type: string
          description: ""
        pattern:
          type: string
          description: ""
        $id:
          type: string
          description: ""
        type:
          $ref: '#/components/schemas/json_Type'
        items:
          $ref: '#/components/schemas/json_JsonSchema'
        _enum:
          type: array
          description: ""
          items:
            type: string
        format:
          type: string
          description: ""
        anyOf:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_JsonSchema'
        maxLength:
          type: number
          description: ""
        title:
          type: string
          description: ""
        _else:
          $ref: '#/components/schemas/json_JsonSchema'
        $schema:
          type: string
          description: ""
        $ref:
          type: string
          description: ""
        allOf:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_JsonSchema'
        _const:
          type: string
          description: ""
        minLength:
          type: number
          description: ""
        source:
          type: string
          description: ""
        then:
          $ref: '#/components/schemas/json_JsonSchema'
        required:
          type: array
          description: ""
          items:
            type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/json_JsonSchema'
          description: ""
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/json_JsonSchema'
          description: ""
      description: ""
      example:
        oneOf:
        - oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: integer
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        - oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: integer
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        _if:
          oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: object
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        description: '...'
        pattern: '...'
        $id: '...'
        type: integer
        items:
          oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: _boolean
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        _enum:
        - '...'
        - '...'
        format: '...'
        anyOf:
        - oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: object
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        - oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: number
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        maxLength: 12345
        title: '...'
        _else:
          oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: integer
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        $schema: '...'
        $ref: '...'
        allOf:
        - oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: integer
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        - oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: array
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        _const: '...'
        minLength: 12345
        source: '...'
        then:
          oneOf:
          - {}
          - {}
          _if: {}
          description: '...'
          pattern: '...'
          $id: '...'
          type: array
          items: {}
          _enum:
          - '...'
          - '...'
          format: '...'
          anyOf:
          - {}
          - {}
          maxLength: 12345
          title: '...'
          _else: {}
          $schema: '...'
          $ref: '...'
          allOf:
          - {}
          - {}
          _const: '...'
          minLength: 12345
          source: '...'
          then: {}
          required:
          - '...'
          - '...'
          properties:
            property1: {}
            property2: {}
          definitions:
            property1: {}
            property2: {}
        required:
        - '...'
        - '...'
        properties:
          property1:
            oneOf:
            - {}
            - {}
            _if: {}
            description: '...'
            pattern: '...'
            $id: '...'
            type: integer
            items: {}
            _enum:
            - '...'
            - '...'
            format: '...'
            anyOf:
            - {}
            - {}
            maxLength: 12345
            title: '...'
            _else: {}
            $schema: '...'
            $ref: '...'
            allOf:
            - {}
            - {}
            _const: '...'
            minLength: 12345
            source: '...'
            then: {}
            required:
            - '...'
            - '...'
            properties:
              property1: {}
              property2: {}
            definitions:
              property1: {}
              property2: {}
          property2:
            oneOf:
            - {}
            - {}
            _if: {}
            description: '...'
            pattern: '...'
            $id: '...'
            type: number
            items: {}
            _enum:
            - '...'
            - '...'
            format: '...'
            anyOf:
            - {}
            - {}
            maxLength: 12345
            title: '...'
            _else: {}
            $schema: '...'
            $ref: '...'
            allOf:
            - {}
            - {}
            _const: '...'
            minLength: 12345
            source: '...'
            then: {}
            required:
            - '...'
            - '...'
            properties:
              property1: {}
              property2: {}
            definitions:
              property1: {}
              property2: {}
        definitions:
          property1:
            oneOf:
            - {}
            - {}
            _if: {}
            description: '...'
            pattern: '...'
            $id: '...'
            type: _boolean
            items: {}
            _enum:
            - '...'
            - '...'
            format: '...'
            anyOf:
            - {}
            - {}
            maxLength: 12345
            title: '...'
            _else: {}
            $schema: '...'
            $ref: '...'
            allOf:
            - {}
            - {}
            _const: '...'
            minLength: 12345
            source: '...'
            then: {}
            required:
            - '...'
            - '...'
            properties:
              property1: {}
              property2: {}
            definitions:
              property1: {}
              property2: {}
          property2:
            oneOf:
            - {}
            - {}
            _if: {}
            description: '...'
            pattern: '...'
            $id: '...'
            type: _boolean
            items: {}
            _enum:
            - '...'
            - '...'
            format: '...'
            anyOf:
            - {}
            - {}
            maxLength: 12345
            title: '...'
            _else: {}
            $schema: '...'
            $ref: '...'
            allOf:
            - {}
            - {}
            _const: '...'
            minLength: 12345
            source: '...'
            then: {}
            required:
            - '...'
            - '...'
            properties:
              property1: {}
              property2: {}
            definitions:
              property1: {}
              property2: {}
    json_JsonSchemaInfo:
      title: JsonSchemaInfo
      type: object
      properties:
        organizationId:
          type: string
          description: ""
        schemaId:
          type: string
          description: ""
        schemaName:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        organizationName:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
      description: ""
      example:
        organizationId: '...'
        schemaId: '...'
        schemaName: '...'
        createdOn: 12345
        organizationName: '...'
        createdBy: '...'
    json_JsonSchemaObjectBinding:
      title: JsonSchemaObjectBinding
      type: object
      properties:
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        jsonSchemaVersionInfo:
          $ref: '#/components/schemas/json_JsonSchemaVersionInfo'
        objectType:
          $ref: '#/components/schemas/json_BoundObjectType'
        objectId:
          type: number
          description: ""
      description: ""
      example:
        createdBy: '...'
        createdOn: 12345
        jsonSchemaVersionInfo:
          organizationName: '...'
          versionId: '...'
          $id: '...'
          semanticVersion: '...'
          schemaId: '...'
          schemaName: '...'
          createdBy: '...'
          jsonSHA256Hex: '...'
          organizationId: '...'
          createdOn: 12345
        objectType: entity
        objectId: 12345
    json_JsonSchemaVersionInfo:
      title: JsonSchemaVersionInfo
      type: object
      properties:
        organizationName:
          type: string
          description: ""
        versionId:
          type: string
          description: ""
        $id:
          type: string
          description: ""
        semanticVersion:
          type: string
          description: ""
        schemaId:
          type: string
          description: ""
        schemaName:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        jsonSHA256Hex:
          type: string
          description: ""
        organizationId:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
      description: ""
      example:
        organizationName: '...'
        versionId: '...'
        $id: '...'
        semanticVersion: '...'
        schemaId: '...'
        schemaName: '...'
        createdBy: '...'
        jsonSHA256Hex: '...'
        organizationId: '...'
        createdOn: 12345
    json_KeyRange:
      title: KeyRange
      type: object
      properties:
        min:
          type: string
          description: ""
        key:
          type: string
          description: ""
        max:
          type: string
          description: ""
      description: ""
      example:
        min: '...'
        key: '...'
        max: '...'
    json_KeyValue:
      title: KeyValue
      type: object
      properties:
        not:
          type: boolean
          description: ""
        value:
          type: string
          description: ""
        key:
          type: string
          description: ""
      description: ""
      example:
        not: true
        value: '...'
        key: '...'
    json_LinkDescription:
      title: LinkDescription
      type: object
      properties:
        rel:
          $ref: '#/components/schemas/json_LinkRel'
        href:
          type: string
          description: ""
      description: ""
      example:
        rel: FULL
        href: '...'
    json_LinkRel:
      title: LinkRel
      type: string
      description: ""
      enum:
      - SELF
      - FULL
      - DESCRIBED_BY
      - ROOT
    json_ListJsonSchemaInfoRequest:
      title: ListJsonSchemaInfoRequest
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        organizationName:
          type: string
          description: ""
      description: ""
      example:
        nextPageToken: '...'
        organizationName: '...'
    json_ListJsonSchemaInfoResponse:
      title: ListJsonSchemaInfoResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        page:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_JsonSchemaInfo'
      description: ""
      example:
        nextPageToken: '...'
        page:
        - organizationId: '...'
          schemaId: '...'
          schemaName: '...'
          createdOn: 12345
          organizationName: '...'
          createdBy: '...'
        - organizationId: '...'
          schemaId: '...'
          schemaName: '...'
          createdOn: 12345
          organizationName: '...'
          createdBy: '...'
    json_ListJsonSchemaVersionInfoRequest:
      title: ListJsonSchemaVersionInfoRequest
      type: object
      properties:
        schemaName:
          type: string
          description: ""
        organizationName:
          type: string
          description: ""
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        schemaName: '...'
        organizationName: '...'
        nextPageToken: '...'
    json_ListJsonSchemaVersionInfoResponse:
      title: ListJsonSchemaVersionInfoResponse
      type: object
      properties:
        page:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_JsonSchemaVersionInfo'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        page:
        - organizationName: '...'
          versionId: '...'
          $id: '...'
          semanticVersion: '...'
          schemaId: '...'
          schemaName: '...'
          createdBy: '...'
          jsonSHA256Hex: '...'
          organizationId: '...'
          createdOn: 12345
        - organizationName: '...'
          versionId: '...'
          $id: '...'
          semanticVersion: '...'
          schemaId: '...'
          schemaName: '...'
          createdBy: '...'
          jsonSHA256Hex: '...'
          organizationId: '...'
          createdOn: 12345
        nextPageToken: '...'
    json_ListOrganizationsRequest:
      title: ListOrganizationsRequest
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        nextPageToken: '...'
    json_ListOrganizationsResponse:
      title: ListOrganizationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        page:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Organization'
      description: ""
      example:
        nextPageToken: '...'
        page:
        - id: '...'
          name: '...'
          createdBy: '...'
          createdOn: 12345
        - id: '...'
          name: '...'
          createdBy: '...'
          createdOn: 12345
    json_ListRequest:
      title: ListRequest
      type: object
      properties:
        filterByState:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_StateEnum'
        groupId:
          type: string
          description: ""
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        filterByState:
        - SUBMITTED_WAITING_FOR_REVIEW
        - ACCEPTED
        groupId: '...'
        nextPageToken: '...'
    json_ListResponse:
      title: ListResponse
      type: object
      properties:
        page:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FormData'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        page:
        - dataFileHandleId: '...'
          name: '...'
          modifiedOn: 12345
          formDataId: '...'
          etag: '...'
          groupId: '...'
          createdBy: '...'
          submissionStatus:
            state: ACCEPTED
            submittedOn: 12345
            reviewedOn: 12345
            reviewedBy: '...'
            rejectionMessage: '...'
          createdOn: 12345
        - dataFileHandleId: '...'
          name: '...'
          modifiedOn: 12345
          formDataId: '...'
          etag: '...'
          groupId: '...'
          createdBy: '...'
          submissionStatus:
            state: ACCEPTED
            submittedOn: 12345
            reviewedOn: 12345
            reviewedBy: '...'
            rejectionMessage: '...'
          createdOn: 12345
        nextPageToken: '...'
    json_ListValidationResultsRequest:
      title: ListValidationResultsRequest
      type: object
      properties:
        containerId:
          type: string
          description: ""
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        containerId: '...'
        nextPageToken: '...'
    json_ListValidationResultsResponse:
      title: ListValidationResultsResponse
      type: object
      properties:
        page:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ValidationResults'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        page:
        - isValid: true
          objectType: entity
          validationException:
            schemaLocation: '...'
            keyword: '...'
            pointerToViolation: '...'
            causingExceptions:
            - {}
            - {}
            message: '...'
          validationErrorMessage: '...'
          schema$id: '...'
          allValidationMessages:
          - '...'
          - '...'
          objectId: '...'
          validatedOn: 12345
          objectEtag: '...'
        - isValid: true
          objectType: entity
          validationException:
            schemaLocation: '...'
            keyword: '...'
            pointerToViolation: '...'
            causingExceptions:
            - {}
            - {}
            message: '...'
          validationErrorMessage: '...'
          schema$id: '...'
          allValidationMessages:
          - '...'
          - '...'
          objectId: '...'
          validatedOn: 12345
          objectEtag: '...'
        nextPageToken: '...'
    json_ListWrapperOfColumnModel:
      title: ListWrapperOfColumnModel
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ColumnModel'
      description: ""
      example:
        effectiveSchema: '...'
        list:
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: BOOLEAN
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: DATE_LIST
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
    json_ListWrapperOfStorageLocationSetting:
      title: ListWrapperOfStorageLocationSetting
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_StorageLocationSetting'
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        list:
        - banner: '...'
          uploadType: HTTPS
          concreteType: '...'
          storageLocationId: 12345
          createdOn: 12345
          createdBy: 12345
          description: '...'
          etag: '...'
        - banner: '...'
          uploadType: NONE
          concreteType: '...'
          storageLocationId: 12345
          createdOn: 12345
          createdBy: 12345
          description: '...'
          etag: '...'
        effectiveSchema: '...'
    json_ListWrapperOfTeam:
      title: ListWrapperOfTeam
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Team'
      description: ""
      example:
        effectiveSchema: '...'
        list:
        - id: '...'
          icon: '...'
          createdBy: '...'
          modifiedBy: '...'
          canPublicJoin: true
          modifiedOn: 12345
          name: '...'
          createdOn: 12345
          etag: '...'
          description: '...'
        - id: '...'
          icon: '...'
          createdBy: '...'
          modifiedBy: '...'
          canPublicJoin: true
          modifiedOn: 12345
          name: '...'
          createdOn: 12345
          etag: '...'
          description: '...'
    json_ListWrapperOfTeamMember:
      title: ListWrapperOfTeamMember
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_TeamMember'
      description: ""
      example:
        effectiveSchema: '...'
        list:
        - teamId: '...'
          isAdmin: true
          member:
            lastName: '...'
            ownerId: '...'
            firstName: '...'
            userName: '...'
            displayName: '...'
            email: '...'
            isIndividual: true
        - teamId: '...'
          isAdmin: true
          member:
            lastName: '...'
            ownerId: '...'
            firstName: '...'
            userName: '...'
            displayName: '...'
            email: '...'
            isIndividual: true
    json_ListWrapperOfUserProfile:
      title: ListWrapperOfUserProfile
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_UserProfile'
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        list:
        - summary: '...'
          preferences:
          - concreteType: '...'
            name: '...'
          - concreteType: '...'
            name: '...'
          profilePicureFileHandleId: '...'
          displayName: '...'
          notificationSettings:
            markEmailedMessagesAsRead: true
            sendEmailNotifications: true
          RStudioUrl: '...'
          openIds:
          - '...'
          - '...'
          email: '...'
          url: '...'
          etag: '...'
          position: '...'
          company: '...'
          teamName: '...'
          location: '...'
          lastName: '...'
          emails:
          - '...'
          - '...'
          userName: '...'
          industry: '...'
          ownerId: '...'
          createdOn: 12345
          firstName: '...'
        - summary: '...'
          preferences:
          - concreteType: '...'
            name: '...'
          - concreteType: '...'
            name: '...'
          profilePicureFileHandleId: '...'
          displayName: '...'
          notificationSettings:
            markEmailedMessagesAsRead: true
            sendEmailNotifications: true
          RStudioUrl: '...'
          openIds:
          - '...'
          - '...'
          email: '...'
          url: '...'
          etag: '...'
          position: '...'
          company: '...'
          teamName: '...'
          location: '...'
          lastName: '...'
          emails:
          - '...'
          - '...'
          userName: '...'
          industry: '...'
          ownerId: '...'
          createdOn: 12345
          firstName: '...'
        effectiveSchema: '...'
    json_LongAnnotation:
      title: LongAnnotation
      type: object
      properties:
        value:
          type: number
          description: ""
        key:
          type: string
          description: ""
        isPrivate:
          type: boolean
          description: ""
      description: ""
      example:
        value: 12345
        key: '...'
        isPrivate: true
    json_MemberSubmissionEligibility:
      title: MemberSubmissionEligibility
      type: object
      properties:
        principalId:
          type: number
          description: ""
        isEligible:
          type: boolean
          description: ""
        isRegistered:
          type: boolean
          description: ""
        hasConflictingSubmission:
          type: boolean
          description: ""
        isQuotaFilled:
          type: boolean
          description: ""
      description: ""
      example:
        principalId: 12345
        isEligible: true
        isRegistered: true
        hasConflictingSubmission: true
        isQuotaFilled: true
    json_MembershipInvitation:
      title: MembershipInvitation
      type: object
      properties:
        inviteeEmail:
          type: string
          description: ""
        teamId:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        createdBy:
          type: string
          description: ""
        message:
          type: string
          description: ""
        id:
          type: string
          description: ""
        expiresOn:
          type: number
          description: ""
        inviteeId:
          type: string
          description: ""
      description: ""
      example:
        inviteeEmail: '...'
        teamId: '...'
        createdOn: 12345
        createdBy: '...'
        message: '...'
        id: '...'
        expiresOn: 12345
        inviteeId: '...'
    json_MembershipInvtnSignedToken:
      title: MembershipInvtnSignedToken
      type: object
      properties:
        version:
          type: number
          description: ""
        hmac:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        expiresOn:
          type: number
          description: ""
        membershipInvitationId:
          type: string
          description: ""
      description: ""
      example:
        version: 12345
        hmac: '...'
        concreteType: '...'
        createdOn: 12345
        expiresOn: 12345
        membershipInvitationId: '...'
    json_MembershipRequest:
      title: MembershipRequest
      type: object
      properties:
        createdOn:
          type: number
          description: ""
        userId:
          type: string
          description: ""
        message:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        teamId:
          type: string
          description: ""
        id:
          type: string
          description: ""
        expiresOn:
          type: number
          description: ""
      description: ""
      example:
        createdOn: 12345
        userId: '...'
        message: '...'
        createdBy: '...'
        teamId: '...'
        id: '...'
        expiresOn: 12345
    json_Message:
      title: Message
      type: object
      properties:
        envelope:
          $ref: '#/components/schemas/json_Envelope'
        headers:
          $ref: '#/components/schemas/json_Headers'
        plain:
          type: string
          description: ""
        reply_plain:
          type: string
          description: ""
        html:
          type: string
          description: ""
        attachments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Attachment'
      description: ""
      example:
        envelope:
          to: '...'
          recipients:
          - '...'
          - '...'
          helo_domain: '...'
          from: '...'
          remote_ip: '...'
          spf: '...'
        headers:
          subject: '...'
          from: '...'
          to: '...'
          bcc: '...'
          cc: '...'
        plain: '...'
        reply_plain: '...'
        html: '...'
        attachments:
        - file_name: '...'
          disposition: '...'
          content_type: '...'
          content_id: '...'
          url: '...'
          content: '...'
          size: '...'
        - file_name: '...'
          disposition: '...'
          content_type: '...'
          content_id: '...'
          url: '...'
          content: '...'
          size: '...'
    json_MessageBundle:
      title: MessageBundle
      type: object
      properties:
        status:
          $ref: '#/components/schemas/json_MessageStatus'
        message:
          $ref: '#/components/schemas/json_MessageToUser'
      description: ""
      example:
        status:
          messageId: '...'
          status: UNREAD
          recipientId: '...'
        message:
          userProfileSettingEndpoint: '...'
          notificationUnsubscribeEndpoint: '...'
          withProfileSettingLink: true
          createdOn: 12345
          createdBy: '...'
          subject: '...'
          withUnsubscribeLink: true
          to: '...'
          isNotificationMessage: true
          inReplyToRoot: '...'
          bcc: '...'
          fileHandleId: '...'
          cc: '...'
          recipients:
          - '...'
          - '...'
          id: '...'
          inReplyTo: '...'
    json_MessageRecipientSet:
      title: MessageRecipientSet
      type: object
      properties:
        recipients:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        recipients:
        - '...'
        - '...'
    json_MessageStatus:
      title: MessageStatus
      type: object
      properties:
        messageId:
          type: string
          description: ""
        status:
          $ref: '#/components/schemas/json_MessageStatusType'
        recipientId:
          type: string
          description: ""
      description: ""
      example:
        messageId: '...'
        status: ARCHIVED
        recipientId: '...'
    json_MessageStatusType:
      title: MessageStatusType
      type: string
      description: ""
      enum:
      - READ
      - UNREAD
      - ARCHIVED
    json_MessageToUser:
      title: MessageToUser
      type: object
      properties:
        userProfileSettingEndpoint:
          type: string
          description: ""
        notificationUnsubscribeEndpoint:
          type: string
          description: ""
        withProfileSettingLink:
          type: boolean
          description: ""
        createdOn:
          type: number
          description: ""
        createdBy:
          type: string
          description: ""
        subject:
          type: string
          description: ""
        withUnsubscribeLink:
          type: boolean
          description: ""
        to:
          type: string
          description: ""
        isNotificationMessage:
          type: boolean
          description: ""
        inReplyToRoot:
          type: string
          description: ""
        bcc:
          type: string
          description: ""
        fileHandleId:
          type: string
          description: ""
        cc:
          type: string
          description: ""
        recipients:
          type: array
          description: ""
          items:
            type: string
        id:
          type: string
          description: ""
        inReplyTo:
          type: string
          description: ""
      description: ""
      example:
        userProfileSettingEndpoint: '...'
        notificationUnsubscribeEndpoint: '...'
        withProfileSettingLink: true
        createdOn: 12345
        createdBy: '...'
        subject: '...'
        withUnsubscribeLink: true
        to: '...'
        isNotificationMessage: true
        inReplyToRoot: '...'
        bcc: '...'
        fileHandleId: '...'
        cc: '...'
        recipients:
        - '...'
        - '...'
        id: '...'
        inReplyTo: '...'
    json_MessageURL:
      title: MessageURL
      type: object
      properties:
        messageUrl:
          type: string
          description: ""
      description: ""
      example:
        messageUrl: '...'
    json_MigrationRangeChecksum:
      title: MigrationRangeChecksum
      type: object
      properties:
        maxid:
          type: number
          description: ""
        minid:
          type: number
          description: ""
        concreteType:
          type: string
          description: ""
        checksum:
          type: string
          description: ""
        type:
          $ref: '#/components/schemas/json_MigrationType'
      description: ""
      example:
        maxid: 12345
        minid: 12345
        concreteType: '...'
        checksum: '...'
        type: VERIFICATION_FILE
    json_MigrationType:
      title: MigrationType
      type: string
      description: ""
      enum:
      - PRINCIPAL
      - GROUP_MEMBERS
      - CREDENTIAL
      - TERMS_OF_USE_AGREEMENT
      - SESSION_TOKEN
      - PRINCIPAL_ALIAS
      - NOTIFICATION_EMAIL
      - USER_PROFILE
      - STORAGE_LOCATION
      - FILE_HANDLE
      - MULTIPART_UPLOAD
      - MULTIPART_UPLOAD_PART_STATE
      - MULTIPART_UPLOAD_COMPOSER_PART_STATE
      - MESSAGE_CONTENT
      - MESSAGE_TO_USER
      - MESSAGE_RECIPIENT
      - MESSAGE_STATUS
      - COMMENT
      - V2_WIKI_PAGE
      - V2_WIKI_ATTACHMENT_RESERVATION
      - V2_WIKI_MARKDOWN
      - V2_WIKI_OWNERS
      - ACTIVITY
      - NODE
      - NODE_REVISION
      - NODE_ACCESS_REQUIRMENT
      - DOCKER_REPOSITORY_NAME
      - DOCKER_COMMIT
      - TEAM
      - MEMBERSHIP_INVITATION_SUBMISSION
      - MEMBERSHIP_REQUEST_SUBMISSION
      - EVALUATION
      - EVALUATION_ROUND
      - EVALUATION_SUBMISSIONS
      - SUBMISSION
      - SUBMISSION_CONTRIBUTOR
      - SUBMISSION_FILE
      - SUBMISSION_STATUS
      - PROJECT_SETTINGS
      - PROJECT_STATS
      - ACCESS_REQUIREMENT
      - ACCESS_REQUIREMENT_REVISION
      - ACCESS_APPROVAL
      - ACL
      - ACL_ACCESS
      - ACL_ACCESS_TYPE
      - FAVORITE
      - TRASH_CAN
      - DOI
      - CHALLENGE
      - CHALLENGE_TEAM
      - COLUMN_MODEL
      - BOUND_COLUMN_OWNER
      - BOUND_COLUMN_ORDINAL
      - TABLE_TRANSACTION
      - TABLE_TRANSACTION_TO_VERSION
      - TABLE_SEQUENCE
      - TABLE_CHANGE
      - QUIZ_RESPONSE
      - VERIFICATION_SUBMISSION
      - VERIFICATION_STATE
      - VERIFICATION_FILE
      - FORUM
      - DISCUSSION_THREAD
      - DISCUSSION_THREAD_VIEW
      - DISCUSSION_THREAD_ENTITY_REFERENCE
      - DISCUSSION_REPLY
      - SUBSCRIPTION
      - BROADCAST_MESSAGE
      - VIEW_TYPE
      - VIEW_SCOPE
      - VIEW_SNAPSHOT
      - AUTHENTICATION_RECEIPT
      - THROTTLE_RULE
      - RESEARCH_PROJECT
      - DATA_ACCESS_REQUEST
      - DATA_ACCESS_SUBMISSION
      - DATA_ACCESS_SUBMISSION_SUBMITTER
      - DATA_ACCESS_SUBMISSION_STATUS
      - DATA_ACCESS_NOTIFICATIONS
      - FORM_GROUP
      - FORM_DATA
      - ORGANIZATION
      - JSON_SCHEMA
      - JSON_SCHEMA_BLOB
      - JSON_SCHEMA_VERSION
      - JSON_SCHEMA_LATEST_VERSION
      - JSON_SCHEMA_DEPENDENCY
      - JSON_SCHEMA_OBJECT_BINDING
      - DOWNLOAD_LIST
      - DOWNLOAD_LIST_ITEM
      - DOWNLOAD_ORDER
      - DOWNLOAD_LIST_2
      - DOWNLOAD_LIST_ITEM_2
      - DATA_TYPE
      - OAUTH_SECTOR_IDENTIFIER
      - OAUTH_CLIENT
      - OAUTH_REFRESH_TOKEN
      - PERSONAL_ACCESS_TOKEN
      - AUTHORIZATION_GRANT
      - SES_NOTIFICATIONS
      - QUARANTINED_EMAILS
      - FEATURE_STATUS
      - CHANGE
    json_MigrationTypeChecksum:
      title: MigrationTypeChecksum
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        type:
          $ref: '#/components/schemas/json_MigrationType'
        migrationType:
          $ref: '#/components/schemas/json_MigrationType'
        checksum:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        type: COLUMN_MODEL
        migrationType: CREDENTIAL
        checksum: '...'
    json_MigrationTypeCount:
      title: MigrationTypeCount
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        type:
          $ref: '#/components/schemas/json_MigrationType'
        maxid:
          type: number
          description: ""
        count:
          type: number
          description: ""
        minid:
          type: number
          description: ""
      description: ""
      example:
        concreteType: '...'
        type: OAUTH_SECTOR_IDENTIFIER
        maxid: 12345
        count: 12345
        minid: 12345
    json_MigrationTypeCounts:
      title: MigrationTypeCounts
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_MigrationTypeCount'
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        list:
        - concreteType: '...'
          type: JSON_SCHEMA_OBJECT_BINDING
          maxid: 12345
          count: 12345
          minid: 12345
        - concreteType: '...'
          type: SUBMISSION
          maxid: 12345
          count: 12345
          minid: 12345
        concreteType: '...'
    json_MigrationTypeList:
      title: MigrationTypeList
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_MigrationType'
      description: ""
      example:
        list:
        - JSON_SCHEMA_OBJECT_BINDING
        - DISCUSSION_THREAD_ENTITY_REFERENCE
    json_MigrationTypeNames:
      title: MigrationTypeNames
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        list:
        - '...'
        - '...'
    json_NameIdentifierScheme:
      title: NameIdentifierScheme
      type: string
      description: ""
      enum:
      - ORCID
      - ISNI
    json_NewIntegrationTestUser:
      title: NewIntegrationTestUser
      type: object
      properties:
        session:
          $ref: '#/components/schemas/json_Session'
        email:
          type: string
          description: ""
        password:
          type: string
          description: ""
        username:
          type: string
          description: ""
        profile:
          $ref: '#/components/schemas/json_UserProfile'
      description: ""
      example:
        session:
          sessionToken: '...'
          acceptsTermsOfUse: true
        email: '...'
        password: '...'
        username: '...'
        profile:
          summary: '...'
          preferences:
          - concreteType: '...'
            name: '...'
          - concreteType: '...'
            name: '...'
          profilePicureFileHandleId: '...'
          displayName: '...'
          notificationSettings:
            markEmailedMessagesAsRead: true
            sendEmailNotifications: true
          RStudioUrl: '...'
          openIds:
          - '...'
          - '...'
          email: '...'
          url: '...'
          etag: '...'
          position: '...'
          company: '...'
          teamName: '...'
          location: '...'
          lastName: '...'
          emails:
          - '...'
          - '...'
          userName: '...'
          industry: '...'
          ownerId: '...'
          createdOn: 12345
          firstName: '...'
    json_NewUser:
      title: NewUser
      type: object
      properties:
        userName:
          type: string
          description: ""
        email:
          type: string
          description: ""
        encodedMembershipInvtnSignedToken:
          type: string
          description: ""
        firstName:
          type: string
          description: ""
        lastName:
          type: string
          description: ""
      description: ""
      example:
        userName: '...'
        email: '...'
        encodedMembershipInvtnSignedToken: '...'
        firstName: '...'
        lastName: '...'
    json_NotificationEmail:
      title: NotificationEmail
      type: object
      properties:
        quarantineStatus:
          $ref: '#/components/schemas/json_EmailQuarantineStatus'
        email:
          type: string
          description: ""
      description: ""
      example:
        quarantineStatus:
          reason: COMPLAINT
          expiration: 12345
          reasonDetails: '...'
        email: '...'
    json_NotificationSettingsSignedToken:
      title: NotificationSettingsSignedToken
      type: object
      properties:
        expiresOn:
          type: number
          description: ""
        version:
          type: number
          description: ""
        createdOn:
          type: number
          description: ""
        hmac:
          type: string
          description: ""
        settings:
          $ref: '#/components/schemas/json_Settings'
        concreteType:
          type: string
          description: ""
        userId:
          type: string
          description: ""
      description: ""
      example:
        expiresOn: 12345
        version: 12345
        createdOn: 12345
        hmac: '...'
        settings:
          markEmailedMessagesAsRead: true
          sendEmailNotifications: true
        concreteType: '...'
        userId: '...'
    json_NotificationType:
      title: NotificationType
      type: string
      description: ""
      enum:
      - REVOCATION
      - FIRST_RENEWAL_REMINDER
      - SECOND_RENEWAL_REMINDER
    json_Number:
      title: Number
      type: object
      description: ""
      example: {}
    json_OAuthClient:
      title: OAuthClient
      type: object
      properties:
        createdOn:
          type: number
          description: ""
        userinfo_signed_response_alg:
          $ref: '#/components/schemas/json_OIDCSigningAlgorithm'
        sector_identifier_uri:
          type: string
          description: ""
        verified:
          type: boolean
          description: ""
        tos_uri:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        client_id:
          type: string
          description: ""
        redirect_uris:
          type: array
          description: ""
          items:
            type: string
        etag:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        client_name:
          type: string
          description: ""
        client_uri:
          type: string
          description: ""
        sector_identifier:
          type: string
          description: ""
        policy_uri:
          type: string
          description: ""
      description: ""
      example:
        createdOn: 12345
        userinfo_signed_response_alg: RS256
        sector_identifier_uri: '...'
        verified: true
        tos_uri: '...'
        createdBy: '...'
        client_id: '...'
        redirect_uris:
        - '...'
        - '...'
        etag: '...'
        modifiedOn: 12345
        client_name: '...'
        client_uri: '...'
        sector_identifier: '...'
        policy_uri: '...'
    json_OIDCSigningAlgorithm:
      title: OIDCSigningAlgorithm
      type: string
      description: ""
      enum:
      - RS256
    json_ObjectSchema:
      title: ObjectSchema
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: ""
        maximum:
          $ref: '#/components/schemas/json_Number'
        $recursiveRef:
          type: string
          description: ""
        exclusiveMaximum:
          $ref: '#/components/schemas/json_Number'
        objectFieldMap:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: ""
        items:
          $ref: '#/components/schemas/json_ObjectSchema'
        implements:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ObjectSchema'
        enum:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EnumValue'
        packageName:
          type: string
          description: ""
        subSchemaIterator:
          $ref: '#/components/schemas/json_IteratorOfObjectSchema'
        default:
          type: object
          properties: {}
          description: ""
        transient:
          type: boolean
          description: ""
        additionalProperties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: ""
        contentEncoding:
          $ref: '#/components/schemas/json_ENCODING'
        $recursiveAnchor:
          type: boolean
          description: ""
        links:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_LinkDescription'
        minimum:
          $ref: '#/components/schemas/json_Number'
        maxLength:
          type: number
          description: ""
        additionalItems:
          $ref: '#/components/schemas/json_ObjectSchema'
        maxItems:
          type: number
          description: ""
        disallow:
          $ref: '#/components/schemas/json_TYPE'
        key:
          $ref: '#/components/schemas/json_ObjectSchema'
        exclusiveMinimum:
          $ref: '#/components/schemas/json_Number'
        value:
          $ref: '#/components/schemas/json_ObjectSchema'
        $RecursiveRefInstance:
          type: boolean
          description: ""
        defaultConcreteType:
          type: string
          description: ""
        uniqueItems:
          type: boolean
          description: ""
        schema:
          type: string
          description: ""
        name:
          type: string
          description: ""
        ref:
          type: string
          description: ""
        minLength:
          type: number
          description: ""
        divisibleBy:
          $ref: '#/components/schemas/json_Number'
        pattern:
          type: string
          description: ""
        minItems:
          type: number
          description: ""
        dependencies:
          type: array
          description: ""
          items:
            type: string
        extends:
          $ref: '#/components/schemas/json_ObjectSchema'
        type:
          $ref: '#/components/schemas/json_TYPE'
        description:
          type: string
          description: ""
        format:
          $ref: '#/components/schemas/json_FORMAT'
        id:
          type: string
          description: ""
        title:
          type: string
          description: ""
        required:
          type: boolean
          description: ""
      description: ""
      example:
        properties:
          property1: {}
          property2: {}
        maximum: {}
        $recursiveRef: '...'
        exclusiveMaximum: {}
        objectFieldMap:
          property1: {}
          property2: {}
        items:
          properties:
            property1: {}
            property2: {}
          maximum: {}
          $recursiveRef: '...'
          exclusiveMaximum: {}
          objectFieldMap:
            property1: {}
            property2: {}
          items: {}
          implements:
          - {}
          - {}
          enum:
          - description: '...'
            name: '...'
          - description: '...'
            name: '...'
          packageName: '...'
          subSchemaIterator: {}
          default: {}
          transient: true
          additionalProperties:
            property1: {}
            property2: {}
          contentEncoding: BINARY
          $recursiveAnchor: true
          links:
          - rel: SELF
            href: '...'
          - rel: ROOT
            href: '...'
          minimum: {}
          maxLength: 12345
          additionalItems: {}
          maxItems: 12345
          disallow: STRING
          key: {}
          exclusiveMinimum: {}
          value: {}
          $RecursiveRefInstance: true
          defaultConcreteType: '...'
          uniqueItems: true
          schema: '...'
          name: '...'
          ref: '...'
          minLength: 12345
          divisibleBy: {}
          pattern: '...'
          minItems: 12345
          dependencies:
          - '...'
          - '...'
          extends: {}
          type: BOOLEAN
          description: '...'
          format: REGEX
          id: '...'
          title: '...'
          required: true
        implements:
        - properties:
            property1: {}
            property2: {}
          maximum: {}
          $recursiveRef: '...'
          exclusiveMaximum: {}
          objectFieldMap:
            property1: {}
            property2: {}
          items: {}
          implements:
          - {}
          - {}
          enum:
          - description: '...'
            name: '...'
          - description: '...'
            name: '...'
          packageName: '...'
          subSchemaIterator: {}
          default: {}
          transient: true
          additionalProperties:
            property1: {}
            property2: {}
          contentEncoding: BINARY
          $recursiveAnchor: true
          links:
          - rel: SELF
            href: '...'
          - rel: FULL
            href: '...'
          minimum: {}
          maxLength: 12345
          additionalItems: {}
          maxItems: 12345
          disallow: NUMBER
          key: {}
          exclusiveMinimum: {}
          value: {}
          $RecursiveRefInstance: true
          defaultConcreteType: '...'
          uniqueItems: true
          schema: '...'
          name: '...'
          ref: '...'
          minLength: 12345
          divisibleBy: {}
          pattern: '...'
          minItems: 12345
          dependencies:
          - '...'
          - '...'
          extends: {}
          type: INTEGER
          description: '...'
          format: DATE_TIME
          id: '...'
          title: '...'
          required: true
        - properties:
            property1: {}
            property2: {}
          maximum: {}
          $recursiveRef: '...'
          exclusiveMaximum: {}
          objectFieldMap:
            property1: {}
            property2: {}
          items: {}
          implements:
          - {}
          - {}
          enum:
          - description: '...'
            name: '...'
          - description: '...'
            name: '...'
          packageName: '...'
          subSchemaIterator: {}
          default: {}
          transient: true
          additionalProperties:
            property1: {}
            property2: {}
          contentEncoding: BINARY
          $recursiveAnchor: true
          links:
          - rel: FULL
            href: '...'
          - rel: DESCRIBED_BY
            href: '...'
          minimum: {}
          maxLength: 12345
          additionalItems: {}
          maxItems: 12345
          disallow: ARRAY
          key: {}
          exclusiveMinimum: {}
          value: {}
          $RecursiveRefInstance: true
          defaultConcreteType: '...'
          uniqueItems: true
          schema: '...'
          name: '...'
          ref: '...'
          minLength: 12345
          divisibleBy: {}
          pattern: '...'
          minItems: 12345
          dependencies:
          - '...'
          - '...'
          extends: {}
          type: INTEGER
          description: '...'
          format: REGEX
          id: '...'
          title: '...'
          required: true
        enum:
        - description: '...'
          name: '...'
        - description: '...'
          name: '...'
        packageName: '...'
        subSchemaIterator: {}
        default: {}
        transient: true
        additionalProperties:
          property1: {}
          property2: {}
        contentEncoding: BINARY
        $recursiveAnchor: true
        links:
        - rel: FULL
          href: '...'
        - rel: FULL
          href: '...'
        minimum: {}
        maxLength: 12345
        additionalItems:
          properties:
            property1: {}
            property2: {}
          maximum: {}
          $recursiveRef: '...'
          exclusiveMaximum: {}
          objectFieldMap:
            property1: {}
            property2: {}
          items: {}
          implements:
          - {}
          - {}
          enum:
          - description: '...'
            name: '...'
          - description: '...'
            name: '...'
          packageName: '...'
          subSchemaIterator: {}
          default: {}
          transient: true
          additionalProperties:
            property1: {}
            property2: {}
          contentEncoding: BINARY
          $recursiveAnchor: true
          links:
          - rel: ROOT
            href: '...'
          - rel: SELF
            href: '...'
          minimum: {}
          maxLength: 12345
          additionalItems: {}
          maxItems: 12345
          disallow: MAP
          key: {}
          exclusiveMinimum: {}
          value: {}
          $RecursiveRefInstance: true
          defaultConcreteType: '...'
          uniqueItems: true
          schema: '...'
          name: '...'
          ref: '...'
          minLength: 12345
          divisibleBy: {}
          pattern: '...'
          minItems: 12345
          dependencies:
          - '...'
          - '...'
          extends: {}
          type: ANY
          description: '...'
          format: TIME
          id: '...'
          title: '...'
          required: true
        maxItems: 12345
        disallow: TUPLE_ARRAY_MAP
        key:
          properties:
            property1: {}
            property2: {}
          maximum: {}
          $recursiveRef: '...'
          exclusiveMaximum: {}
          objectFieldMap:
            property1: {}
            property2: {}
          items: {}
          implements:
          - {}
          - {}
          enum:
          - description: '...'
            name: '...'
          - description: '...'
            name: '...'
          packageName: '...'
          subSchemaIterator: {}
          default: {}
          transient: true
          additionalProperties:
            property1: {}
            property2: {}
          contentEncoding: BINARY
          $recursiveAnchor: true
          links:
          - rel: DESCRIBED_BY
            href: '...'
          - rel: FULL
            href: '...'
          minimum: {}
          maxLength: 12345
          additionalItems: {}
          maxItems: 12345
          disallow: NUMBER
          key: {}
          exclusiveMinimum: {}
          value: {}
          $RecursiveRefInstance: true
          defaultConcreteType: '...'
          uniqueItems: true
          schema: '...'
          name: '...'
          ref: '...'
          minLength: 12345
          divisibleBy: {}
          pattern: '...'
          minItems: 12345
          dependencies:
          - '...'
          - '...'
          extends: {}
          type: MAP
          description: '...'
          format: EMAIL
          id: '...'
          title: '...'
          required: true
        exclusiveMinimum: {}
        value:
          properties:
            property1: {}
            property2: {}
          maximum: {}
          $recursiveRef: '...'
          exclusiveMaximum: {}
          objectFieldMap:
            property1: {}
            property2: {}
          items: {}
          implements:
          - {}
          - {}
          enum:
          - description: '...'
            name: '...'
          - description: '...'
            name: '...'
          packageName: '...'
          subSchemaIterator: {}
          default: {}
          transient: true
          additionalProperties:
            property1: {}
            property2: {}
          contentEncoding: BINARY
          $recursiveAnchor: true
          links:
          - rel: DESCRIBED_BY
            href: '...'
          - rel: FULL
            href: '...'
          minimum: {}
          maxLength: 12345
          additionalItems: {}
          maxItems: 12345
          disallow: NULL
          key: {}
          exclusiveMinimum: {}
          value: {}
          $RecursiveRefInstance: true
          defaultConcreteType: '...'
          uniqueItems: true
          schema: '...'
          name: '...'
          ref: '...'
          minLength: 12345
          divisibleBy: {}
          pattern: '...'
          minItems: 12345
          dependencies:
          - '...'
          - '...'
          extends: {}
          type: NULL
          description: '...'
          format: DATE_TIME
          id: '...'
          title: '...'
          required: true
        $RecursiveRefInstance: true
        defaultConcreteType: '...'
        uniqueItems: true
        schema: '...'
        name: '...'
        ref: '...'
        minLength: 12345
        divisibleBy: {}
        pattern: '...'
        minItems: 12345
        dependencies:
        - '...'
        - '...'
        extends:
          properties:
            property1: {}
            property2: {}
          maximum: {}
          $recursiveRef: '...'
          exclusiveMaximum: {}
          objectFieldMap:
            property1: {}
            property2: {}
          items: {}
          implements:
          - {}
          - {}
          enum:
          - description: '...'
            name: '...'
          - description: '...'
            name: '...'
          packageName: '...'
          subSchemaIterator: {}
          default: {}
          transient: true
          additionalProperties:
            property1: {}
            property2: {}
          contentEncoding: BINARY
          $recursiveAnchor: true
          links:
          - rel: DESCRIBED_BY
            href: '...'
          - rel: FULL
            href: '...'
          minimum: {}
          maxLength: 12345
          additionalItems: {}
          maxItems: 12345
          disallow: NUMBER
          key: {}
          exclusiveMinimum: {}
          value: {}
          $RecursiveRefInstance: true
          defaultConcreteType: '...'
          uniqueItems: true
          schema: '...'
          name: '...'
          ref: '...'
          minLength: 12345
          divisibleBy: {}
          pattern: '...'
          minItems: 12345
          dependencies:
          - '...'
          - '...'
          extends: {}
          type: BOOLEAN
          description: '...'
          format: STYLE
          id: '...'
          title: '...'
          required: true
        type: NULL
        description: '...'
        format: IPV6
        id: '...'
        title: '...'
        required: true
    json_ObjectStatisticsRequest:
      title: ObjectStatisticsRequest
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        objectId:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        objectId: '...'
    json_ObjectStatisticsResponse:
      title: ObjectStatisticsResponse
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        objectId:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        objectId: '...'
    json_ObjectType_schema:
      title: ObjectType
      type: string
      description: ""
      enum:
      - entity
    json_ObjectType:
      title: ObjectType
      type: string
      description: ""
      enum:
      - ENTITY
      - ENTITY_CONTAINER
      - PRINCIPAL
      - ACTIVITY
      - EVALUATION
      - EVALUATION_ROUND
      - SUBMISSION
      - EVALUATION_SUBMISSIONS
      - FILE
      - MESSAGE
      - WIKI
      - FAVORITE
      - ACCESS_REQUIREMENT
      - ACCESS_APPROVAL
      - TEAM
      - TABLE
      - ACCESS_CONTROL_LIST
      - PROJECT_SETTING
      - VERIFICATION_SUBMISSION
      - CERTIFIED_USER_PASSING_RECORD
      - FORUM
      - THREAD
      - REPLY
      - FORM_GROUP
      - ORGANIZATION
      - FORM_DATA
      - ENTITY_VIEW
      - USER_PROFILE
      - DATA_ACCESS_REQUEST
      - DATA_ACCESS_SUBMISSION
      - DATA_ACCESS_SUBMISSION_STATUS
      - MEMBERSHIP_INVITATION
    json_OpenSubmission:
      title: OpenSubmission
      type: object
      properties:
        numberOfSubmittedSubmission:
          type: number
          description: ""
        accessRequirementId:
          type: string
          description: ""
      description: ""
      example:
        numberOfSubmittedSubmission: 12345
        accessRequirementId: '...'
    json_OpenSubmissionPage:
      title: OpenSubmissionPage
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        openSubmissionList:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_OpenSubmission'
      description: ""
      example:
        nextPageToken: '...'
        openSubmissionList:
        - numberOfSubmittedSubmission: 12345
          accessRequirementId: '...'
        - numberOfSubmittedSubmission: 12345
          accessRequirementId: '...'
    json_Organization:
      title: Organization
      type: object
      properties:
        id:
          type: string
          description: ""
        name:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
      description: ""
      example:
        id: '...'
        name: '...'
        createdBy: '...'
        createdOn: 12345
    json_PaginatedColumnModels:
      title: PaginatedColumnModels
      type: object
      properties:
        totalNumberOfResults:
          type: number
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ColumnModel'
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: LINK
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: SUBMISSIONID
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
    json_PaginatedIds:
      title: PaginatedIds
      type: object
      properties:
        totalNumberOfResults:
          type: number
          description: ""
        results:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - '...'
        - '...'
    json_PaginatedResultsOfAccessRequirement:
      title: PaginatedResultsOfAccessRequirement
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessRequirement'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        results:
        - subjectIds:
          - type: EVALUATION
            id: '...'
          - type: TEAM
            id: '...'
          etag: '...'
          accessType: READ
          concreteType: '...'
          versionNumber: 12345
          modifiedBy: '...'
          createdBy: '...'
          createdOn: 12345
          description: '...'
          modifiedOn: 12345
          id: 12345
        - subjectIds:
          - type: ENTITY
            id: '...'
          - type: TEAM
            id: '...'
          etag: '...'
          accessType: UPLOAD
          concreteType: '...'
          versionNumber: 12345
          modifiedBy: '...'
          createdBy: '...'
          createdOn: 12345
          description: '...'
          modifiedOn: 12345
          id: 12345
        totalNumberOfResults: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfDiscussionReplyBundle:
      title: PaginatedResultsOfDiscussionReplyBundle
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_DiscussionReplyBundle'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        results:
        - threadId: '...'
          id: '...'
          modifiedOn: 12345
          forumId: '...'
          createdBy: '...'
          createdOn: 12345
          projectId: '...'
          etag: '...'
          isDeleted: true
          isEdited: true
          messageKey: '...'
        - threadId: '...'
          id: '...'
          modifiedOn: 12345
          forumId: '...'
          createdBy: '...'
          createdOn: 12345
          projectId: '...'
          etag: '...'
          isDeleted: true
          isEdited: true
          messageKey: '...'
        totalNumberOfResults: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfDiscussionThreadBundle:
      title: PaginatedResultsOfDiscussionThreadBundle
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_DiscussionThreadBundle'
      description: ""
      example:
        effectiveSchema: '...'
        totalNumberOfResults: 12345
        results:
        - etag: '...'
          id: '...'
          messageKey: '...'
          isDeleted: true
          createdOn: 12345
          isPinned: true
          modifiedOn: 12345
          isEdited: true
          activeAuthors:
          - '...'
          - '...'
          projectId: '...'
          createdBy: '...'
          forumId: '...'
          title: '...'
          lastActivity: 12345
          numberOfViews: 12345
          numberOfReplies: 12345
        - etag: '...'
          id: '...'
          messageKey: '...'
          isDeleted: true
          createdOn: 12345
          isPinned: true
          modifiedOn: 12345
          isEdited: true
          activeAuthors:
          - '...'
          - '...'
          projectId: '...'
          createdBy: '...'
          forumId: '...'
          title: '...'
          lastActivity: 12345
          numberOfViews: 12345
          numberOfReplies: 12345
    json_PaginatedResultsOfDockerCommit:
      title: PaginatedResultsOfDockerCommit
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_DockerCommit'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        results:
        - digest: '...'
          createdOn: 12345
          tag: '...'
        - digest: '...'
          createdOn: 12345
          tag: '...'
        totalNumberOfResults: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfEntityHeader:
      title: PaginatedResultsOfEntityHeader
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_EntityHeader'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
      description: ""
      example:
        effectiveSchema: '...'
        results:
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
        - modifiedOn: 12345
          id: '...'
          modifiedBy: '...'
          versionLabel: '...'
          versionNumber: 12345
          createdOn: 12345
          name: '...'
          type: '...'
          createdBy: '...'
          benefactorId: 12345
        totalNumberOfResults: 12345
    json_PaginatedResultsOfEvaluation:
      title: PaginatedResultsOfEvaluation
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Evaluation'
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - ownerId: '...'
          quota:
            roundDurationMillis: 12345
            numberOfRounds: 12345
            submissionLimit: 12345
            firstRoundStart: 12345
          createdOn: 12345
          submissionReceiptMessage: '...'
          etag: '...'
          submissionInstructionsMessage: '...'
          contentSource: '...'
          description: '...'
          status: OPEN
          name: '...'
          id: '...'
        - ownerId: '...'
          quota:
            roundDurationMillis: 12345
            numberOfRounds: 12345
            submissionLimit: 12345
            firstRoundStart: 12345
          createdOn: 12345
          submissionReceiptMessage: '...'
          etag: '...'
          submissionInstructionsMessage: '...'
          contentSource: '...'
          description: '...'
          status: COMPLETED
          name: '...'
          id: '...'
        effectiveSchema: '...'
    json_PaginatedResultsOfMembershipInvitation:
      title: PaginatedResultsOfMembershipInvitation
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_MembershipInvitation'
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - inviteeEmail: '...'
          teamId: '...'
          createdOn: 12345
          createdBy: '...'
          message: '...'
          id: '...'
          expiresOn: 12345
          inviteeId: '...'
        - inviteeEmail: '...'
          teamId: '...'
          createdOn: 12345
          createdBy: '...'
          message: '...'
          id: '...'
          expiresOn: 12345
          inviteeId: '...'
        effectiveSchema: '...'
    json_PaginatedResultsOfMembershipRequest:
      title: PaginatedResultsOfMembershipRequest
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_MembershipRequest'
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
      description: ""
      example:
        results:
        - createdOn: 12345
          userId: '...'
          message: '...'
          createdBy: '...'
          teamId: '...'
          id: '...'
          expiresOn: 12345
        - createdOn: 12345
          userId: '...'
          message: '...'
          createdBy: '...'
          teamId: '...'
          id: '...'
          expiresOn: 12345
        effectiveSchema: '...'
        totalNumberOfResults: 12345
    json_PaginatedResultsOfMessageBundle:
      title: PaginatedResultsOfMessageBundle
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_MessageBundle'
      description: ""
      example:
        effectiveSchema: '...'
        totalNumberOfResults: 12345
        results:
        - status:
            messageId: '...'
            status: ARCHIVED
            recipientId: '...'
          message:
            userProfileSettingEndpoint: '...'
            notificationUnsubscribeEndpoint: '...'
            withProfileSettingLink: true
            createdOn: 12345
            createdBy: '...'
            subject: '...'
            withUnsubscribeLink: true
            to: '...'
            isNotificationMessage: true
            inReplyToRoot: '...'
            bcc: '...'
            fileHandleId: '...'
            cc: '...'
            recipients:
            - '...'
            - '...'
            id: '...'
            inReplyTo: '...'
        - status:
            messageId: '...'
            status: ARCHIVED
            recipientId: '...'
          message:
            userProfileSettingEndpoint: '...'
            notificationUnsubscribeEndpoint: '...'
            withProfileSettingLink: true
            createdOn: 12345
            createdBy: '...'
            subject: '...'
            withUnsubscribeLink: true
            to: '...'
            isNotificationMessage: true
            inReplyToRoot: '...'
            bcc: '...'
            fileHandleId: '...'
            cc: '...'
            recipients:
            - '...'
            - '...'
            id: '...'
            inReplyTo: '...'
    json_PaginatedResultsOfMessageToUser:
      title: PaginatedResultsOfMessageToUser
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_MessageToUser'
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
      description: ""
      example:
        results:
        - userProfileSettingEndpoint: '...'
          notificationUnsubscribeEndpoint: '...'
          withProfileSettingLink: true
          createdOn: 12345
          createdBy: '...'
          subject: '...'
          withUnsubscribeLink: true
          to: '...'
          isNotificationMessage: true
          inReplyToRoot: '...'
          bcc: '...'
          fileHandleId: '...'
          cc: '...'
          recipients:
          - '...'
          - '...'
          id: '...'
          inReplyTo: '...'
        - userProfileSettingEndpoint: '...'
          notificationUnsubscribeEndpoint: '...'
          withProfileSettingLink: true
          createdOn: 12345
          createdBy: '...'
          subject: '...'
          withUnsubscribeLink: true
          to: '...'
          isNotificationMessage: true
          inReplyToRoot: '...'
          bcc: '...'
          fileHandleId: '...'
          cc: '...'
          recipients:
          - '...'
          - '...'
          id: '...'
          inReplyTo: '...'
        effectiveSchema: '...'
        totalNumberOfResults: 12345
    json_PaginatedResultsOfPassingRecord:
      title: PaginatedResultsOfPassingRecord
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_PassingRecord'
      description: ""
      example:
        effectiveSchema: '...'
        totalNumberOfResults: 12345
        results:
        - quizId: 12345
          userId: '...'
          passedOn: 12345
          passed: true
          score: 12345
          responseId: 12345
          corrections:
          - isCorrect: true
            response: {}
            question: {}
          - isCorrect: true
            response: {}
            question: {}
        - quizId: 12345
          userId: '...'
          passedOn: 12345
          passed: true
          score: 12345
          responseId: 12345
          corrections:
          - isCorrect: true
            response: {}
            question: {}
          - isCorrect: true
            response: {}
            question: {}
    json_PaginatedResultsOfProjectHeader:
      title: PaginatedResultsOfProjectHeader
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ProjectHeader'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        results:
        - name: '...'
          id: '...'
          modifiedBy: 12345
          lastActivity: 12345
          modifiedOn: 12345
        - name: '...'
          id: '...'
          modifiedBy: 12345
          lastActivity: 12345
          modifiedOn: 12345
        totalNumberOfResults: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfQuizResponse:
      title: PaginatedResultsOfQuizResponse
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_QuizResponse'
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - quizId: 12345
          createdBy: '...'
          createdOn: 12345
          questionResponses:
          - questionIndex: 12345
            concreteType: '...'
          - questionIndex: 12345
            concreteType: '...'
          id: 12345
        - quizId: 12345
          createdBy: '...'
          createdOn: 12345
          questionResponses:
          - questionIndex: 12345
            concreteType: '...'
          - questionIndex: 12345
            concreteType: '...'
          id: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfReference:
      title: PaginatedResultsOfReference
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Reference'
      description: ""
      example:
        totalNumberOfResults: 12345
        effectiveSchema: '...'
        results:
        - targetId: '...'
          targetVersionNumber: 12345
        - targetId: '...'
          targetVersionNumber: 12345
    json_PaginatedResultsOfSubmission:
      title: PaginatedResultsOfSubmission
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Submission_model'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        results:
        - dockerDigest: '...'
          teamId: '...'
          name: '...'
          contributors:
          - createdOn: 12345
            principalId: '...'
          - createdOn: 12345
            principalId: '...'
          versionNumber: 12345
          entityId: '...'
          submitterAlias: '...'
          createdOn: 12345
          id: '...'
          entityBundleJSON: '...'
          userId: '...'
          dockerRepositoryName: '...'
          evaluationRoundId: '...'
          evaluationId: '...'
        - dockerDigest: '...'
          teamId: '...'
          name: '...'
          contributors:
          - createdOn: 12345
            principalId: '...'
          - createdOn: 12345
            principalId: '...'
          versionNumber: 12345
          entityId: '...'
          submitterAlias: '...'
          createdOn: 12345
          id: '...'
          entityBundleJSON: '...'
          userId: '...'
          dockerRepositoryName: '...'
          evaluationRoundId: '...'
          evaluationId: '...'
        totalNumberOfResults: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfSubmissionBundle:
      title: PaginatedResultsOfSubmissionBundle
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SubmissionBundle'
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
      description: ""
      example:
        results:
        - submissionStatus:
            cancelRequested: true
            submissionAnnotations: {}
            canCancel: true
            report: '...'
            modifiedOn: 12345
            score: 12345
            versionNumber: 12345
            annotations: {}
            id: '...'
            etag: '...'
            status: REJECTED
            entityId: '...'
            statusVersion: 12345
          submission:
            dockerDigest: '...'
            teamId: '...'
            name: '...'
            contributors:
            - {}
            - {}
            versionNumber: 12345
            entityId: '...'
            submitterAlias: '...'
            createdOn: 12345
            id: '...'
            entityBundleJSON: '...'
            userId: '...'
            dockerRepositoryName: '...'
            evaluationRoundId: '...'
            evaluationId: '...'
        - submissionStatus:
            cancelRequested: true
            submissionAnnotations: {}
            canCancel: true
            report: '...'
            modifiedOn: 12345
            score: 12345
            versionNumber: 12345
            annotations: {}
            id: '...'
            etag: '...'
            status: VALIDATED
            entityId: '...'
            statusVersion: 12345
          submission:
            dockerDigest: '...'
            teamId: '...'
            name: '...'
            contributors:
            - {}
            - {}
            versionNumber: 12345
            entityId: '...'
            submitterAlias: '...'
            createdOn: 12345
            id: '...'
            entityBundleJSON: '...'
            userId: '...'
            dockerRepositoryName: '...'
            evaluationRoundId: '...'
            evaluationId: '...'
        effectiveSchema: '...'
        totalNumberOfResults: 12345
    json_PaginatedResultsOfSubmissionStatus:
      title: PaginatedResultsOfSubmissionStatus
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SubmissionStatus_model'
      description: ""
      example:
        totalNumberOfResults: 12345
        effectiveSchema: '...'
        results:
        - cancelRequested: true
          submissionAnnotations:
            annotations:
              property1: {}
              property2: {}
            id: '...'
            etag: '...'
          canCancel: true
          report: '...'
          modifiedOn: 12345
          score: 12345
          versionNumber: 12345
          annotations:
            objectId: '...'
            doubleAnnos:
            - {}
            - {}
            scopeId: '...'
            version: 12345
            stringAnnos:
            - {}
            - {}
            longAnnos:
            - {}
            - {}
          id: '...'
          etag: '...'
          status: ACCEPTED
          entityId: '...'
          statusVersion: 12345
        - cancelRequested: true
          submissionAnnotations:
            annotations:
              property1: {}
              property2: {}
            id: '...'
            etag: '...'
          canCancel: true
          report: '...'
          modifiedOn: 12345
          score: 12345
          versionNumber: 12345
          annotations:
            objectId: '...'
            doubleAnnos:
            - {}
            - {}
            scopeId: '...'
            version: 12345
            stringAnnos:
            - {}
            - {}
            longAnnos:
            - {}
            - {}
          id: '...'
          etag: '...'
          status: ACCEPTED
          entityId: '...'
          statusVersion: 12345
    json_PaginatedResultsOfTeam:
      title: PaginatedResultsOfTeam
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Team'
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
      description: ""
      example:
        results:
        - id: '...'
          icon: '...'
          createdBy: '...'
          modifiedBy: '...'
          canPublicJoin: true
          modifiedOn: 12345
          name: '...'
          createdOn: 12345
          etag: '...'
          description: '...'
        - id: '...'
          icon: '...'
          createdBy: '...'
          modifiedBy: '...'
          canPublicJoin: true
          modifiedOn: 12345
          name: '...'
          createdOn: 12345
          etag: '...'
          description: '...'
        effectiveSchema: '...'
        totalNumberOfResults: 12345
    json_PaginatedResultsOfTeamMember:
      title: PaginatedResultsOfTeamMember
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_TeamMember'
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - teamId: '...'
          isAdmin: true
          member:
            lastName: '...'
            ownerId: '...'
            firstName: '...'
            userName: '...'
            displayName: '...'
            email: '...'
            isIndividual: true
        - teamId: '...'
          isAdmin: true
          member:
            lastName: '...'
            ownerId: '...'
            firstName: '...'
            userName: '...'
            displayName: '...'
            email: '...'
            isIndividual: true
        effectiveSchema: '...'
    json_PaginatedResultsOfTrashedEntity:
      title: PaginatedResultsOfTrashedEntity
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_TrashedEntity'
      description: ""
      example:
        effectiveSchema: '...'
        totalNumberOfResults: 12345
        results:
        - entityName: '...'
          deletedOn: 12345
          entityId: '...'
          originalParentId: '...'
          deletedByPrincipalId: '...'
        - entityName: '...'
          deletedOn: 12345
          entityId: '...'
          originalParentId: '...'
          deletedByPrincipalId: '...'
    json_PaginatedResultsOfUserGroup:
      title: PaginatedResultsOfUserGroup
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_UserGroup'
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
      description: ""
      example:
        results:
        - id: '...'
          creationDate: 12345
          uri: '...'
          etag: '...'
          isIndividual: true
        - id: '...'
          creationDate: 12345
          uri: '...'
          etag: '...'
          isIndividual: true
        effectiveSchema: '...'
        totalNumberOfResults: 12345
    json_PaginatedResultsOfUserProfile:
      title: PaginatedResultsOfUserProfile
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_UserProfile'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        results:
        - summary: '...'
          preferences:
          - concreteType: '...'
            name: '...'
          - concreteType: '...'
            name: '...'
          profilePicureFileHandleId: '...'
          displayName: '...'
          notificationSettings:
            markEmailedMessagesAsRead: true
            sendEmailNotifications: true
          RStudioUrl: '...'
          openIds:
          - '...'
          - '...'
          email: '...'
          url: '...'
          etag: '...'
          position: '...'
          company: '...'
          teamName: '...'
          location: '...'
          lastName: '...'
          emails:
          - '...'
          - '...'
          userName: '...'
          industry: '...'
          ownerId: '...'
          createdOn: 12345
          firstName: '...'
        - summary: '...'
          preferences:
          - concreteType: '...'
            name: '...'
          - concreteType: '...'
            name: '...'
          profilePicureFileHandleId: '...'
          displayName: '...'
          notificationSettings:
            markEmailedMessagesAsRead: true
            sendEmailNotifications: true
          RStudioUrl: '...'
          openIds:
          - '...'
          - '...'
          email: '...'
          url: '...'
          etag: '...'
          position: '...'
          company: '...'
          teamName: '...'
          location: '...'
          lastName: '...'
          emails:
          - '...'
          - '...'
          userName: '...'
          industry: '...'
          ownerId: '...'
          createdOn: 12345
          firstName: '...'
        totalNumberOfResults: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfV2WikiHeader:
      title: PaginatedResultsOfV2WikiHeader
      type: object
      properties:
        effectiveSchema:
          type: string
          description: ""
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_V2WikiHeader'
      description: ""
      example:
        effectiveSchema: '...'
        totalNumberOfResults: 12345
        results:
        - title: '...'
          id: '...'
          parentId: '...'
        - title: '...'
          id: '...'
          parentId: '...'
    json_PaginatedResultsOfV2WikiHistorySnapshot:
      title: PaginatedResultsOfV2WikiHistorySnapshot
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_V2WikiHistorySnapshot'
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
      description: ""
      example:
        results:
        - modifiedOn: 12345
          version: '...'
          modifiedBy: '...'
        - modifiedOn: 12345
          version: '...'
          modifiedBy: '...'
        totalNumberOfResults: 12345
        effectiveSchema: '...'
    json_PaginatedResultsOfVersionInfo:
      title: PaginatedResultsOfVersionInfo
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_VersionInfo'
      description: ""
      example:
        totalNumberOfResults: 12345
        effectiveSchema: '...'
        results:
        - contentMd5: '...'
          modifiedOn: 12345
          versionLabel: '...'
          modifiedByPrincipalId: '...'
          versionComment: '...'
          contentSize: '...'
          modifiedBy: '...'
          versionNumber: 12345
          id: '...'
        - contentMd5: '...'
          modifiedOn: 12345
          versionLabel: '...'
          modifiedByPrincipalId: '...'
          versionComment: '...'
          contentSize: '...'
          modifiedBy: '...'
          versionNumber: 12345
          id: '...'
    json_PaginatedResultsOfWikiHeader:
      title: PaginatedResultsOfWikiHeader
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: ""
          format: int64
        effectiveSchema:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_WikiHeader'
      description: ""
      example:
        totalNumberOfResults: 12345
        effectiveSchema: '...'
        results:
        - parentId: '...'
          id: '...'
          title: '...'
        - parentId: '...'
          id: '...'
          title: '...'
    json_PaginatedTeamIds:
      title: PaginatedTeamIds
      type: object
      properties:
        teamIds:
          type: array
          description: ""
          items:
            type: string
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        teamIds:
        - '...'
        - '...'
        nextPageToken: '...'
    json_PassingRecord:
      title: PassingRecord
      type: object
      properties:
        quizId:
          type: number
          description: ""
        userId:
          type: string
          description: ""
        passedOn:
          type: number
          description: ""
        passed:
          type: boolean
          description: ""
        score:
          type: number
          description: ""
        responseId:
          type: number
          description: ""
        corrections:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ResponseCorrectness'
      description: ""
      example:
        quizId: 12345
        userId: '...'
        passedOn: 12345
        passed: true
        score: 12345
        responseId: 12345
        corrections:
        - isCorrect: true
          response:
            questionIndex: 12345
            concreteType: '...'
          question:
            prompt: '...'
            concreteType: '...'
            docLink: '...'
            helpText: '...'
            reference: {}
            questionIndex: 12345
        - isCorrect: true
          response:
            questionIndex: 12345
            concreteType: '...'
          question:
            prompt: '...'
            concreteType: '...'
            docLink: '...'
            helpText: '...'
            reference: {}
            questionIndex: 12345
    json_PrincipalAliasRequest:
      title: PrincipalAliasRequest
      type: object
      properties:
        alias:
          type: string
          description: ""
        type:
          $ref: '#/components/schemas/json_AliasType'
      description: ""
      example:
        alias: '...'
        type: USER_NAME
    json_PrincipalAliasResponse:
      title: PrincipalAliasResponse
      type: object
      properties:
        principalId:
          type: number
          description: ""
      description: ""
      example:
        principalId: 12345
    json_ProjectHeader:
      title: ProjectHeader
      type: object
      properties:
        name:
          type: string
          description: ""
        id:
          type: string
          description: ""
        modifiedBy:
          type: number
          description: ""
        lastActivity:
          type: number
          description: ""
        modifiedOn:
          type: number
          description: ""
      description: ""
      example:
        name: '...'
        id: '...'
        modifiedBy: 12345
        lastActivity: 12345
        modifiedOn: 12345
    json_ProjectHeaderList:
      title: ProjectHeaderList
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ProjectHeader'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        results:
        - name: '...'
          id: '...'
          modifiedBy: 12345
          lastActivity: 12345
          modifiedOn: 12345
        - name: '...'
          id: '...'
          modifiedBy: 12345
          lastActivity: 12345
          modifiedOn: 12345
        nextPageToken: '...'
    json_ProjectSetting:
      title: ProjectSetting
      type: object
      properties:
        etag:
          type: string
          description: ""
        settingsType:
          $ref: '#/components/schemas/json_ProjectSettingsType'
        id:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        projectId:
          type: string
          description: ""
      description: ""
      example:
        etag: '...'
        settingsType: certification
        id: '...'
        concreteType: '...'
        projectId: '...'
    json_ProjectSettingsType:
      title: ProjectSettingsType
      type: string
      description: ""
      enum:
      - upload
      - certification
    json_PublishResult:
      title: PublishResult
      type: object
      properties:
        success:
          type: boolean
          description: ""
        changeNumber:
          type: number
          description: ""
      description: ""
      example:
        success: true
        changeNumber: 12345
    json_PublishResults:
      title: PublishResults
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_PublishResult'
      description: ""
      example:
        list:
        - success: true
          changeNumber: 12345
        - success: true
          changeNumber: 12345
    json_Query:
      title: Query
      type: object
      properties:
        limit:
          type: number
          description: ""
        includeEntityEtag:
          type: boolean
          description: ""
        sort:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SortItem'
        offset:
          type: number
          description: ""
        selectedFacets:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FacetColumnRequest'
        sql:
          type: string
          description: ""
        additionalFilters:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_QueryFilter'
      description: ""
      example:
        limit: 12345
        includeEntityEtag: true
        sort:
        - column: '...'
          direction: ASC
        - column: '...'
          direction: DESC
        offset: 12345
        selectedFacets:
        - columnName: '...'
          concreteType: '...'
        - columnName: '...'
          concreteType: '...'
        sql: '...'
        additionalFilters:
        - {}
        - {}
    json_QueryBundleRequest:
      title: QueryBundleRequest
      type: object
      properties:
        entityId:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        partMask:
          type: number
          description: ""
        query:
          $ref: '#/components/schemas/json_Query'
      description: ""
      example:
        entityId: '...'
        concreteType: '...'
        partMask: 12345
        query:
          limit: 12345
          includeEntityEtag: true
          sort:
          - column: '...'
            direction: DESC
          - column: '...'
            direction: ASC
          offset: 12345
          selectedFacets:
          - columnName: '...'
            concreteType: '...'
          - columnName: '...'
            concreteType: '...'
          sql: '...'
          additionalFilters:
          - {}
          - {}
    json_QueryFilter:
      title: QueryFilter
      type: object
      description: ""
      example: {}
    json_QueryNextPageToken:
      title: QueryNextPageToken
      type: object
      properties:
        token:
          type: string
          description: ""
        entityId:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        token: '...'
        entityId: '...'
        concreteType: '...'
    json_QueryResult:
      title: QueryResult
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        queryResults:
          $ref: '#/components/schemas/json_RowSet'
        nextPageToken:
          $ref: '#/components/schemas/json_QueryNextPageToken'
      description: ""
      example:
        concreteType: '...'
        queryResults:
          etag: '...'
          concreteType: '...'
          rows:
          - versionNumber: 12345
            rowId: 12345
            values:
            - '...'
            - '...'
            etag: '...'
          - versionNumber: 12345
            rowId: 12345
            values:
            - '...'
            - '...'
            etag: '...'
          headers:
          - name: '...'
            columnType: BOOLEAN_LIST
            id: '...'
          - name: '...'
            columnType: USERID_LIST
            id: '...'
          tableId: '...'
        nextPageToken:
          token: '...'
          entityId: '...'
          concreteType: '...'
    json_QueryResultBundle:
      title: QueryResultBundle
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        facets:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FacetColumnResult'
        maxRowsPerPage:
          type: number
          description: ""
        queryResult:
          $ref: '#/components/schemas/json_QueryResult'
        queryCount:
          type: number
          description: ""
        columnModels:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ColumnModel'
        selectColumns:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SelectColumn'
        lastUpdatedOn:
          type: number
          description: ""
        sumFileSizes:
          $ref: '#/components/schemas/json_SumFileSizes'
      description: ""
      example:
        concreteType: '...'
        facets:
        - concreteType: '...'
          facetType: enumeration
          columnName: '...'
        - concreteType: '...'
          facetType: enumeration
          columnName: '...'
        maxRowsPerPage: 12345
        queryResult:
          concreteType: '...'
          queryResults:
            etag: '...'
            concreteType: '...'
            rows:
            - {}
            - {}
            headers:
            - {}
            - {}
            tableId: '...'
          nextPageToken:
            token: '...'
            entityId: '...'
            concreteType: '...'
        queryCount: 12345
        columnModels:
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: DATE_LIST
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: enumeration
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: DOUBLE
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
        selectColumns:
        - name: '...'
          columnType: USERID_LIST
          id: '...'
        - name: '...'
          columnType: EVALUATIONID
          id: '...'
        lastUpdatedOn: 12345
        sumFileSizes:
          greaterThan: true
          sumFileSizesBytes: 12345
    json_QueryTableResults:
      title: QueryTableResults
      type: object
      properties:
        totalNumberOfResults:
          type: number
          description: ""
        headers:
          type: array
          description: ""
          items:
            type: string
        rows:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Row'
      description: ""
      example:
        totalNumberOfResults: 12345
        headers:
        - '...'
        - '...'
        rows:
        - values:
          - '...'
          - '...'
        - values:
          - '...'
          - '...'
    json_Question:
      title: Question
      type: object
      properties:
        prompt:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        docLink:
          type: string
          description: ""
        helpText:
          type: string
          description: ""
        reference:
          $ref: '#/components/schemas/json_WikiPageKey'
        questionIndex:
          type: number
          description: ""
      description: ""
      example:
        prompt: '...'
        concreteType: '...'
        docLink: '...'
        helpText: '...'
        reference:
          wikiPageId: '...'
          ownerObjectId: '...'
          ownerObjectType: MESSAGE
        questionIndex: 12345
    json_QuestionResponse:
      title: QuestionResponse
      type: object
      properties:
        questionIndex:
          type: number
          description: ""
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        questionIndex: 12345
        concreteType: '...'
    json_Quiz:
      title: Quiz
      type: object
      properties:
        questions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Question'
        id:
          type: number
          description: ""
        header:
          type: string
          description: ""
      description: ""
      example:
        questions:
        - prompt: '...'
          concreteType: '...'
          docLink: '...'
          helpText: '...'
          reference:
            wikiPageId: '...'
            ownerObjectId: '...'
            ownerObjectType: DATA_ACCESS_REQUEST
          questionIndex: 12345
        - prompt: '...'
          concreteType: '...'
          docLink: '...'
          helpText: '...'
          reference:
            wikiPageId: '...'
            ownerObjectId: '...'
            ownerObjectType: EVALUATION
          questionIndex: 12345
        id: 12345
        header: '...'
    json_QuizResponse:
      title: QuizResponse
      type: object
      properties:
        quizId:
          type: number
          description: ""
        createdBy:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        questionResponses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_QuestionResponse'
        id:
          type: number
          description: ""
      description: ""
      example:
        quizId: 12345
        createdBy: '...'
        createdOn: 12345
        questionResponses:
        - questionIndex: 12345
          concreteType: '...'
        - questionIndex: 12345
          concreteType: '...'
        id: 12345
    json_Reference:
      title: Reference
      type: object
      properties:
        targetId:
          type: string
          description: ""
        targetVersionNumber:
          type: number
          description: ""
      description: ""
      example:
        targetId: '...'
        targetVersionNumber: 12345
    json_ReferenceList:
      title: ReferenceList
      type: object
      properties:
        references:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Reference'
      description: ""
      example:
        references:
        - targetId: '...'
          targetVersionNumber: 12345
        - targetId: '...'
          targetVersionNumber: 12345
    json_RegistryEventAction:
      title: RegistryEventAction
      type: string
      description: ""
      enum:
      - push
      - pull
      - mount
    json_RegistryEventActor:
      title: RegistryEventActor
      type: object
      properties:
        name:
          type: string
          description: ""
      description: ""
      example:
        name: '...'
    json_RegistryEventRequest:
      title: RegistryEventRequest
      type: object
      properties:
        addr:
          type: string
          description: ""
        useragent:
          type: string
          description: ""
        host:
          type: string
          description: ""
        id:
          type: string
          description: ""
        method:
          type: string
          description: ""
      description: ""
      example:
        addr: '...'
        useragent: '...'
        host: '...'
        id: '...'
        method: '...'
    json_RegistryEventSource:
      title: RegistryEventSource
      type: object
      properties:
        addr:
          type: string
          description: ""
        instanceID:
          type: string
          description: ""
      description: ""
      example:
        addr: '...'
        instanceID: '...'
    json_RegistryEventTarget:
      title: RegistryEventTarget
      type: object
      properties:
        size:
          type: number
          description: ""
        mediaType:
          type: string
          description: ""
        repository:
          type: string
          description: ""
        url:
          type: string
          description: ""
        digest:
          type: string
          description: ""
        length:
          type: number
          description: ""
        tag:
          type: string
          description: ""
      description: ""
      example:
        size: 12345
        mediaType: '...'
        repository: '...'
        url: '...'
        digest: '...'
        length: 12345
        tag: '...'
    json_ReplyCount:
      title: ReplyCount
      type: object
      properties:
        count:
          type: number
          description: ""
      description: ""
      example:
        count: 12345
    json_RequestInterface:
      title: RequestInterface
      type: object
      properties:
        id:
          type: string
          description: ""
        ducFileHandleId:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        irbFileHandleId:
          type: string
          description: ""
        attachments:
          type: array
          description: ""
          items:
            type: string
        createdOn:
          type: number
          description: ""
        accessRequirementId:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        accessorChanges:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessorChange'
        etag:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        researchProjectId:
          type: string
          description: ""
      description: ""
      example:
        id: '...'
        ducFileHandleId: '...'
        modifiedOn: 12345
        irbFileHandleId: '...'
        attachments:
        - '...'
        - '...'
        createdOn: 12345
        accessRequirementId: '...'
        modifiedBy: '...'
        createdBy: '...'
        accessorChanges:
        - userId: '...'
          type: RENEW_ACCESS
        - userId: '...'
          type: RENEW_ACCESS
        etag: '...'
        concreteType: '...'
        researchProjectId: '...'
    json_ResearchProject:
      title: ResearchProject
      type: object
      properties:
        createdOn:
          type: number
          description: ""
        modifiedBy:
          type: string
          description: ""
        projectLead:
          type: string
          description: ""
        id:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        institution:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        etag:
          type: string
          description: ""
        accessRequirementId:
          type: string
          description: ""
        intendedDataUseStatement:
          type: string
          description: ""
      description: ""
      example:
        createdOn: 12345
        modifiedBy: '...'
        projectLead: '...'
        id: '...'
        createdBy: '...'
        institution: '...'
        modifiedOn: 12345
        etag: '...'
        accessRequirementId: '...'
        intendedDataUseStatement: '...'
    json_ResourceAccess:
      title: ResourceAccess
      type: object
      properties:
        principalId:
          type: number
          description: ""
        accessType:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ACCESS_TYPE'
      description: ""
      example:
        principalId: 12345
        accessType:
        - UPDATE
        - DELETE_SUBMISSION
    json_ResponseCorrectness:
      title: ResponseCorrectness
      type: object
      properties:
        isCorrect:
          type: boolean
          description: ""
        response:
          $ref: '#/components/schemas/json_QuestionResponse'
        question:
          $ref: '#/components/schemas/json_Question'
      description: ""
      example:
        isCorrect: true
        response:
          questionIndex: 12345
          concreteType: '...'
        question:
          prompt: '...'
          concreteType: '...'
          docLink: '...'
          helpText: '...'
          reference:
            wikiPageId: '...'
            ownerObjectId: '...'
            ownerObjectType: WIKI
          questionIndex: 12345
    json_ResponseMessage:
      title: ResponseMessage
      type: object
      properties:
        message:
          type: string
          description: ""
      description: ""
      example:
        message: '...'
    json_RestResourceList:
      title: RestResourceList
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        list:
        - '...'
        - '...'
    json_RestrictableObjectDescriptor:
      title: RestrictableObjectDescriptor
      type: object
      properties:
        type:
          $ref: '#/components/schemas/json_RestrictableObjectType'
        id:
          type: string
          description: ""
      description: ""
      example:
        type: EVALUATION
        id: '...'
    json_RestrictableObjectDescriptorResponse:
      title: RestrictableObjectDescriptorResponse
      type: object
      properties:
        subjects:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_RestrictableObjectDescriptor'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        subjects:
        - type: TEAM
          id: '...'
        - type: EVALUATION
          id: '...'
        nextPageToken: '...'
    json_RestrictableObjectType:
      title: RestrictableObjectType
      type: string
      description: ""
      enum:
      - ENTITY
      - EVALUATION
      - TEAM
    json_RestrictionInformationRequest:
      title: RestrictionInformationRequest
      type: object
      properties:
        objectId:
          type: string
          description: ""
        restrictableObjectType:
          $ref: '#/components/schemas/json_RestrictableObjectType'
      description: ""
      example:
        objectId: '...'
        restrictableObjectType: ENTITY
    json_RestrictionInformationResponse:
      title: RestrictionInformationResponse
      type: object
      properties:
        hasUnmetAccessRequirement:
          type: boolean
          description: ""
        restrictionLevel:
          $ref: '#/components/schemas/json_RestrictionLevel'
      description: ""
      example:
        hasUnmetAccessRequirement: true
        restrictionLevel: CONTROLLED_BY_ACT
    json_RestrictionLevel:
      title: RestrictionLevel
      type: string
      description: ""
      enum:
      - OPEN
      - RESTRICTED_BY_TERMS_OF_USE
      - CONTROLLED_BY_ACT
    json_Row_table:
      title: Row
      type: object
      properties:
        versionNumber:
          type: number
          description: ""
        rowId:
          type: number
          description: ""
        values:
          type: array
          description: ""
          items:
            type: string
        etag:
          type: string
          description: ""
      description: ""
      example:
        versionNumber: 12345
        rowId: 12345
        values:
        - '...'
        - '...'
        etag: '...'
    json_Row:
      title: Row
      type: object
      properties:
        values:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        values:
        - '...'
        - '...'
    json_RowReference:
      title: RowReference
      type: object
      properties:
        rowId:
          type: number
          description: ""
        versionNumber:
          type: number
          description: ""
      description: ""
      example:
        rowId: 12345
        versionNumber: 12345
    json_RowReferenceSet:
      title: RowReferenceSet
      type: object
      properties:
        etag:
          type: string
          description: ""
        tableId:
          type: string
          description: ""
        rows:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_RowReference'
        headers:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SelectColumn'
      description: ""
      example:
        etag: '...'
        tableId: '...'
        rows:
        - rowId: 12345
          versionNumber: 12345
        - rowId: 12345
          versionNumber: 12345
        headers:
        - name: '...'
          columnType: DATE
          id: '...'
        - name: '...'
          columnType: USERID
          id: '...'
    json_RowReferenceSetResults:
      title: RowReferenceSetResults
      type: object
      properties:
        rowReferenceSet:
          $ref: '#/components/schemas/json_RowReferenceSet'
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        rowReferenceSet:
          etag: '...'
          tableId: '...'
          rows:
          - rowId: 12345
            versionNumber: 12345
          - rowId: 12345
            versionNumber: 12345
          headers:
          - name: '...'
            columnType: BOOLEAN
            id: '...'
          - name: '...'
            columnType: FILEHANDLEID
            id: '...'
        concreteType: '...'
    json_RowSelection:
      title: RowSelection
      type: object
      properties:
        rowIds:
          type: array
          description: ""
          items:
            type: number
        etag:
          type: string
          description: ""
        tableId:
          type: string
          description: ""
      description: ""
      example:
        rowIds:
        - 12345
        - 12345
        etag: '...'
        tableId: '...'
    json_RowSet:
      title: RowSet
      type: object
      properties:
        etag:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        rows:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Row_table'
        headers:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SelectColumn'
        tableId:
          type: string
          description: ""
      description: ""
      example:
        etag: '...'
        concreteType: '...'
        rows:
        - versionNumber: 12345
          rowId: 12345
          values:
          - '...'
          - '...'
          etag: '...'
        - versionNumber: 12345
          rowId: 12345
          values:
          - '...'
          - '...'
          etag: '...'
        headers:
        - name: '...'
          columnType: FILEHANDLEID
          id: '...'
        - name: '...'
          columnType: SUBMISSIONID
          id: '...'
        tableId: '...'
    json_SearchFacetOption:
      title: SearchFacetOption
      type: object
      properties:
        maxResultCount:
          type: number
          description: ""
        name:
          $ref: '#/components/schemas/json_SearchFieldName'
        sortType:
          $ref: '#/components/schemas/json_SearchFacetSort'
      description: ""
      example:
        maxResultCount: 12345
        name: Consortium
        sortType: COUNT
    json_SearchFacetSort:
      title: SearchFacetSort
      type: string
      description: ""
      enum:
      - ALPHA
      - COUNT
    json_SearchFieldName:
      title: SearchFieldName
      type: string
      description: ""
      enum:
      - Id
      - Name
      - Description
      - EntityType
      - ModifiedBy
      - ModifiedOn
      - CreatedBy
      - CreatedOn
      - Consortium
      - Diagnosis
      - Organ
      - Tissue
    json_SearchQuery:
      title: SearchQuery
      type: object
      properties:
        returnFields:
          type: array
          description: ""
          items:
            type: string
        size:
          type: number
          description: ""
        queryTerm:
          type: array
          description: ""
          items:
            type: string
        rangeQuery:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_KeyRange'
        booleanQuery:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_KeyValue'
        start:
          type: number
          description: ""
        facetOptions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SearchFacetOption'
      description: ""
      example:
        returnFields:
        - '...'
        - '...'
        size: 12345
        queryTerm:
        - '...'
        - '...'
        rangeQuery:
        - min: '...'
          key: '...'
          max: '...'
        - min: '...'
          key: '...'
          max: '...'
        booleanQuery:
        - not: true
          value: '...'
          key: '...'
        - not: true
          value: '...'
          key: '...'
        start: 12345
        facetOptions:
        - maxResultCount: 12345
          name: Id
          sortType: COUNT
        - maxResultCount: 12345
          name: CreatedBy
          sortType: COUNT
    json_SearchResults:
      title: SearchResults
      type: object
      properties:
        matchExpression:
          type: string
          description: ""
        found:
          type: number
          description: ""
        facets:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Facet'
        start:
          type: number
          description: ""
        hits:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Hit'
      description: ""
      example:
        matchExpression: '...'
        found: 12345
        facets:
        - type: LITERAL
          max: 12345
          constraints:
          - count: 12345
            value: '...'
          - count: 12345
            value: '...'
          min: 12345
          name: '...'
        - type: DATE
          max: 12345
          constraints:
          - count: 12345
            value: '...'
          - count: 12345
            value: '...'
          min: 12345
          name: '...'
        start: 12345
        hits:
        - description: '...'
          consortium: '...'
          created_on: 12345
          name: '...'
          id: '...'
          tissue: '...'
          modified_on: 12345
          etag: '...'
          alias: '...'
          modified_by: '...'
          path:
            path:
            - {}
            - {}
          diagnosis: '...'
          created_by: '...'
          organ: '...'
          node_type: '...'
        - description: '...'
          consortium: '...'
          created_on: 12345
          name: '...'
          id: '...'
          tissue: '...'
          modified_on: 12345
          etag: '...'
          alias: '...'
          modified_by: '...'
          path:
            path:
            - {}
            - {}
          diagnosis: '...'
          created_by: '...'
          organ: '...'
          node_type: '...'
    json_SelectColumn:
      title: SelectColumn
      type: object
      properties:
        name:
          type: string
          description: ""
        columnType:
          $ref: '#/components/schemas/json_ColumnType'
        id:
          type: string
          description: ""
      description: ""
      example:
        name: '...'
        columnType: BOOLEAN
        id: '...'
    json_Session:
      title: Session
      type: object
      properties:
        sessionToken:
          type: string
          description: ""
        acceptsTermsOfUse:
          type: boolean
          description: ""
      description: ""
      example:
        sessionToken: '...'
        acceptsTermsOfUse: true
    json_Settings:
      title: Settings
      type: object
      properties:
        markEmailedMessagesAsRead:
          type: boolean
          description: ""
        sendEmailNotifications:
          type: boolean
          description: ""
      description: ""
      example:
        markEmailedMessagesAsRead: true
        sendEmailNotifications: true
    json_SnapshotRequest:
      title: SnapshotRequest
      type: object
      properties:
        snapshotComment:
          type: string
          description: ""
        snapshotLabel:
          type: string
          description: ""
        snapshotActivityId:
          type: string
          description: ""
      description: ""
      example:
        snapshotComment: '...'
        snapshotLabel: '...'
        snapshotActivityId: '...'
    json_SnapshotResponse:
      title: SnapshotResponse
      type: object
      properties:
        snapshotVersionNumber:
          type: number
          description: ""
      description: ""
      example:
        snapshotVersionNumber: 12345
    json_SortBy:
      title: SortBy
      type: string
      description: ""
      enum:
      - NAME
      - CREATED_ON
      - MODIFIED_ON
    json_SortByType:
      title: SortByType
      type: string
      description: ""
      enum:
      - SUBSCRIPTION_ID
      - SUBSCRIBER_ID
      - OBJECT_ID
      - OBJECT_TYPE
      - CREATED_ON
    json_SortDirection:
      title: SortDirection
      type: string
      description: ""
      enum:
      - ASC
      - DESC
    json_SortDirection_subscription:
      title: SortDirection
      type: string
      description: ""
      enum:
      - ASC
      - DESC
    json_SortItem:
      title: SortItem
      type: object
      properties:
        column:
          type: string
          description: ""
        direction:
          $ref: '#/components/schemas/json_SortDirection'
      description: ""
      example:
        column: '...'
        direction: ASC
    json_SqlTransformRequest:
      title: SqlTransformRequest
      type: object
      properties:
        sqlToTransform:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        sqlToTransform: '...'
        concreteType: '...'
    json_SqlTransformResponse:
      title: SqlTransformResponse
      type: object
      properties:
        transformedSql:
          type: string
          description: ""
      description: ""
      example:
        transformedSql: '...'
    json_StackStatus:
      title: StackStatus
      type: object
      properties:
        pendingMaintenanceMessage:
          type: string
          description: ""
        currentMessage:
          type: string
          description: ""
        status:
          $ref: '#/components/schemas/json_StatusEnum'
      description: ""
      example:
        pendingMaintenanceMessage: '...'
        currentMessage: '...'
        status: READ_ONLY
    json_StateEnum:
      title: StateEnum
      type: string
      description: ""
      enum:
      - WAITING_FOR_SUBMISSION
      - SUBMITTED_WAITING_FOR_REVIEW
      - ACCEPTED
      - REJECTED
    json_StatusEnum:
      title: StatusEnum
      type: string
      description: ""
      enum:
      - READ_WRITE
      - READ_ONLY
      - DOWN
    json_StorageLocationSetting:
      title: StorageLocationSetting
      type: object
      properties:
        banner:
          type: string
          description: ""
        uploadType:
          $ref: '#/components/schemas/json_UploadType'
        concreteType:
          type: string
          description: ""
        storageLocationId:
          type: number
          description: ""
        createdOn:
          type: number
          description: ""
        createdBy:
          type: number
          description: ""
        description:
          type: string
          description: ""
        etag:
          type: string
          description: ""
      description: ""
      example:
        banner: '...'
        uploadType: S3
        concreteType: '...'
        storageLocationId: 12345
        createdOn: 12345
        createdBy: 12345
        description: '...'
        etag: '...'
    json_StorageReportType:
      title: StorageReportType
      type: string
      description: ""
      enum:
      - ALL_PROJECTS
    json_StringAnnotation:
      title: StringAnnotation
      type: object
      properties:
        key:
          type: string
          description: ""
        value:
          type: string
          description: ""
        isPrivate:
          type: boolean
          description: ""
      description: ""
      example:
        key: '...'
        value: '...'
        isPrivate: true
    json_StsCredentials:
      title: StsCredentials
      type: object
      properties:
        expiration:
          type: number
          description: ""
        sessionToken:
          type: string
          description: ""
        baseKey:
          type: string
          description: ""
        accessKeyId:
          type: string
          description: ""
        secretAccessKey:
          type: string
          description: ""
        bucket:
          type: string
          description: ""
      description: ""
      example:
        expiration: 12345
        sessionToken: '...'
        baseKey: '...'
        accessKeyId: '...'
        secretAccessKey: '...'
        bucket: '...'
    json_Submission:
      title: Submission
      type: object
      properties:
        researchProjectSnapshot:
          $ref: '#/components/schemas/json_ResearchProject'
        rejectedReason:
          type: string
          description: ""
        requestId:
          type: string
          description: ""
        ducFileHandleId:
          type: string
          description: ""
        submittedBy:
          type: string
          description: ""
        irbFileHandleId:
          type: string
          description: ""
        submittedOn:
          type: number
          description: ""
        attachments:
          type: array
          description: ""
          items:
            type: string
        accessRequirementId:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        accessRequirementVersion:
          type: number
          description: ""
        state:
          $ref: '#/components/schemas/json_SubmissionState'
        isRenewalSubmission:
          type: boolean
          description: ""
        accessorChanges:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AccessorChange'
        subjectType:
          $ref: '#/components/schemas/json_RestrictableObjectType'
        subjectId:
          type: string
          description: ""
        summaryOfUse:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        publication:
          type: string
          description: ""
        id:
          type: string
          description: ""
      description: ""
      example:
        researchProjectSnapshot:
          createdOn: 12345
          modifiedBy: '...'
          projectLead: '...'
          id: '...'
          createdBy: '...'
          institution: '...'
          modifiedOn: 12345
          etag: '...'
          accessRequirementId: '...'
          intendedDataUseStatement: '...'
        rejectedReason: '...'
        requestId: '...'
        ducFileHandleId: '...'
        submittedBy: '...'
        irbFileHandleId: '...'
        submittedOn: 12345
        attachments:
        - '...'
        - '...'
        accessRequirementId: '...'
        etag: '...'
        modifiedOn: 12345
        accessRequirementVersion: 12345
        state: SUBMITTED
        isRenewalSubmission: true
        accessorChanges:
        - userId: '...'
          type: REVOKE_ACCESS
        - userId: '...'
          type: REVOKE_ACCESS
        subjectType: TEAM
        subjectId: '...'
        summaryOfUse: '...'
        modifiedBy: '...'
        publication: '...'
        id: '...'
    json_Submission_model:
      title: Submission
      type: object
      properties:
        dockerDigest:
          type: string
          description: ""
        teamId:
          type: string
          description: ""
        name:
          type: string
          description: ""
        contributors:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SubmissionContributor'
        versionNumber:
          type: number
          description: ""
        entityId:
          type: string
          description: ""
        submitterAlias:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        id:
          type: string
          description: ""
        entityBundleJSON:
          type: string
          description: ""
        userId:
          type: string
          description: ""
        dockerRepositoryName:
          type: string
          description: ""
        evaluationRoundId:
          type: string
          description: ""
        evaluationId:
          type: string
          description: ""
      description: ""
      example:
        dockerDigest: '...'
        teamId: '...'
        name: '...'
        contributors:
        - createdOn: 12345
          principalId: '...'
        - createdOn: 12345
          principalId: '...'
        versionNumber: 12345
        entityId: '...'
        submitterAlias: '...'
        createdOn: 12345
        id: '...'
        entityBundleJSON: '...'
        userId: '...'
        dockerRepositoryName: '...'
        evaluationRoundId: '...'
        evaluationId: '...'
    json_SubmissionBundle:
      title: SubmissionBundle
      type: object
      properties:
        submissionStatus:
          $ref: '#/components/schemas/json_SubmissionStatus_model'
        submission:
          $ref: '#/components/schemas/json_Submission_model'
      description: ""
      example:
        submissionStatus:
          cancelRequested: true
          submissionAnnotations:
            annotations:
              property1: {}
              property2: {}
            id: '...'
            etag: '...'
          canCancel: true
          report: '...'
          modifiedOn: 12345
          score: 12345
          versionNumber: 12345
          annotations:
            objectId: '...'
            doubleAnnos:
            - {}
            - {}
            scopeId: '...'
            version: 12345
            stringAnnos:
            - {}
            - {}
            longAnnos:
            - {}
            - {}
          id: '...'
          etag: '...'
          status: RECEIVED
          entityId: '...'
          statusVersion: 12345
        submission:
          dockerDigest: '...'
          teamId: '...'
          name: '...'
          contributors:
          - createdOn: 12345
            principalId: '...'
          - createdOn: 12345
            principalId: '...'
          versionNumber: 12345
          entityId: '...'
          submitterAlias: '...'
          createdOn: 12345
          id: '...'
          entityBundleJSON: '...'
          userId: '...'
          dockerRepositoryName: '...'
          evaluationRoundId: '...'
          evaluationId: '...'
    json_SubmissionContributor:
      title: SubmissionContributor
      type: object
      properties:
        createdOn:
          type: number
          description: ""
        principalId:
          type: string
          description: ""
      description: ""
      example:
        createdOn: 12345
        principalId: '...'
    json_SubmissionEligibility:
      title: SubmissionEligibility
      type: object
      properties:
        isQuotaFilled:
          type: boolean
          description: ""
        isEligible:
          type: boolean
          description: ""
        isRegistered:
          type: boolean
          description: ""
      description: ""
      example:
        isQuotaFilled: true
        isEligible: true
        isRegistered: true
    json_SubmissionInfo:
      title: SubmissionInfo
      type: object
      properties:
        modifiedOn:
          type: number
          description: ""
        institution:
          type: string
          description: ""
        intendedDataUseStatement:
          type: string
          description: ""
        projectLead:
          type: string
          description: ""
      description: ""
      example:
        modifiedOn: 12345
        institution: '...'
        intendedDataUseStatement: '...'
        projectLead: '...'
    json_SubmissionInfoPage:
      title: SubmissionInfoPage
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SubmissionInfo'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        results:
        - modifiedOn: 12345
          institution: '...'
          intendedDataUseStatement: '...'
          projectLead: '...'
        - modifiedOn: 12345
          institution: '...'
          intendedDataUseStatement: '...'
          projectLead: '...'
        nextPageToken: '...'
    json_SubmissionInfoPageRequest:
      title: SubmissionInfoPageRequest
      type: object
      properties:
        accessRequirementId:
          type: string
          description: ""
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        accessRequirementId: '...'
        nextPageToken: '...'
    json_SubmissionOrder:
      title: SubmissionOrder
      type: string
      description: ""
      enum:
      - CREATED_ON
      - MODIFIED_ON
    json_SubmissionPage:
      title: SubmissionPage
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Submission'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        results:
        - researchProjectSnapshot:
            createdOn: 12345
            modifiedBy: '...'
            projectLead: '...'
            id: '...'
            createdBy: '...'
            institution: '...'
            modifiedOn: 12345
            etag: '...'
            accessRequirementId: '...'
            intendedDataUseStatement: '...'
          rejectedReason: '...'
          requestId: '...'
          ducFileHandleId: '...'
          submittedBy: '...'
          irbFileHandleId: '...'
          submittedOn: 12345
          attachments:
          - '...'
          - '...'
          accessRequirementId: '...'
          etag: '...'
          modifiedOn: 12345
          accessRequirementVersion: 12345
          state: REJECTED
          isRenewalSubmission: true
          accessorChanges:
          - userId: '...'
            type: GAIN_ACCESS
          - userId: '...'
            type: REVOKE_ACCESS
          subjectType: EVALUATION
          subjectId: '...'
          summaryOfUse: '...'
          modifiedBy: '...'
          publication: '...'
          id: '...'
        - researchProjectSnapshot:
            createdOn: 12345
            modifiedBy: '...'
            projectLead: '...'
            id: '...'
            createdBy: '...'
            institution: '...'
            modifiedOn: 12345
            etag: '...'
            accessRequirementId: '...'
            intendedDataUseStatement: '...'
          rejectedReason: '...'
          requestId: '...'
          ducFileHandleId: '...'
          submittedBy: '...'
          irbFileHandleId: '...'
          submittedOn: 12345
          attachments:
          - '...'
          - '...'
          accessRequirementId: '...'
          etag: '...'
          modifiedOn: 12345
          accessRequirementVersion: 12345
          state: APPROVED
          isRenewalSubmission: true
          accessorChanges:
          - userId: '...'
            type: GAIN_ACCESS
          - userId: '...'
            type: RENEW_ACCESS
          subjectType: ENTITY
          subjectId: '...'
          summaryOfUse: '...'
          modifiedBy: '...'
          publication: '...'
          id: '...'
        nextPageToken: '...'
    json_SubmissionPageRequest:
      title: SubmissionPageRequest
      type: object
      properties:
        isAscending:
          type: boolean
          description: ""
        nextPageToken:
          type: string
          description: ""
        orderBy:
          $ref: '#/components/schemas/json_SubmissionOrder'
        accessRequirementId:
          type: string
          description: ""
        filterBy:
          $ref: '#/components/schemas/json_SubmissionState'
      description: ""
      example:
        isAscending: true
        nextPageToken: '...'
        orderBy: MODIFIED_ON
        accessRequirementId: '...'
        filterBy: APPROVED
    json_SubmissionQuota:
      title: SubmissionQuota
      type: object
      properties:
        roundDurationMillis:
          type: number
          description: ""
        numberOfRounds:
          type: number
          description: ""
        submissionLimit:
          type: number
          description: ""
        firstRoundStart:
          type: number
          description: ""
      description: ""
      example:
        roundDurationMillis: 12345
        numberOfRounds: 12345
        submissionLimit: 12345
        firstRoundStart: 12345
    json_SubmissionState:
      title: SubmissionState
      type: string
      description: ""
      enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
      - CANCELLED
    json_SubmissionStateChangeRequest:
      title: SubmissionStateChangeRequest
      type: object
      properties:
        rejectedReason:
          type: string
          description: ""
        submissionId:
          type: string
          description: ""
        newState:
          $ref: '#/components/schemas/json_SubmissionState'
      description: ""
      example:
        rejectedReason: '...'
        submissionId: '...'
        newState: APPROVED
    json_SubmissionStatus_model:
      title: SubmissionStatus
      type: object
      properties:
        cancelRequested:
          type: boolean
          description: ""
        submissionAnnotations:
          $ref: '#/components/schemas/json_Annotations_v2'
        canCancel:
          type: boolean
          description: ""
        report:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        score:
          type: number
          description: ""
        versionNumber:
          type: number
          description: ""
        annotations:
          $ref: '#/components/schemas/json_Annotations_annotation'
        id:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        status:
          $ref: '#/components/schemas/json_SubmissionStatusEnum'
        entityId:
          type: string
          description: ""
        statusVersion:
          type: number
          description: ""
      description: ""
      example:
        cancelRequested: true
        submissionAnnotations:
          annotations:
            property1:
              value:
              - '...'
              - '...'
              type: TIMESTAMP_MS
            property2:
              value:
              - '...'
              - '...'
              type: TIMESTAMP_MS
          id: '...'
          etag: '...'
        canCancel: true
        report: '...'
        modifiedOn: 12345
        score: 12345
        versionNumber: 12345
        annotations:
          objectId: '...'
          doubleAnnos:
          - key: '...'
            isPrivate: true
            value: 12345
          - key: '...'
            isPrivate: true
            value: 12345
          scopeId: '...'
          version: 12345
          stringAnnos:
          - key: '...'
            value: '...'
            isPrivate: true
          - key: '...'
            value: '...'
            isPrivate: true
          longAnnos:
          - value: 12345
            key: '...'
            isPrivate: true
          - value: 12345
            key: '...'
            isPrivate: true
        id: '...'
        etag: '...'
        status: ACCEPTED
        entityId: '...'
        statusVersion: 12345
    json_SubmissionStatus_form:
      title: SubmissionStatus
      type: object
      properties:
        state:
          $ref: '#/components/schemas/json_StateEnum'
        submittedOn:
          type: number
          description: ""
        reviewedOn:
          type: number
          description: ""
        reviewedBy:
          type: string
          description: ""
        rejectionMessage:
          type: string
          description: ""
      description: ""
      example:
        state: WAITING_FOR_SUBMISSION
        submittedOn: 12345
        reviewedOn: 12345
        reviewedBy: '...'
        rejectionMessage: '...'
    json_SubmissionStatus:
      title: SubmissionStatus
      type: object
      properties:
        submissionId:
          type: string
          description: ""
        state:
          $ref: '#/components/schemas/json_SubmissionState'
        rejectedReason:
          type: string
          description: ""
        submittedBy:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
      description: ""
      example:
        submissionId: '...'
        state: SUBMITTED
        rejectedReason: '...'
        submittedBy: '...'
        modifiedOn: 12345
    json_SubmissionStatusBatch:
      title: SubmissionStatusBatch
      type: object
      properties:
        batchToken:
          type: string
          description: ""
        isLastBatch:
          type: boolean
          description: ""
        statuses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SubmissionStatus_model'
        isFirstBatch:
          type: boolean
          description: ""
      description: ""
      example:
        batchToken: '...'
        isLastBatch: true
        statuses:
        - cancelRequested: true
          submissionAnnotations:
            annotations:
              property1: {}
              property2: {}
            id: '...'
            etag: '...'
          canCancel: true
          report: '...'
          modifiedOn: 12345
          score: 12345
          versionNumber: 12345
          annotations:
            objectId: '...'
            doubleAnnos:
            - {}
            - {}
            scopeId: '...'
            version: 12345
            stringAnnos:
            - {}
            - {}
            longAnnos:
            - {}
            - {}
          id: '...'
          etag: '...'
          status: RECEIVED
          entityId: '...'
          statusVersion: 12345
        - cancelRequested: true
          submissionAnnotations:
            annotations:
              property1: {}
              property2: {}
            id: '...'
            etag: '...'
          canCancel: true
          report: '...'
          modifiedOn: 12345
          score: 12345
          versionNumber: 12345
          annotations:
            objectId: '...'
            doubleAnnos:
            - {}
            - {}
            scopeId: '...'
            version: 12345
            stringAnnos:
            - {}
            - {}
            longAnnos:
            - {}
            - {}
          id: '...'
          etag: '...'
          status: CLOSED
          entityId: '...'
          statusVersion: 12345
        isFirstBatch: true
    json_SubmissionStatusEnum:
      title: SubmissionStatusEnum
      type: string
      description: ""
      enum:
      - OPEN
      - CLOSED
      - SCORED
      - INVALID
      - VALIDATED
      - EVALUATION_IN_PROGRESS
      - RECEIVED
      - REJECTED
      - ACCEPTED
    json_SubscriberCount:
      title: SubscriberCount
      type: object
      properties:
        count:
          type: number
          description: ""
      description: ""
      example:
        count: 12345
    json_SubscriberPagedResults:
      title: SubscriberPagedResults
      type: object
      properties:
        nextPageToken:
          type: string
          description: ""
        subscribers:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        nextPageToken: '...'
        subscribers:
        - '...'
        - '...'
    json_Subscription:
      title: Subscription
      type: object
      properties:
        createdOn:
          type: number
          description: ""
        objectId:
          type: string
          description: ""
        objectType:
          $ref: '#/components/schemas/json_SubscriptionObjectType'
        subscriberId:
          type: string
          description: ""
        subscriptionId:
          type: string
          description: ""
      description: ""
      example:
        createdOn: 12345
        objectId: '...'
        objectType: THREAD
        subscriberId: '...'
        subscriptionId: '...'
    json_SubscriptionObjectType:
      title: SubscriptionObjectType
      type: string
      description: ""
      enum:
      - FORUM
      - THREAD
      - DATA_ACCESS_SUBMISSION
      - DATA_ACCESS_SUBMISSION_STATUS
    json_SubscriptionPagedResults:
      title: SubscriptionPagedResults
      type: object
      properties:
        totalNumberOfResults:
          type: number
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Subscription'
      description: ""
      example:
        totalNumberOfResults: 12345
        results:
        - createdOn: 12345
          objectId: '...'
          objectType: DATA_ACCESS_SUBMISSION
          subscriberId: '...'
          subscriptionId: '...'
        - createdOn: 12345
          objectId: '...'
          objectType: DATA_ACCESS_SUBMISSION_STATUS
          subscriberId: '...'
          subscriptionId: '...'
    json_SubscriptionRequest:
      title: SubscriptionRequest
      type: object
      properties:
        sortDirection:
          $ref: '#/components/schemas/json_SortDirection_subscription'
        sortByType:
          $ref: '#/components/schemas/json_SortByType'
        objectType:
          $ref: '#/components/schemas/json_SubscriptionObjectType'
        idList:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        sortDirection: ASC
        sortByType: OBJECT_TYPE
        objectType: DATA_ACCESS_SUBMISSION
        idList:
        - '...'
        - '...'
    json_SumFileSizes:
      title: SumFileSizes
      type: object
      properties:
        greaterThan:
          type: boolean
          description: ""
        sumFileSizesBytes:
          type: number
          description: ""
      description: ""
      example:
        greaterThan: true
        sumFileSizesBytes: 12345
    json_SynapseVersionInfo:
      title: SynapseVersionInfo
      type: object
      properties:
        stackInstance:
          type: string
          description: ""
        version:
          type: string
          description: ""
      description: ""
      example:
        stackInstance: '...'
        version: '...'
    json_TYPE:
      title: TYPE
      type: string
      description: ""
      enum:
      - STRING
      - NUMBER
      - INTEGER
      - BOOLEAN
      - OBJECT
      - ARRAY
      - TUPLE_ARRAY_MAP
      - MAP
      - NULL
      - ANY
      - INTERFACE
    json_TableBundle:
      title: TableBundle
      type: object
      properties:
        maxRowsPerPage:
          type: number
          description: ""
        columnModels:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ColumnModel'
      description: ""
      example:
        maxRowsPerPage: 12345
        columnModels:
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: EVALUATIONID
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: enumeration
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: STRING
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
    json_TableFileHandleResults:
      title: TableFileHandleResults
      type: object
      properties:
        tableId:
          type: string
          description: ""
        rows:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_FileHandleResults'
        headers:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_SelectColumn'
      description: ""
      example:
        tableId: '...'
        rows:
        - list:
          - storageLocationId: 12345
            contentMd5: '...'
            etag: '...'
            createdBy: '...'
            createdOn: 12345
            concreteType: '...'
            contentType: '...'
            contentSize: 12345
            id: '...'
            fileName: '...'
          - storageLocationId: 12345
            contentMd5: '...'
            etag: '...'
            createdBy: '...'
            createdOn: 12345
            concreteType: '...'
            contentType: '...'
            contentSize: 12345
            id: '...'
            fileName: '...'
        - list:
          - storageLocationId: 12345
            contentMd5: '...'
            etag: '...'
            createdBy: '...'
            createdOn: 12345
            concreteType: '...'
            contentType: '...'
            contentSize: 12345
            id: '...'
            fileName: '...'
          - storageLocationId: 12345
            contentMd5: '...'
            etag: '...'
            createdBy: '...'
            createdOn: 12345
            concreteType: '...'
            contentType: '...'
            contentSize: 12345
            id: '...'
            fileName: '...'
        headers:
        - name: '...'
          columnType: EVALUATIONID
          id: '...'
        - name: '...'
          columnType: DATE_LIST
          id: '...'
    json_TableUpdateRequest:
      title: TableUpdateRequest
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        entityId:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        entityId: '...'
    json_TableUpdateResponse:
      title: TableUpdateResponse
      type: object
      properties:
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
    json_TableUpdateTransactionRequest:
      title: TableUpdateTransactionRequest
      type: object
      properties:
        changes:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_TableUpdateRequest'
        snapshotOptions:
          $ref: '#/components/schemas/json_SnapshotRequest'
        createSnapshot:
          type: boolean
          description: ""
        concreteType:
          type: string
          description: ""
        entityId:
          type: string
          description: ""
      description: ""
      example:
        changes:
        - concreteType: '...'
          entityId: '...'
        - concreteType: '...'
          entityId: '...'
        snapshotOptions:
          snapshotComment: '...'
          snapshotLabel: '...'
          snapshotActivityId: '...'
        createSnapshot: true
        concreteType: '...'
        entityId: '...'
    json_TableUpdateTransactionResponse:
      title: TableUpdateTransactionResponse
      type: object
      properties:
        snapshotVersionNumber:
          type: number
          description: ""
        concreteType:
          type: string
          description: ""
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_TableUpdateResponse'
      description: ""
      example:
        snapshotVersionNumber: 12345
        concreteType: '...'
        results:
        - concreteType: '...'
        - concreteType: '...'
    json_Team:
      title: Team
      type: object
      properties:
        id:
          type: string
          description: ""
        icon:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        canPublicJoin:
          type: boolean
          description: ""
        modifiedOn:
          type: number
          description: ""
        name:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        etag:
          type: string
          description: ""
        description:
          type: string
          description: ""
      description: ""
      example:
        id: '...'
        icon: '...'
        createdBy: '...'
        modifiedBy: '...'
        canPublicJoin: true
        modifiedOn: 12345
        name: '...'
        createdOn: 12345
        etag: '...'
        description: '...'
    json_TeamMember:
      title: TeamMember
      type: object
      properties:
        teamId:
          type: string
          description: ""
        isAdmin:
          type: boolean
          description: ""
        member:
          $ref: '#/components/schemas/json_UserGroupHeader'
      description: ""
      example:
        teamId: '...'
        isAdmin: true
        member:
          lastName: '...'
          ownerId: '...'
          firstName: '...'
          userName: '...'
          displayName: '...'
          email: '...'
          isIndividual: true
    json_TeamMembershipStatus:
      title: TeamMembershipStatus
      type: object
      properties:
        hasOpenInvitation:
          type: boolean
          description: ""
        canJoin:
          type: boolean
          description: ""
        userId:
          type: string
          description: ""
        hasUnmetAccessRequirement:
          type: boolean
          description: ""
        membershipApprovalRequired:
          type: boolean
          description: ""
        teamId:
          type: string
          description: ""
        hasOpenRequest:
          type: boolean
          description: ""
        isMember:
          type: boolean
          description: ""
        canSendEmail:
          type: boolean
          description: ""
      description: ""
      example:
        hasOpenInvitation: true
        canJoin: true
        userId: '...'
        hasUnmetAccessRequirement: true
        membershipApprovalRequired: true
        teamId: '...'
        hasOpenRequest: true
        isMember: true
        canSendEmail: true
    json_TeamSubmissionEligibility:
      title: TeamSubmissionEligibility
      type: object
      properties:
        membersEligibility:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_MemberSubmissionEligibility'
        eligibilityStateHash:
          type: number
          description: ""
        teamId:
          type: string
          description: ""
        evaluationId:
          type: string
          description: ""
        teamEligibility:
          $ref: '#/components/schemas/json_SubmissionEligibility'
      description: ""
      example:
        membersEligibility:
        - principalId: 12345
          isEligible: true
          isRegistered: true
          hasConflictingSubmission: true
          isQuotaFilled: true
        - principalId: 12345
          isEligible: true
          isRegistered: true
          hasConflictingSubmission: true
          isQuotaFilled: true
        eligibilityStateHash: 12345
        teamId: '...'
        evaluationId: '...'
        teamEligibility:
          isQuotaFilled: true
          isEligible: true
          isRegistered: true
    json_ThreadCount:
      title: ThreadCount
      type: object
      properties:
        count:
          type: number
          description: ""
      description: ""
      example:
        count: 12345
    json_Topic:
      title: Topic
      type: object
      properties:
        objectType:
          $ref: '#/components/schemas/json_SubscriptionObjectType'
        objectId:
          type: string
          description: ""
      description: ""
      example:
        objectType: FORUM
        objectId: '...'
    json_TrashedEntity:
      title: TrashedEntity
      type: object
      properties:
        entityName:
          type: string
          description: ""
        deletedOn:
          type: number
          description: ""
        entityId:
          type: string
          description: ""
        originalParentId:
          type: string
          description: ""
        deletedByPrincipalId:
          type: string
          description: ""
      description: ""
      example:
        entityName: '...'
        deletedOn: 12345
        entityId: '...'
        originalParentId: '...'
        deletedByPrincipalId: '...'
    json_Type:
      title: Type
      type: string
      description: ""
      enum:
      - _null
      - _boolean
      - object
      - array
      - number
      - string
      - integer
    json_UpdateReplyMessage:
      title: UpdateReplyMessage
      type: object
      properties:
        messageMarkdown:
          type: string
          description: ""
      description: ""
      example:
        messageMarkdown: '...'
    json_UpdateThreadMessage:
      title: UpdateThreadMessage
      type: object
      properties:
        messageMarkdown:
          type: string
          description: ""
      description: ""
      example:
        messageMarkdown: '...'
    json_UpdateThreadTitle:
      title: UpdateThreadTitle
      type: object
      properties:
        title:
          type: string
          description: ""
      description: ""
      example:
        title: '...'
    json_UploadToTablePreviewRequest:
      title: UploadToTablePreviewRequest
      type: object
      properties:
        linesToSkip:
          type: number
          description: ""
        uploadFileHandleId:
          type: string
          description: ""
        doFullFileScan:
          type: boolean
          description: ""
        csvTableDescriptor:
          $ref: '#/components/schemas/json_CsvTableDescriptor'
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        linesToSkip: 12345
        uploadFileHandleId: '...'
        doFullFileScan: true
        csvTableDescriptor:
          separator: '...'
          isFirstLineHeader: true
          quoteCharacter: '...'
          lineEnd: '...'
          escapeCharacter: '...'
        concreteType: '...'
    json_UploadToTablePreviewResult:
      title: UploadToTablePreviewResult
      type: object
      properties:
        rowsScanned:
          type: number
          description: ""
        concreteType:
          type: string
          description: ""
        suggestedColumns:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ColumnModel'
        sampleRows:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_Row_table'
      description: ""
      example:
        rowsScanned: 12345
        concreteType: '...'
        suggestedColumns:
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: INTEGER_LIST
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: LARGETEXT
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: enumeration
        sampleRows:
        - versionNumber: 12345
          rowId: 12345
          values:
          - '...'
          - '...'
          etag: '...'
        - versionNumber: 12345
          rowId: 12345
          values:
          - '...'
          - '...'
          etag: '...'
    json_UploadToTableRequest:
      title: UploadToTableRequest
      type: object
      properties:
        tableId:
          type: string
          description: ""
        linesToSkip:
          type: number
          description: ""
        uploadFileHandleId:
          type: string
          description: ""
        entityId:
          type: string
          description: ""
        csvTableDescriptor:
          $ref: '#/components/schemas/json_CsvTableDescriptor'
        updateEtag:
          type: string
          description: ""
        concreteType:
          type: string
          description: ""
        columnIds:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        tableId: '...'
        linesToSkip: 12345
        uploadFileHandleId: '...'
        entityId: '...'
        csvTableDescriptor:
          separator: '...'
          isFirstLineHeader: true
          quoteCharacter: '...'
          lineEnd: '...'
          escapeCharacter: '...'
        updateEtag: '...'
        concreteType: '...'
        columnIds:
        - '...'
        - '...'
    json_UploadToTableResult:
      title: UploadToTableResult
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        rowsProcessed:
          type: number
          description: ""
      description: ""
      example:
        concreteType: '...'
        etag: '...'
        rowsProcessed: 12345
    json_UploadType:
      title: UploadType
      type: string
      description: ""
      enum:
      - S3
      - GOOGLECLOUDSTORAGE
      - SFTP
      - HTTPS
      - PROXYLOCAL
      - NONE
    json_Used:
      title: Used
      type: object
      properties:
        wasExecuted:
          type: boolean
          description: ""
        concreteType:
          type: string
          description: ""
      description: ""
      example:
        wasExecuted: true
        concreteType: '...'
    json_UserBundle:
      title: UserBundle
      type: object
      properties:
        userProfile:
          $ref: '#/components/schemas/json_UserProfile'
        verificationSubmission:
          $ref: '#/components/schemas/json_VerificationSubmission'
        userId:
          type: string
          description: ""
        isCertified:
          type: boolean
          description: ""
        ORCID:
          type: string
          description: ""
        isACTMember:
          type: boolean
          description: ""
        isVerified:
          type: boolean
          description: ""
      description: ""
      example:
        userProfile:
          summary: '...'
          preferences:
          - concreteType: '...'
            name: '...'
          - concreteType: '...'
            name: '...'
          profilePicureFileHandleId: '...'
          displayName: '...'
          notificationSettings:
            markEmailedMessagesAsRead: true
            sendEmailNotifications: true
          RStudioUrl: '...'
          openIds:
          - '...'
          - '...'
          email: '...'
          url: '...'
          etag: '...'
          position: '...'
          company: '...'
          teamName: '...'
          location: '...'
          lastName: '...'
          emails:
          - '...'
          - '...'
          userName: '...'
          industry: '...'
          ownerId: '...'
          createdOn: 12345
          firstName: '...'
        verificationSubmission:
          stateHistory:
          - state: SUSPENDED
            createdOn: 12345
            notes: '...'
            reason: '...'
            createdBy: '...'
          - state: REJECTED
            createdOn: 12345
            notes: '...'
            reason: '...'
            createdBy: '...'
          id: '...'
          attachments:
          - fileName: '...'
            id: '...'
          - fileName: '...'
            id: '...'
          lastName: '...'
          location: '...'
          company: '...'
          createdBy: '...'
          notificationEmail: '...'
          emails:
          - '...'
          - '...'
          orcid: '...'
          createdOn: 12345
          firstName: '...'
        userId: '...'
        isCertified: true
        ORCID: '...'
        isACTMember: true
        isVerified: true
    json_UserEntityPermissions:
      title: UserEntityPermissions
      type: object
      properties:
        canCertifiedUserEdit:
          type: boolean
          description: ""
        canPublicRead:
          type: boolean
          description: ""
        canDelete:
          type: boolean
          description: ""
        isCertifiedUser:
          type: boolean
          description: ""
        isCertificationRequired:
          type: boolean
          description: ""
        canAddChild:
          type: boolean
          description: ""
        canChangePermissions:
          type: boolean
          description: ""
        canCertifiedUserAddChild:
          type: boolean
          description: ""
        canDownload:
          type: boolean
          description: ""
        canUpload:
          type: boolean
          description: ""
        canView:
          type: boolean
          description: ""
        canChangeSettings:
          type: boolean
          description: ""
        canModerate:
          type: boolean
          description: ""
        canEnableInheritance:
          type: boolean
          description: ""
        canEdit:
          type: boolean
          description: ""
        ownerPrincipalId:
          type: number
          description: ""
      description: ""
      example:
        canCertifiedUserEdit: true
        canPublicRead: true
        canDelete: true
        isCertifiedUser: true
        isCertificationRequired: true
        canAddChild: true
        canChangePermissions: true
        canCertifiedUserAddChild: true
        canDownload: true
        canUpload: true
        canView: true
        canChangeSettings: true
        canModerate: true
        canEnableInheritance: true
        canEdit: true
        ownerPrincipalId: 12345
    json_UserEvaluationPermissions:
      title: UserEvaluationPermissions
      type: object
      properties:
        canEdit:
          type: boolean
          description: ""
        canChangePermissions:
          type: boolean
          description: ""
        canDelete:
          type: boolean
          description: ""
        canSubmit:
          type: boolean
          description: ""
        canEditSubmissionStatuses:
          type: boolean
          description: ""
        canParticipate:
          type: boolean
          description: ""
        canPublicRead:
          type: boolean
          description: ""
        ownerPrincipalId:
          type: number
          description: ""
        canView:
          type: boolean
          description: ""
        canViewPrivateSubmissionStatusAnnotations:
          type: boolean
          description: ""
        canDeleteSubmissions:
          type: boolean
          description: ""
      description: ""
      example:
        canEdit: true
        canChangePermissions: true
        canDelete: true
        canSubmit: true
        canEditSubmissionStatuses: true
        canParticipate: true
        canPublicRead: true
        ownerPrincipalId: 12345
        canView: true
        canViewPrivateSubmissionStatusAnnotations: true
        canDeleteSubmissions: true
    json_UserGroup:
      title: UserGroup
      type: object
      properties:
        id:
          type: string
          description: ""
        creationDate:
          type: number
          description: ""
        uri:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        isIndividual:
          type: boolean
          description: ""
      description: ""
      example:
        id: '...'
        creationDate: 12345
        uri: '...'
        etag: '...'
        isIndividual: true
    json_UserGroupHeader:
      title: UserGroupHeader
      type: object
      properties:
        lastName:
          type: string
          description: ""
        ownerId:
          type: string
          description: ""
        firstName:
          type: string
          description: ""
        userName:
          type: string
          description: ""
        displayName:
          type: string
          description: ""
        email:
          type: string
          description: ""
        isIndividual:
          type: boolean
          description: ""
      description: ""
      example:
        lastName: '...'
        ownerId: '...'
        firstName: '...'
        userName: '...'
        displayName: '...'
        email: '...'
        isIndividual: true
    json_UserGroupHeaderResponse:
      title: UserGroupHeaderResponse
      type: object
      properties:
        list:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_UserGroupHeader'
      description: ""
      example:
        list:
        - lastName: '...'
          ownerId: '...'
          firstName: '...'
          userName: '...'
          displayName: '...'
          email: '...'
          isIndividual: true
        - lastName: '...'
          ownerId: '...'
          firstName: '...'
          userName: '...'
          displayName: '...'
          email: '...'
          isIndividual: true
    json_UserGroupHeaderResponsePage:
      title: UserGroupHeaderResponsePage
      type: object
      properties:
        children:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_UserGroupHeader'
        totalNumberOfResults:
          type: number
          description: ""
        prefixFilter:
          type: string
          description: ""
      description: ""
      example:
        children:
        - lastName: '...'
          ownerId: '...'
          firstName: '...'
          userName: '...'
          displayName: '...'
          email: '...'
          isIndividual: true
        - lastName: '...'
          ownerId: '...'
          firstName: '...'
          userName: '...'
          displayName: '...'
          email: '...'
          isIndividual: true
        totalNumberOfResults: 12345
        prefixFilter: '...'
    json_UserPreference:
      title: UserPreference
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        name:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        name: '...'
    json_UserProfile:
      title: UserProfile
      type: object
      properties:
        summary:
          type: string
          description: ""
        preferences:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_UserPreference'
        profilePicureFileHandleId:
          type: string
          description: ""
        displayName:
          type: string
          description: ""
        notificationSettings:
          $ref: '#/components/schemas/json_Settings'
        RStudioUrl:
          type: string
          description: ""
        openIds:
          type: array
          description: ""
          items:
            type: string
        email:
          type: string
          description: ""
        url:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        position:
          type: string
          description: ""
        company:
          type: string
          description: ""
        teamName:
          type: string
          description: ""
        location:
          type: string
          description: ""
        lastName:
          type: string
          description: ""
        emails:
          type: array
          description: ""
          items:
            type: string
        userName:
          type: string
          description: ""
        industry:
          type: string
          description: ""
        ownerId:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        firstName:
          type: string
          description: ""
      description: ""
      example:
        summary: '...'
        preferences:
        - concreteType: '...'
          name: '...'
        - concreteType: '...'
          name: '...'
        profilePicureFileHandleId: '...'
        displayName: '...'
        notificationSettings:
          markEmailedMessagesAsRead: true
          sendEmailNotifications: true
        RStudioUrl: '...'
        openIds:
        - '...'
        - '...'
        email: '...'
        url: '...'
        etag: '...'
        position: '...'
        company: '...'
        teamName: '...'
        location: '...'
        lastName: '...'
        emails:
        - '...'
        - '...'
        userName: '...'
        industry: '...'
        ownerId: '...'
        createdOn: 12345
        firstName: '...'
    json_Username:
      title: Username
      type: object
      properties:
        email:
          type: string
          description: ""
      description: ""
      example:
        email: '...'
    json_V2WikiHeader:
      title: V2WikiHeader
      type: object
      properties:
        title:
          type: string
          description: ""
        id:
          type: string
          description: ""
        parentId:
          type: string
          description: ""
      description: ""
      example:
        title: '...'
        id: '...'
        parentId: '...'
    json_V2WikiHistorySnapshot:
      title: V2WikiHistorySnapshot
      type: object
      properties:
        modifiedOn:
          type: number
          description: ""
        version:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
      description: ""
      example:
        modifiedOn: 12345
        version: '...'
        modifiedBy: '...'
    json_V2WikiOrderHint:
      title: V2WikiOrderHint
      type: object
      properties:
        ownerId:
          type: string
          description: ""
        idList:
          type: array
          description: ""
          items:
            type: string
        etag:
          type: string
          description: ""
        ownerObjectType:
          $ref: '#/components/schemas/json_ObjectType'
      description: ""
      example:
        ownerId: '...'
        idList:
        - '...'
        - '...'
        etag: '...'
        ownerObjectType: FORM_DATA
    json_V2WikiPage:
      title: V2WikiPage
      type: object
      properties:
        id:
          type: string
          description: ""
        title:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        parentWikiId:
          type: string
          description: ""
        etag:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        modifiedBy:
          type: string
          description: ""
        attachmentFileHandleIds:
          type: array
          description: ""
          items:
            type: string
        markdownFileHandleId:
          type: string
          description: ""
      description: ""
      example:
        id: '...'
        title: '...'
        createdOn: 12345
        parentWikiId: '...'
        etag: '...'
        createdBy: '...'
        modifiedOn: 12345
        modifiedBy: '...'
        attachmentFileHandleIds:
        - '...'
        - '...'
        markdownFileHandleId: '...'
    json_ValidationException:
      title: ValidationException
      type: object
      properties:
        schemaLocation:
          type: string
          description: ""
        keyword:
          type: string
          description: ""
        pointerToViolation:
          type: string
          description: ""
        causingExceptions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ValidationException'
        message:
          type: string
          description: ""
      description: ""
      example:
        schemaLocation: '...'
        keyword: '...'
        pointerToViolation: '...'
        causingExceptions:
        - schemaLocation: '...'
          keyword: '...'
          pointerToViolation: '...'
          causingExceptions:
          - {}
          - {}
          message: '...'
        - schemaLocation: '...'
          keyword: '...'
          pointerToViolation: '...'
          causingExceptions:
          - {}
          - {}
          message: '...'
        message: '...'
    json_ValidationResults:
      title: ValidationResults
      type: object
      properties:
        isValid:
          type: boolean
          description: ""
        objectType:
          $ref: '#/components/schemas/json_ObjectType_schema'
        validationException:
          $ref: '#/components/schemas/json_ValidationException'
        validationErrorMessage:
          type: string
          description: ""
        schema$id:
          type: string
          description: ""
        allValidationMessages:
          type: array
          description: ""
          items:
            type: string
        objectId:
          type: string
          description: ""
        validatedOn:
          type: number
          description: ""
        objectEtag:
          type: string
          description: ""
      description: ""
      example:
        isValid: true
        objectType: entity
        validationException:
          schemaLocation: '...'
          keyword: '...'
          pointerToViolation: '...'
          causingExceptions:
          - {}
          - {}
          message: '...'
        validationErrorMessage: '...'
        schema$id: '...'
        allValidationMessages:
        - '...'
        - '...'
        objectId: '...'
        validatedOn: 12345
        objectEtag: '...'
    json_ValidationSummaryStatistics:
      title: ValidationSummaryStatistics
      type: object
      properties:
        numberOfValidChildren:
          type: number
          description: ""
        containerId:
          type: string
          description: ""
        totalNumberOfChildren:
          type: number
          description: ""
        numberOfUnknownChildren:
          type: number
          description: ""
        generatedOn:
          type: number
          description: ""
        numberOfInvalidChildren:
          type: number
          description: ""
      description: ""
      example:
        numberOfValidChildren: 12345
        containerId: '...'
        totalNumberOfChildren: 12345
        numberOfUnknownChildren: 12345
        generatedOn: 12345
        numberOfInvalidChildren: 12345
    json_VerificationPagedResults:
      title: VerificationPagedResults
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_VerificationSubmission'
        totalNumberOfResults:
          type: number
          description: ""
      description: ""
      example:
        results:
        - stateHistory:
          - state: SUBMITTED
            createdOn: 12345
            notes: '...'
            reason: '...'
            createdBy: '...'
          - state: APPROVED
            createdOn: 12345
            notes: '...'
            reason: '...'
            createdBy: '...'
          id: '...'
          attachments:
          - fileName: '...'
            id: '...'
          - fileName: '...'
            id: '...'
          lastName: '...'
          location: '...'
          company: '...'
          createdBy: '...'
          notificationEmail: '...'
          emails:
          - '...'
          - '...'
          orcid: '...'
          createdOn: 12345
          firstName: '...'
        - stateHistory:
          - state: APPROVED
            createdOn: 12345
            notes: '...'
            reason: '...'
            createdBy: '...'
          - state: APPROVED
            createdOn: 12345
            notes: '...'
            reason: '...'
            createdBy: '...'
          id: '...'
          attachments:
          - fileName: '...'
            id: '...'
          - fileName: '...'
            id: '...'
          lastName: '...'
          location: '...'
          company: '...'
          createdBy: '...'
          notificationEmail: '...'
          emails:
          - '...'
          - '...'
          orcid: '...'
          createdOn: 12345
          firstName: '...'
        totalNumberOfResults: 12345
    json_VerificationState:
      title: VerificationState
      type: object
      properties:
        state:
          $ref: '#/components/schemas/json_VerificationStateEnum'
        createdOn:
          type: number
          description: ""
        notes:
          type: string
          description: ""
        reason:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
      description: ""
      example:
        state: APPROVED
        createdOn: 12345
        notes: '...'
        reason: '...'
        createdBy: '...'
    json_VerificationStateEnum:
      title: VerificationStateEnum
      type: string
      description: ""
      enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
      - SUSPENDED
    json_VerificationSubmission:
      title: VerificationSubmission
      type: object
      properties:
        stateHistory:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_VerificationState'
        id:
          type: string
          description: ""
        attachments:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_AttachmentMetadata'
        lastName:
          type: string
          description: ""
        location:
          type: string
          description: ""
        company:
          type: string
          description: ""
        createdBy:
          type: string
          description: ""
        notificationEmail:
          type: string
          description: ""
        emails:
          type: array
          description: ""
          items:
            type: string
        orcid:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        firstName:
          type: string
          description: ""
      description: ""
      example:
        stateHistory:
        - state: SUSPENDED
          createdOn: 12345
          notes: '...'
          reason: '...'
          createdBy: '...'
        - state: SUSPENDED
          createdOn: 12345
          notes: '...'
          reason: '...'
          createdBy: '...'
        id: '...'
        attachments:
        - fileName: '...'
          id: '...'
        - fileName: '...'
          id: '...'
        lastName: '...'
        location: '...'
        company: '...'
        createdBy: '...'
        notificationEmail: '...'
        emails:
        - '...'
        - '...'
        orcid: '...'
        createdOn: 12345
        firstName: '...'
    json_VersionInfo:
      title: VersionInfo
      type: object
      properties:
        contentMd5:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        versionLabel:
          type: string
          description: ""
        modifiedByPrincipalId:
          type: string
          description: ""
        versionComment:
          type: string
          description: ""
        contentSize:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        versionNumber:
          type: number
          description: ""
        id:
          type: string
          description: ""
      description: ""
      example:
        contentMd5: '...'
        modifiedOn: 12345
        versionLabel: '...'
        modifiedByPrincipalId: '...'
        versionComment: '...'
        contentSize: '...'
        modifiedBy: '...'
        versionNumber: 12345
        id: '...'
    json_Versionable:
      title: Versionable
      type: object
      properties:
        versionNumber:
          type: number
          description: ""
      description: ""
      example:
        versionNumber: 12345
    json_ViewColumnModelRequest:
      title: ViewColumnModelRequest
      type: object
      properties:
        concreteType:
          type: string
          description: ""
        viewScope:
          $ref: '#/components/schemas/json_ViewScope'
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        concreteType: '...'
        viewScope:
          viewType: project
          viewTypeMask: 12345
          viewEntityType: entityview
          scope:
          - '...'
          - '...'
        nextPageToken: '...'
    json_ViewColumnModelResponse:
      title: ViewColumnModelResponse
      type: object
      properties:
        results:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/json_ColumnModel'
        concreteType:
          type: string
          description: ""
        nextPageToken:
          type: string
          description: ""
      description: ""
      example:
        results:
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: LINK
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: range
        - maximumSize: 12345
          enumValues:
          - '...'
          - '...'
          name: '...'
          columnType: BOOLEAN
          id: '...'
          maximumListLength: 12345
          defaultValue: '...'
          facetType: enumeration
        concreteType: '...'
        nextPageToken: '...'
    json_ViewEntityType:
      title: ViewEntityType
      type: string
      description: ""
      enum:
      - entityview
      - submissionview
    json_ViewScope:
      title: ViewScope
      type: object
      properties:
        viewType:
          $ref: '#/components/schemas/json_ViewType'
        viewTypeMask:
          type: number
          description: ""
        viewEntityType:
          $ref: '#/components/schemas/json_ViewEntityType'
        scope:
          type: array
          description: ""
          items:
            type: string
      description: ""
      example:
        viewType: file
        viewTypeMask: 12345
        viewEntityType: entityview
        scope:
        - '...'
        - '...'
    json_ViewType:
      title: ViewType
      type: string
      description: ""
      enum:
      - file
      - project
      - file_and_table
    json_WikiHeader:
      title: WikiHeader
      type: object
      properties:
        parentId:
          type: string
          description: ""
        id:
          type: string
          description: ""
        title:
          type: string
          description: ""
      description: ""
      example:
        parentId: '...'
        id: '...'
        title: '...'
    json_WikiPage:
      title: WikiPage
      type: object
      properties:
        title:
          type: string
          description: ""
        createdOn:
          type: number
          description: ""
        id:
          type: string
          description: ""
        modifiedOn:
          type: number
          description: ""
        etag:
          type: string
          description: ""
        parentWikiId:
          type: string
          description: ""
        attachmentFileHandleIds:
          type: array
          description: ""
          items:
            type: string
        createdBy:
          type: string
          description: ""
        modifiedBy:
          type: string
          description: ""
        markdown:
          type: string
          description: ""
      description: ""
      example:
        title: '...'
        createdOn: 12345
        id: '...'
        modifiedOn: 12345
        etag: '...'
        parentWikiId: '...'
        attachmentFileHandleIds:
        - '...'
        - '...'
        createdBy: '...'
        modifiedBy: '...'
        markdown: '...'
    json_WikiPageKey:
      title: WikiPageKey
      type: object
      properties:
        wikiPageId:
          type: string
          description: ""
        ownerObjectId:
          type: string
          description: ""
        ownerObjectType:
          $ref: '#/components/schemas/json_ObjectType'
      description: ""
      example:
        wikiPageId: '...'
        ownerObjectId: '...'
        ownerObjectType: ORGANIZATION
    xml_ns0_number:
      title: number
      description: ""
      allOf:
      - type: object
    xml_ns0_JSONObject:
      title: JSONObject
      description: ""
      allOf:
      - type: object
    xml_ns0_batchUploadResponse:
      title: batchUploadResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextUploadToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_evaluation:
      title: evaluation
      description: ""
      allOf:
      - type: object
        properties:
          contentSource:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          ownerId:
            type: string
            description: ""
            xml:
              namespace: ""
          quota:
            $ref: '#/components/schemas/xml_ns0_submissionQuota'
          status:
            $ref: '#/components/schemas/xml_ns0_evaluationStatus'
          submissionInstructionsMessage:
            type: string
            description: ""
            xml:
              namespace: ""
          submissionReceiptMessage:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_evaluationRound:
      title: evaluationRound
      description: ""
      allOf:
      - type: object
        properties:
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          evaluationId:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          limits:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_evaluationRoundLimit'
          roundEnd:
            type: string
            description: ""
            xml:
              namespace: ""
          roundStart:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_evaluationRoundLimit:
      title: evaluationRoundLimit
      description: ""
      allOf:
      - type: object
        properties:
          limitType:
            $ref: '#/components/schemas/xml_ns0_evaluationRoundLimitType'
          maximumSubmissions:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_evaluationRoundLimitType:
      title: evaluationRoundLimitType
      type: string
      description: ""
      enum:
      - TOTAL
      - DAILY
      - WEEKLY
      - MONTHLY
    xml_ns0_evaluationRoundListRequest:
      title: evaluationRoundListRequest
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_evaluationRoundListResponse:
      title: evaluationRoundListResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          page:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_evaluationRound'
    xml_ns0_evaluationStatus:
      title: evaluationStatus
      type: string
      description: ""
      enum:
      - PLANNED
      - OPEN
      - CLOSED
      - COMPLETED
    xml_ns0_memberSubmissionEligibility:
      title: memberSubmissionEligibility
      description: ""
      allOf:
      - type: object
        properties:
          hasConflictingSubmission:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isEligible:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isQuotaFilled:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isRegistered:
            type: boolean
            description: ""
            xml:
              namespace: ""
          principalId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_submission:
      title: submission
      description: ""
      allOf:
      - type: object
        properties:
          contributors:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_submissionContributor'
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          dockerDigest:
            type: string
            description: ""
            xml:
              namespace: ""
          dockerRepositoryName:
            type: string
            description: ""
            xml:
              namespace: ""
          entityBundleJSON:
            type: string
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          evaluationId:
            type: string
            description: ""
            xml:
              namespace: ""
          evaluationRoundId:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          submitterAlias:
            type: string
            description: ""
            xml:
              namespace: ""
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_submissionBundle:
      title: submissionBundle
      description: ""
      allOf:
      - type: object
        properties:
          submission:
            $ref: '#/components/schemas/xml_ns0_submission'
          submissionStatus:
            $ref: '#/components/schemas/xml_ns0_submissionStatus'
    xml_ns0_submissionContributor:
      title: submissionContributor
      description: ""
      allOf:
      - type: object
        properties:
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          principalId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_submissionEligibility:
      title: submissionEligibility
      description: ""
      allOf:
      - type: object
        properties:
          isEligible:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isQuotaFilled:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isRegistered:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_submissionQuota:
      title: submissionQuota
      description: ""
      allOf:
      - type: object
        properties:
          firstRoundStart:
            type: string
            description: ""
            xml:
              namespace: ""
          numberOfRounds:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          roundDurationMillis:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          submissionLimit:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_submissionStatus:
      title: submissionStatus
      description: ""
      allOf:
      - type: object
        properties:
          annotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          canCancel:
            type: boolean
            description: ""
            xml:
              namespace: ""
          cancelRequested:
            type: boolean
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          report:
            type: string
            description: ""
            xml:
              namespace: ""
          score:
            type: number
            description: ""
            format: double
            xml:
              namespace: ""
          status:
            $ref: '#/components/schemas/xml_ns0_submissionStatusEnum'
          statusVersion:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          submissionAnnotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_submissionStatusBatch:
      title: submissionStatusBatch
      description: ""
      allOf:
      - type: object
        properties:
          batchToken:
            type: string
            description: ""
            xml:
              namespace: ""
          isFirstBatch:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isLastBatch:
            type: boolean
            description: ""
            xml:
              namespace: ""
          statuses:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_submissionStatus'
    xml_ns0_submissionStatusEnum:
      title: submissionStatusEnum
      type: string
      description: ""
      enum:
      - OPEN
      - CLOSED
      - SCORED
      - INVALID
      - VALIDATED
      - EVALUATION_IN_PROGRESS
      - RECEIVED
      - REJECTED
      - ACCEPTED
    xml_ns0_teamSubmissionEligibility:
      title: teamSubmissionEligibility
      description: ""
      allOf:
      - type: object
        properties:
          eligibilityStateHash:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          evaluationId:
            type: string
            description: ""
            xml:
              namespace: ""
          membersEligibility:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_memberSubmissionEligibility'
          teamEligibility:
            $ref: '#/components/schemas/xml_ns0_submissionEligibility'
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_userEvaluationPermissions:
      title: userEvaluationPermissions
      description: ""
      allOf:
      - type: object
        properties:
          canChangePermissions:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canDelete:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canDeleteSubmissions:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canEdit:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canEditSubmissionStatuses:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canParticipate:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canPublicRead:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canSubmit:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canView:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canViewPrivateSubmissionStatusAnnotations:
            type: boolean
            description: ""
            xml:
              namespace: ""
          ownerPrincipalId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_paginatedResults:
      title: paginatedResults
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_ACCESS_TYPE:
      title: ACCESS_TYPE
      type: string
      description: ""
      enum:
      - CREATE
      - READ
      - UPDATE
      - DELETE
      - CHANGE_PERMISSIONS
      - DOWNLOAD
      - UPLOAD
      - PARTICIPATE
      - SUBMIT
      - READ_PRIVATE_SUBMISSION
      - UPDATE_SUBMISSION
      - DELETE_SUBMISSION
      - TEAM_MEMBERSHIP_UPDATE
      - SEND_MESSAGE
      - CHANGE_SETTINGS
      - MODERATE
    xml_ns0_accessApproval:
      title: accessApproval
      description: ""
      allOf:
      - type: object
        properties:
          accessorId:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          expiredOn:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          requirementId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          requirementVersion:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          state:
            $ref: '#/components/schemas/xml_ns0_approvalState'
          submitterId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessApprovalInfo:
      title: accessApprovalInfo
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          hasAccessApproval:
            type: boolean
            description: ""
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessControlList:
      title: accessControlList
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          creationDate:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          resourceAccess:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_resourceAccess'
    xml_ns0_accessRequirement:
      title: accessRequirement
      description: ""
      allOf:
      - type: object
        properties:
          accessType:
            $ref: '#/components/schemas/xml_ns0_ACCESS_TYPE'
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          subjectIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_restrictableObjectDescriptor'
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_annotations:
      title: annotations
      description: ""
      allOf:
      - type: object
        properties:
          blobAnnotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          dateAnnotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          doubleAnnotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          longAnnotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          stringAnnotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_approvalState:
      title: approvalState
      type: string
      description: ""
      enum:
      - APPROVED
      - REVOKED
    xml_ns0_batchAccessApprovalInfoRequest:
      title: batchAccessApprovalInfoRequest
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_batchAccessApprovalInfoResponse:
      title: batchAccessApprovalInfoResponse
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_accessApprovalInfo'
    xml_ns0_booleanResult:
      title: booleanResult
      description: ""
      allOf:
      - type: object
        properties:
          result:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_challenge:
      title: challenge
      description: ""
      allOf:
      - type: object
        properties:
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          participantTeamId:
            type: string
            description: ""
            xml:
              namespace: ""
          projectId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_challengePagedResults:
      title: challengePagedResults
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_challenge'
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_challengeTeam:
      title: challengeTeam
      description: ""
      allOf:
      - type: object
        properties:
          challengeId:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          message:
            type: string
            description: ""
            xml:
              namespace: ""
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_challengeTeamPagedResults:
      title: challengeTeamPagedResults
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_challengeTeam'
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_count:
      title: count
      description: ""
      allOf:
      - type: object
        properties:
          count:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_dataType:
      title: dataType
      type: string
      description: ""
      enum:
      - SENSITIVE_DATA
      - OPEN_DATA
    xml_ns0_dataTypeResponse:
      title: dataTypeResponse
      description: ""
      allOf:
      - type: object
        properties:
          dataType:
            $ref: '#/components/schemas/xml_ns0_dataType'
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
          objectType:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          updatedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          updatedOn:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_entity:
      title: entity
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          parentId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_entityChildrenRequest:
      title: entityChildrenRequest
      description: ""
      allOf:
      - type: object
        properties:
          includeSumFileSizes:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeTotalChildCount:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeTypes:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_entityType'
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          parentId:
            type: string
            description: ""
            xml:
              namespace: ""
          sortBy:
            $ref: '#/components/schemas/xml_ns0_sortBy'
          sortDirection:
            $ref: '#/components/schemas/xml_ns0_direction'
    xml_ns0_entityChildrenResponse:
      title: entityChildrenResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          page:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_entityHeader'
          sumFileSizesBytes:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          totalChildCount:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_entityHeader:
      title: entityHeader
      description: ""
      allOf:
      - type: object
        properties:
          benefactorId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          type:
            type: string
            description: ""
            xml:
              namespace: ""
          versionLabel:
            type: string
            description: ""
            xml:
              namespace: ""
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_entityId:
      title: entityId
      description: ""
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_entityIdList:
      title: entityIdList
      description: ""
      allOf:
      - type: object
        properties:
          idList:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_entityPath:
      title: entityPath
      description: ""
      allOf:
      - type: object
        properties:
          path:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_entityHeader'
    xml_ns0_entityType:
      title: entityType
      type: string
      description: ""
      enum:
      - project
      - folder
      - file
      - table
      - link
      - entityview
      - dockerrepo
      - submissionview
    xml_ns0_idList:
      title: idList
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: integer
    xml_ns0_inviteeVerificationSignedToken:
      title: inviteeVerificationSignedToken
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          expiresOn:
            type: string
            description: ""
            xml:
              namespace: ""
          hmac:
            type: string
            description: ""
            xml:
              namespace: ""
          inviteeId:
            type: string
            description: ""
            xml:
              namespace: ""
          membershipInvitationId:
            type: string
            description: ""
            xml:
              namespace: ""
          version:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_joinTeamSignedToken:
      title: joinTeamSignedToken
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          expiresOn:
            type: string
            description: ""
            xml:
              namespace: ""
          hmac:
            type: string
            description: ""
            xml:
              namespace: ""
          memberId:
            type: string
            description: ""
            xml:
              namespace: ""
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
          version:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_listWrapper:
      title: listWrapper
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
    xml_ns0_membershipInvitation:
      title: membershipInvitation
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          expiresOn:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          inviteeEmail:
            type: string
            description: ""
            xml:
              namespace: ""
          inviteeId:
            type: string
            description: ""
            xml:
              namespace: ""
          message:
            type: string
            description: ""
            xml:
              namespace: ""
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_membershipInvtnSignedToken:
      title: membershipInvtnSignedToken
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          expiresOn:
            type: string
            description: ""
            xml:
              namespace: ""
          hmac:
            type: string
            description: ""
            xml:
              namespace: ""
          membershipInvitationId:
            type: string
            description: ""
            xml:
              namespace: ""
          version:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_membershipRequest:
      title: membershipRequest
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          expiresOn:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          message:
            type: string
            description: ""
            xml:
              namespace: ""
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_paginatedIds:
      title: paginatedIds
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_paginatedTeamIds:
      title: paginatedTeamIds
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          teamIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_projectHeader:
      title: projectHeader
      description: ""
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          lastActivity:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_projectHeaderList:
      title: projectHeaderList
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_projectHeader'
    xml_ns0_reference:
      title: reference
      description: ""
      allOf:
      - type: object
        properties:
          targetId:
            type: string
            description: ""
            xml:
              namespace: ""
          targetVersionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_resourceAccess:
      title: resourceAccess
      description: ""
      allOf:
      - type: object
        properties:
          accessType:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_ACCESS_TYPE'
          principalId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_responseMessage:
      title: responseMessage
      description: ""
      allOf:
      - type: object
        properties:
          message:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_restResourceList:
      title: restResourceList
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_restrictableObjectDescriptor:
      title: restrictableObjectDescriptor
      description: ""
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_restrictableObjectType'
    xml_ns0_restrictableObjectDescriptorResponse:
      title: restrictableObjectDescriptorResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          subjects:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_restrictableObjectDescriptor'
    xml_ns0_restrictableObjectType:
      title: restrictableObjectType
      type: string
      description: ""
      enum:
      - ENTITY
      - EVALUATION
      - TEAM
    xml_ns0_restrictionInformationRequest:
      title: restrictionInformationRequest
      description: ""
      allOf:
      - type: object
        properties:
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
          restrictableObjectType:
            $ref: '#/components/schemas/xml_ns0_restrictableObjectType'
    xml_ns0_restrictionInformationResponse:
      title: restrictionInformationResponse
      description: ""
      allOf:
      - type: object
        properties:
          hasUnmetAccessRequirement:
            type: boolean
            description: ""
            xml:
              namespace: ""
          restrictionLevel:
            $ref: '#/components/schemas/xml_ns0_restrictionLevel'
    xml_ns0_restrictionLevel:
      title: restrictionLevel
      type: string
      description: ""
      enum:
      - OPEN
      - RESTRICTED_BY_TERMS_OF_USE
      - CONTROLLED_BY_ACT
    xml_ns0_team:
      title: team
      description: ""
      allOf:
      - type: object
        properties:
          canPublicJoin:
            type: boolean
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          icon:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_teamMember:
      title: teamMember
      description: ""
      allOf:
      - type: object
        properties:
          isAdmin:
            type: boolean
            description: ""
            xml:
              namespace: ""
          member:
            $ref: '#/components/schemas/xml_ns0_userGroupHeader'
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_teamMembershipStatus:
      title: teamMembershipStatus
      description: ""
      allOf:
      - type: object
        properties:
          canJoin:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canSendEmail:
            type: boolean
            description: ""
            xml:
              namespace: ""
          hasOpenInvitation:
            type: boolean
            description: ""
            xml:
              namespace: ""
          hasOpenRequest:
            type: boolean
            description: ""
            xml:
              namespace: ""
          hasUnmetAccessRequirement:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isMember:
            type: boolean
            description: ""
            xml:
              namespace: ""
          membershipApprovalRequired:
            type: boolean
            description: ""
            xml:
              namespace: ""
          teamId:
            type: string
            description: ""
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_trashedEntity:
      title: trashedEntity
      description: ""
      allOf:
      - type: object
        properties:
          deletedByPrincipalId:
            type: string
            description: ""
            xml:
              namespace: ""
          deletedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          entityName:
            type: string
            description: ""
            xml:
              namespace: ""
          originalParentId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_userBundle:
      title: userBundle
      description: ""
      allOf:
      - type: object
        properties:
          ORCID:
            type: string
            description: ""
            xml:
              namespace: ""
          isACTMember:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isCertified:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isVerified:
            type: boolean
            description: ""
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
          userProfile:
            $ref: '#/components/schemas/xml_ns0_userProfile'
          verificationSubmission:
            $ref: '#/components/schemas/xml_ns0_verificationSubmission'
    xml_ns0_userGroup:
      title: userGroup
      description: ""
      allOf:
      - type: object
        properties:
          creationDate:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          isIndividual:
            type: boolean
            description: ""
            xml:
              namespace: ""
          uri:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_userGroupHeader:
      title: userGroupHeader
      description: ""
      allOf:
      - type: object
        properties:
          displayName:
            type: string
            description: ""
            xml:
              namespace: ""
          email:
            type: string
            description: ""
            xml:
              namespace: ""
          firstName:
            type: string
            description: ""
            xml:
              namespace: ""
          isIndividual:
            type: boolean
            description: ""
            xml:
              namespace: ""
          lastName:
            type: string
            description: ""
            xml:
              namespace: ""
          ownerId:
            type: string
            description: ""
            xml:
              namespace: ""
          userName:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_userGroupHeaderResponsePage:
      title: userGroupHeaderResponsePage
      description: ""
      allOf:
      - type: object
        properties:
          children:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_userGroupHeader'
          prefixFilter:
            type: string
            description: ""
            xml:
              namespace: ""
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_userPreference:
      title: userPreference
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_userProfile:
      title: userProfile
      description: ""
      allOf:
      - type: object
        properties:
          RStudioUrl:
            type: string
            description: ""
            xml:
              namespace: ""
          company:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          displayName:
            type: string
            description: ""
            xml:
              namespace: ""
          email:
            type: string
            description: ""
            xml:
              namespace: ""
          emails:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          firstName:
            type: string
            description: ""
            xml:
              namespace: ""
          industry:
            type: string
            description: ""
            xml:
              namespace: ""
          lastName:
            type: string
            description: ""
            xml:
              namespace: ""
          location:
            type: string
            description: ""
            xml:
              namespace: ""
          notificationSettings:
            $ref: '#/components/schemas/xml_ns0_settings'
          openIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          ownerId:
            type: string
            description: ""
            xml:
              namespace: ""
          position:
            type: string
            description: ""
            xml:
              namespace: ""
          preferences:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          profilePicureFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          summary:
            type: string
            description: ""
            xml:
              namespace: ""
          teamName:
            type: string
            description: ""
            xml:
              namespace: ""
          url:
            type: string
            description: ""
            xml:
              namespace: ""
          userName:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_versionInfo:
      title: versionInfo
      description: ""
      allOf:
      - type: object
        properties:
          contentMd5:
            type: string
            description: ""
            xml:
              namespace: ""
          contentSize:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedByPrincipalId:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          versionComment:
            type: string
            description: ""
            xml:
              namespace: ""
          versionLabel:
            type: string
            description: ""
            xml:
              namespace: ""
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_versionable:
      title: versionable
      description: ""
      allOf:
      - type: object
        properties:
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_doubleAnnotation:
      title: doubleAnnotation
      description: ""
      allOf:
      - type: object
        properties:
          isPrivate:
            type: boolean
            description: ""
            xml:
              namespace: ""
          key:
            type: string
            description: ""
            xml:
              namespace: ""
          value:
            type: number
            description: ""
            format: double
            xml:
              namespace: ""
    xml_ns0_longAnnotation:
      title: longAnnotation
      description: ""
      allOf:
      - type: object
        properties:
          isPrivate:
            type: boolean
            description: ""
            xml:
              namespace: ""
          key:
            type: string
            description: ""
            xml:
              namespace: ""
          value:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_stringAnnotation:
      title: stringAnnotation
      description: ""
      allOf:
      - type: object
        properties:
          isPrivate:
            type: boolean
            description: ""
            xml:
              namespace: ""
          key:
            type: string
            description: ""
            xml:
              namespace: ""
          value:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_annotationsValue:
      title: annotationsValue
      description: ""
      allOf:
      - type: object
        properties:
          type:
            $ref: '#/components/schemas/xml_ns0_annotationsValueType'
          value:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_annotationsValueType:
      title: annotationsValueType
      type: string
      description: ""
      enum:
      - STRING
      - DOUBLE
      - LONG
      - TIMESTAMP_MS
    xml_ns0_asyncJobId:
      title: asyncJobId
      description: ""
      allOf:
      - type: object
        properties:
          token:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_asynchJobState:
      title: asynchJobState
      type: string
      description: ""
      enum:
      - PROCESSING
      - FAILED
      - COMPLETE
    xml_ns0_asynchronousJobStatus:
      title: asynchronousJobStatus
      description: ""
      allOf:
      - type: object
        properties:
          changedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          errorDetails:
            type: string
            description: ""
            xml:
              namespace: ""
          errorMessage:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          exception:
            type: string
            description: ""
            xml:
              namespace: ""
          jobCanceling:
            type: boolean
            description: ""
            xml:
              namespace: ""
          jobId:
            type: string
            description: ""
            xml:
              namespace: ""
          jobState:
            $ref: '#/components/schemas/xml_ns0_asynchJobState'
          progressCurrent:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          progressMessage:
            type: string
            description: ""
            xml:
              namespace: ""
          progressTotal:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          requestBody:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          responseBody:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          runtimeMS:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          startedByUserId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          startedOn:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_asynchronousRequestBody:
      title: asynchronousRequestBody
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_asynchronousResponseBody:
      title: asynchronousResponseBody
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_newIntegrationTestUser:
      title: newIntegrationTestUser
      description: ""
      allOf:
      - type: object
        properties:
          email:
            type: string
            description: ""
            xml:
              namespace: ""
          password:
            type: string
            description: ""
            xml:
              namespace: ""
          profile:
            $ref: '#/components/schemas/xml_ns0_userProfile'
          session:
            $ref: '#/components/schemas/xml_ns0_session'
          username:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_newUser:
      title: newUser
      description: ""
      allOf:
      - type: object
        properties:
          email:
            type: string
            description: ""
            xml:
              namespace: ""
          encodedMembershipInvtnSignedToken:
            type: string
            description: ""
            xml:
              namespace: ""
          firstName:
            type: string
            description: ""
            xml:
              namespace: ""
          lastName:
            type: string
            description: ""
            xml:
              namespace: ""
          userName:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_session:
      title: session
      description: ""
      allOf:
      - type: object
        properties:
          acceptsTermsOfUse:
            type: boolean
            description: ""
            xml:
              namespace: ""
          sessionToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_userEntityPermissions:
      title: userEntityPermissions
      description: ""
      allOf:
      - type: object
        properties:
          canAddChild:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canCertifiedUserAddChild:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canCertifiedUserEdit:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canChangePermissions:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canChangeSettings:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canDelete:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canDownload:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canEdit:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canEnableInheritance:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canModerate:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canPublicRead:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canUpload:
            type: boolean
            description: ""
            xml:
              namespace: ""
          canView:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isCertificationRequired:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isCertifiedUser:
            type: boolean
            description: ""
            xml:
              namespace: ""
          ownerPrincipalId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_username:
      title: username
      description: ""
      allOf:
      - type: object
        properties:
          email:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_wikiPageKey:
      title: wikiPageKey
      description: ""
      allOf:
      - type: object
        properties:
          ownerObjectId:
            type: string
            description: ""
            xml:
              namespace: ""
          ownerObjectType:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          wikiPageId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessApprovalNotification:
      title: accessApprovalNotification
      description: ""
      allOf:
      - type: object
        properties:
          notificationType:
            $ref: '#/components/schemas/xml_ns0_notificationType'
          recipientId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          requirementId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          sentOn:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessApprovalNotificationRequest:
      title: accessApprovalNotificationRequest
      description: ""
      allOf:
      - type: object
        properties:
          recipientIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: integer
          requirementId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_accessApprovalNotificationResponse:
      title: accessApprovalNotificationResponse
      description: ""
      allOf:
      - type: object
        properties:
          requirementId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_accessApprovalNotification'
    xml_ns0_accessRequirementConversionRequest:
      title: accessRequirementConversionRequest
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          currentVersion:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessRequirementStatus:
      title: accessRequirementStatus
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          expiredOn:
            type: string
            description: ""
            xml:
              namespace: ""
          isApproved:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessType:
      title: accessType
      type: string
      description: ""
      enum:
      - GAIN_ACCESS
      - RENEW_ACCESS
      - REVOKE_ACCESS
    xml_ns0_accessorChange:
      title: accessorChange
      description: ""
      allOf:
      - type: object
        properties:
          type:
            $ref: '#/components/schemas/xml_ns0_accessType'
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessorGroup:
      title: accessorGroup
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          accessorIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          expiredOn:
            type: string
            description: ""
            xml:
              namespace: ""
          submitterId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessorGroupRequest:
      title: accessorGroupRequest
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          expireBefore:
            type: string
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          submitterId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_accessorGroupResponse:
      title: accessorGroupResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_accessorGroup'
    xml_ns0_accessorGroupRevokeRequest:
      title: accessorGroupRevokeRequest
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          submitterId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_createSubmissionRequest:
      title: createSubmissionRequest
      description: ""
      allOf:
      - type: object
        properties:
          requestEtag:
            type: string
            description: ""
            xml:
              namespace: ""
          requestId:
            type: string
            description: ""
            xml:
              namespace: ""
          subjectId:
            type: string
            description: ""
            xml:
              namespace: ""
          subjectType:
            $ref: '#/components/schemas/xml_ns0_restrictableObjectType'
    xml_ns0_notificationType:
      title: notificationType
      type: string
      description: ""
      enum:
      - REVOCATION
      - FIRST_RENEWAL_REMINDER
      - SECOND_RENEWAL_REMINDER
    xml_ns0_openSubmission:
      title: openSubmission
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          numberOfSubmittedSubmission:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_openSubmissionPage:
      title: openSubmissionPage
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          openSubmissionList:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_openSubmission'
    xml_ns0_requestInterface:
      title: requestInterface
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          accessorChanges:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_accessorChange'
          attachments:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          ducFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          irbFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          researchProjectId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_researchProject:
      title: researchProject
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          institution:
            type: string
            description: ""
            xml:
              namespace: ""
          intendedDataUseStatement:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          projectLead:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_submissionInfo:
      title: submissionInfo
      description: ""
      allOf:
      - type: object
        properties:
          institution:
            type: string
            description: ""
            xml:
              namespace: ""
          intendedDataUseStatement:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          projectLead:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_submissionInfoPage:
      title: submissionInfoPage
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_submissionInfo'
    xml_ns0_submissionInfoPageRequest:
      title: submissionInfoPageRequest
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_submissionOrder:
      title: submissionOrder
      type: string
      description: ""
      enum:
      - CREATED_ON
      - MODIFIED_ON
    xml_ns0_submissionPage:
      title: submissionPage
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
    xml_ns0_submissionPageRequest:
      title: submissionPageRequest
      description: ""
      allOf:
      - type: object
        properties:
          accessRequirementId:
            type: string
            description: ""
            xml:
              namespace: ""
          filterBy:
            $ref: '#/components/schemas/xml_ns0_submissionState'
          isAscending:
            type: boolean
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          orderBy:
            $ref: '#/components/schemas/xml_ns0_submissionOrder'
    xml_ns0_submissionState:
      title: submissionState
      type: string
      description: ""
      enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
      - CANCELLED
    xml_ns0_submissionStateChangeRequest:
      title: submissionStateChangeRequest
      description: ""
      allOf:
      - type: object
        properties:
          newState:
            $ref: '#/components/schemas/xml_ns0_submissionState'
          rejectedReason:
            type: string
            description: ""
            xml:
              namespace: ""
          submissionId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_createDiscussionReply:
      title: createDiscussionReply
      description: ""
      allOf:
      - type: object
        properties:
          messageMarkdown:
            type: string
            description: ""
            xml:
              namespace: ""
          threadId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_createDiscussionThread:
      title: createDiscussionThread
      description: ""
      allOf:
      - type: object
        properties:
          forumId:
            type: string
            description: ""
            xml:
              namespace: ""
          messageMarkdown:
            type: string
            description: ""
            xml:
              namespace: ""
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_discussionReplyBundle:
      title: discussionReplyBundle
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          forumId:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          isDeleted:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isEdited:
            type: boolean
            description: ""
            xml:
              namespace: ""
          messageKey:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          projectId:
            type: string
            description: ""
            xml:
              namespace: ""
          threadId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_discussionThreadBundle:
      title: discussionThreadBundle
      description: ""
      allOf:
      - type: object
        properties:
          activeAuthors:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          forumId:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          isDeleted:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isEdited:
            type: boolean
            description: ""
            xml:
              namespace: ""
          isPinned:
            type: boolean
            description: ""
            xml:
              namespace: ""
          lastActivity:
            type: string
            description: ""
            xml:
              namespace: ""
          messageKey:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          numberOfReplies:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          numberOfViews:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          projectId:
            type: string
            description: ""
            xml:
              namespace: ""
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_entityThreadCount:
      title: entityThreadCount
      description: ""
      allOf:
      - type: object
        properties:
          count:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_entityThreadCounts:
      title: entityThreadCounts
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_entityThreadCount'
    xml_ns0_forum:
      title: forum
      description: ""
      allOf:
      - type: object
        properties:
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          projectId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_messageURL:
      title: messageURL
      description: ""
      allOf:
      - type: object
        properties:
          messageUrl:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_replyCount:
      title: replyCount
      description: ""
      allOf:
      - type: object
        properties:
          count:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_threadCount:
      title: threadCount
      description: ""
      allOf:
      - type: object
        properties:
          count:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_updateReplyMessage:
      title: updateReplyMessage
      description: ""
      allOf:
      - type: object
        properties:
          messageMarkdown:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_updateThreadMessage:
      title: updateThreadMessage
      description: ""
      allOf:
      - type: object
        properties:
          messageMarkdown:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_updateThreadTitle:
      title: updateThreadTitle
      description: ""
      allOf:
      - type: object
        properties:
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_dockerAuthorizationToken:
      title: dockerAuthorizationToken
      description: ""
      allOf:
      - type: object
        properties:
          token:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_dockerCommit:
      title: dockerCommit
      description: ""
      allOf:
      - type: object
        properties:
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          digest:
            type: string
            description: ""
            xml:
              namespace: ""
          tag:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_dockerRegistryEvent:
      title: dockerRegistryEvent
      description: ""
      allOf:
      - type: object
        properties:
          action:
            $ref: '#/components/schemas/xml_ns0_registryEventAction'
          actor:
            $ref: '#/components/schemas/xml_ns0_registryEventActor'
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          request:
            $ref: '#/components/schemas/xml_ns0_registryEventRequest'
          source:
            $ref: '#/components/schemas/xml_ns0_registryEventSource'
          target:
            $ref: '#/components/schemas/xml_ns0_registryEventTarget'
          timestamp:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_dockerRegistryEventList:
      title: dockerRegistryEventList
      description: ""
      allOf:
      - type: object
        properties:
          events:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_dockerRegistryEvent'
    xml_ns0_registryEventAction:
      title: registryEventAction
      type: string
      description: ""
      enum:
      - push
      - pull
      - mount
    xml_ns0_registryEventActor:
      title: registryEventActor
      description: ""
      allOf:
      - type: object
        properties:
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_registryEventRequest:
      title: registryEventRequest
      description: ""
      allOf:
      - type: object
        properties:
          addr:
            type: string
            description: ""
            xml:
              namespace: ""
          host:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          method:
            type: string
            description: ""
            xml:
              namespace: ""
          useragent:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_registryEventSource:
      title: registryEventSource
      description: ""
      allOf:
      - type: object
        properties:
          addr:
            type: string
            description: ""
            xml:
              namespace: ""
          instanceID:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_registryEventTarget:
      title: registryEventTarget
      description: ""
      allOf:
      - type: object
        properties:
          digest:
            type: string
            description: ""
            xml:
              namespace: ""
          length:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          mediaType:
            type: string
            description: ""
            xml:
              namespace: ""
          repository:
            type: string
            description: ""
            xml:
              namespace: ""
          size:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          tag:
            type: string
            description: ""
            xml:
              namespace: ""
          url:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_doiStatus:
      title: doiStatus
      type: string
      description: ""
      enum:
      - IN_PROCESS
      - CREATED
      - READY
      - ERROR
    xml_ns0_doi:
      title: doi
      description: ""
      allOf:
      - $ref: '#/components/schemas/xml_ns0_doiAssociation'
      - type: object
        properties:
          creators:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_doiCreator'
          publicationYear:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          resourceType:
            $ref: '#/components/schemas/xml_ns0_doiResourceType'
          titles:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_doiTitle'
    xml_ns0_doiAssociation:
      title: doiAssociation
      description: ""
      allOf:
      - type: object
        properties:
          associatedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          associatedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          associationId:
            type: string
            description: ""
            xml:
              namespace: ""
          doiUri:
            type: string
            description: ""
            xml:
              namespace: ""
          doiUrl:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
          objectType:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          objectVersion:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          updatedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          updatedOn:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_doiCreator:
      title: doiCreator
      description: ""
      allOf:
      - type: object
        properties:
          creatorName:
            type: string
            description: ""
            xml:
              namespace: ""
          nameIdentifiers:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_doiNameIdentifier'
    xml_ns0_doiNameIdentifier:
      title: doiNameIdentifier
      description: ""
      allOf:
      - type: object
        properties:
          identifier:
            type: string
            description: ""
            xml:
              namespace: ""
          nameIdentifierScheme:
            $ref: '#/components/schemas/xml_ns0_nameIdentifierScheme'
    xml_ns0_doiRequest:
      title: doiRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          doi:
            $ref: '#/components/schemas/xml_ns0_doi'
    xml_ns0_doiResourceType:
      title: doiResourceType
      description: ""
      allOf:
      - type: object
        properties:
          resourceTypeGeneral:
            $ref: '#/components/schemas/xml_ns0_doiResourceTypeGeneral'
    xml_ns0_doiResourceTypeGeneral:
      title: doiResourceTypeGeneral
      type: string
      description: ""
      enum:
      - Audiovisual
      - Collection
      - DataPaper
      - Dataset
      - Event
      - Image
      - InteractiveResource
      - Model
      - PhysicalObject
      - Service
      - Software
      - Sound
      - Text
      - Workflow
      - Other
    xml_ns0_doiResponse:
      title: doiResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          doi:
            $ref: '#/components/schemas/xml_ns0_doi'
    xml_ns0_doiTitle:
      title: doiTitle
      description: ""
      allOf:
      - type: object
        properties:
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_nameIdentifierScheme:
      title: nameIdentifierScheme
      type: string
      description: ""
      enum:
      - ORCID
      - ISNI
    xml_ns0_bindSchemaToEntityRequest:
      title: bindSchemaToEntityRequest
      description: ""
      allOf:
      - type: object
        properties:
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          schema$id:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_direction:
      title: direction
      type: string
      description: ""
      enum:
      - ASC
      - DESC
    xml_ns0_entityLookupRequest:
      title: entityLookupRequest
      description: ""
      allOf:
      - type: object
        properties:
          entityName:
            type: string
            description: ""
            xml:
              namespace: ""
          parentId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_fileHandleUpdateRequest:
      title: fileHandleUpdateRequest
      description: ""
      allOf:
      - type: object
        properties:
          newFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          oldFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_sortBy:
      title: sortBy
      type: string
      description: ""
      enum:
      - NAME
      - CREATED_ON
      - MODIFIED_ON
    xml_ns0_entityBundle:
      title: entityBundle
      description: ""
      allOf:
      - type: object
        properties:
          accessControlList:
            $ref: '#/components/schemas/xml_ns0_accessControlList'
          annotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          benefactorAcl:
            $ref: '#/components/schemas/xml_ns0_accessControlList'
          doiAssociation:
            $ref: '#/components/schemas/xml_ns0_doiAssociation'
          entity:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          entityType:
            $ref: '#/components/schemas/xml_ns0_entityType'
          fileHandles:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          fileName:
            type: string
            description: ""
            xml:
              namespace: ""
          hasChildren:
            type: boolean
            description: ""
            xml:
              namespace: ""
          path:
            $ref: '#/components/schemas/xml_ns0_entityPath'
          permissions:
            $ref: '#/components/schemas/xml_ns0_userEntityPermissions'
          restrictionInformation:
            $ref: '#/components/schemas/xml_ns0_restrictionInformationResponse'
          rootWikiId:
            type: string
            description: ""
            xml:
              namespace: ""
          tableBundle:
            $ref: '#/components/schemas/xml_ns0_tableBundle'
          threadCount:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_entityBundleCreate:
      title: entityBundleCreate
      description: ""
      allOf:
      - type: object
        properties:
          accessControlList:
            $ref: '#/components/schemas/xml_ns0_accessControlList'
          annotations:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          entity:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_entityBundleRequest:
      title: entityBundleRequest
      description: ""
      allOf:
      - type: object
        properties:
          includeAccessControlList:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeAnnotations:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeBenefactorACL:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeDOIAssociation:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeEntity:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeEntityPath:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeFileHandles:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeFileName:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeHasChildren:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includePermissions:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeRestrictionInformation:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeRootWikiId:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeTableBundle:
            type: boolean
            description: ""
            xml:
              namespace: ""
          includeThreadCount:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_feature:
      title: feature
      type: string
      description: ""
      enum:
      - DATA_ACCESS_NOTIFICATIONS
      - DATA_ACCESS_AUTO_REVOCATION
    xml_ns0_featureStatus:
      title: featureStatus
      description: ""
      allOf:
      - type: object
        properties:
          enabled:
            type: boolean
            description: ""
            xml:
              namespace: ""
          feature:
            $ref: '#/components/schemas/xml_ns0_feature'
    xml_ns0_fileHandle:
      title: fileHandle
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          contentMd5:
            type: string
            description: ""
            xml:
              namespace: ""
          contentSize:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          contentType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          fileName:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          storageLocationId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_fileHandleResults:
      title: fileHandleResults
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
    xml_ns0_uploadType:
      title: uploadType
      type: string
      description: ""
      enum:
      - S3
      - GOOGLECLOUDSTORAGE
      - SFTP
      - HTTPS
      - PROXYLOCAL
      - NONE
    xml_ns0_formChangeRequest:
      title: formChangeRequest
      description: ""
      allOf:
      - type: object
        properties:
          fileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_formData:
      title: formData
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          dataFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          formDataId:
            type: string
            description: ""
            xml:
              namespace: ""
          groupId:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          submissionStatus:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_formGroup:
      title: formGroup
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          groupId:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_formRejection:
      title: formRejection
      description: ""
      allOf:
      - type: object
        properties:
          reason:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_listRequest:
      title: listRequest
      description: ""
      allOf:
      - type: object
        properties:
          filterByState:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_stateEnum'
          groupId:
            type: string
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_listResponse:
      title: listResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          page:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_formData'
    xml_ns0_stateEnum:
      title: stateEnum
      type: string
      description: ""
      enum:
      - WAITING_FOR_SUBMISSION
      - SUBMITTED_WAITING_FOR_REVIEW
      - ACCEPTED
      - REJECTED
    xml_ns0_changeMessage:
      title: changeMessage
      description: ""
      allOf:
      - type: object
        properties:
          changeNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          changeType:
            $ref: '#/components/schemas/xml_ns0_changeType'
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
          objectType:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          objectVersion:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          timestamp:
            type: string
            description: ""
            xml:
              namespace: ""
          userId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_changeMessages:
      title: changeMessages
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_changeMessage'
    xml_ns0_changeType:
      title: changeType
      type: string
      description: ""
      enum:
      - CREATE
      - UPDATE
      - DELETE
    xml_ns0_fireMessagesResult:
      title: fireMessagesResult
      description: ""
      allOf:
      - type: object
        properties:
          nextChangeNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_messageBundle:
      title: messageBundle
      description: ""
      allOf:
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/xml_ns0_messageToUser'
          status:
            $ref: '#/components/schemas/xml_ns0_messageStatus'
    xml_ns0_messageRecipientSet:
      title: messageRecipientSet
      description: ""
      allOf:
      - type: object
        properties:
          recipients:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_messageStatus:
      title: messageStatus
      description: ""
      allOf:
      - type: object
        properties:
          messageId:
            type: string
            description: ""
            xml:
              namespace: ""
          recipientId:
            type: string
            description: ""
            xml:
              namespace: ""
          status:
            $ref: '#/components/schemas/xml_ns0_messageStatusType'
    xml_ns0_messageStatusType:
      title: messageStatusType
      type: string
      description: ""
      enum:
      - READ
      - UNREAD
      - ARCHIVED
    xml_ns0_messageToUser:
      title: messageToUser
      description: ""
      allOf:
      - type: object
        properties:
          bcc:
            type: string
            description: ""
            xml:
              namespace: ""
          cc:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          fileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          inReplyTo:
            type: string
            description: ""
            xml:
              namespace: ""
          inReplyToRoot:
            type: string
            description: ""
            xml:
              namespace: ""
          isNotificationMessage:
            type: boolean
            description: ""
            xml:
              namespace: ""
          notificationUnsubscribeEndpoint:
            type: string
            description: ""
            xml:
              namespace: ""
          recipients:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          subject:
            type: string
            description: ""
            xml:
              namespace: ""
          to:
            type: string
            description: ""
            xml:
              namespace: ""
          userProfileSettingEndpoint:
            type: string
            description: ""
            xml:
              namespace: ""
          withProfileSettingLink:
            type: boolean
            description: ""
            xml:
              namespace: ""
          withUnsubscribeLink:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_notificationSettingsSignedToken:
      title: notificationSettingsSignedToken
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          expiresOn:
            type: string
            description: ""
            xml:
              namespace: ""
          hmac:
            type: string
            description: ""
            xml:
              namespace: ""
          settings:
            $ref: '#/components/schemas/xml_ns0_settings'
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
          version:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_publishResult:
      title: publishResult
      description: ""
      allOf:
      - type: object
        properties:
          changeNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          success:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_publishResults:
      title: publishResults
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_publishResult'
    xml_ns0_settings:
      title: settings
      description: ""
      allOf:
      - type: object
        properties:
          markEmailedMessagesAsRead:
            type: boolean
            description: ""
            xml:
              namespace: ""
          sendEmailNotifications:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_attachment:
      title: attachment
      description: ""
      allOf:
      - type: object
        properties:
          content:
            type: string
            description: ""
            xml:
              namespace: ""
          content_id:
            type: string
            description: ""
            xml:
              namespace: ""
          content_type:
            type: string
            description: ""
            xml:
              namespace: ""
          disposition:
            type: string
            description: ""
            xml:
              namespace: ""
          file_name:
            type: string
            description: ""
            xml:
              namespace: ""
          size:
            type: string
            description: ""
            xml:
              namespace: ""
          url:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_authorizationCheckHeader:
      title: authorizationCheckHeader
      description: ""
      allOf:
      - type: object
        properties:
          from:
            type: string
            description: ""
            xml:
              namespace: ""
          helo_domain:
            type: string
            description: ""
            xml:
              namespace: ""
          remote_ip:
            type: string
            description: ""
            xml:
              namespace: ""
          size:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          to:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_envelope:
      title: envelope
      description: ""
      allOf:
      - type: object
        properties:
          from:
            type: string
            description: ""
            xml:
              namespace: ""
          helo_domain:
            type: string
            description: ""
            xml:
              namespace: ""
          recipients:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          remote_ip:
            type: string
            description: ""
            xml:
              namespace: ""
          spf:
            type: string
            description: ""
            xml:
              namespace: ""
          to:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_headers:
      title: headers
      description: ""
      allOf:
      - type: object
        properties:
          bcc:
            type: string
            description: ""
            xml:
              namespace: ""
          cc:
            type: string
            description: ""
            xml:
              namespace: ""
          from:
            type: string
            description: ""
            xml:
              namespace: ""
          subject:
            type: string
            description: ""
            xml:
              namespace: ""
          to:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_message:
      title: message
      description: ""
      allOf:
      - type: object
        properties:
          attachments:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_attachment'
          envelope:
            $ref: '#/components/schemas/xml_ns0_envelope'
          headers:
            $ref: '#/components/schemas/xml_ns0_headers'
          html:
            type: string
            description: ""
            xml:
              namespace: ""
          plain:
            type: string
            description: ""
            xml:
              namespace: ""
          reply_plain:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_adminRequest:
      title: adminRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_asyncMigrationRequest:
      title: asyncMigrationRequest
      description: ""
      allOf:
      - type: object
        properties:
          adminRequest:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_idGeneratorExport:
      title: idGeneratorExport
      description: ""
      allOf:
      - type: object
        properties:
          exportScript:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_migrationRangeChecksum:
      title: migrationRangeChecksum
      description: ""
      allOf:
      - type: object
        properties:
          checksum:
            type: string
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          maxid:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          minid:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_migrationType'
    xml_ns0_migrationType:
      title: migrationType
      type: string
      description: ""
      enum:
      - PRINCIPAL
      - GROUP_MEMBERS
      - CREDENTIAL
      - TERMS_OF_USE_AGREEMENT
      - SESSION_TOKEN
      - PRINCIPAL_ALIAS
      - NOTIFICATION_EMAIL
      - USER_PROFILE
      - STORAGE_LOCATION
      - FILE_HANDLE
      - MULTIPART_UPLOAD
      - MULTIPART_UPLOAD_PART_STATE
      - MULTIPART_UPLOAD_COMPOSER_PART_STATE
      - MESSAGE_CONTENT
      - MESSAGE_TO_USER
      - MESSAGE_RECIPIENT
      - MESSAGE_STATUS
      - COMMENT
      - V2_WIKI_PAGE
      - V2_WIKI_ATTACHMENT_RESERVATION
      - V2_WIKI_MARKDOWN
      - V2_WIKI_OWNERS
      - ACTIVITY
      - NODE
      - NODE_REVISION
      - NODE_ACCESS_REQUIRMENT
      - DOCKER_REPOSITORY_NAME
      - DOCKER_COMMIT
      - TEAM
      - MEMBERSHIP_INVITATION_SUBMISSION
      - MEMBERSHIP_REQUEST_SUBMISSION
      - EVALUATION
      - EVALUATION_ROUND
      - EVALUATION_SUBMISSIONS
      - SUBMISSION
      - SUBMISSION_CONTRIBUTOR
      - SUBMISSION_FILE
      - SUBMISSION_STATUS
      - PROJECT_SETTINGS
      - PROJECT_STATS
      - ACCESS_REQUIREMENT
      - ACCESS_REQUIREMENT_REVISION
      - ACCESS_APPROVAL
      - ACL
      - ACL_ACCESS
      - ACL_ACCESS_TYPE
      - FAVORITE
      - TRASH_CAN
      - DOI
      - CHALLENGE
      - CHALLENGE_TEAM
      - COLUMN_MODEL
      - BOUND_COLUMN_OWNER
      - BOUND_COLUMN_ORDINAL
      - TABLE_TRANSACTION
      - TABLE_TRANSACTION_TO_VERSION
      - TABLE_SEQUENCE
      - TABLE_CHANGE
      - QUIZ_RESPONSE
      - VERIFICATION_SUBMISSION
      - VERIFICATION_STATE
      - VERIFICATION_FILE
      - FORUM
      - DISCUSSION_THREAD
      - DISCUSSION_THREAD_VIEW
      - DISCUSSION_THREAD_ENTITY_REFERENCE
      - DISCUSSION_REPLY
      - SUBSCRIPTION
      - BROADCAST_MESSAGE
      - VIEW_TYPE
      - VIEW_SCOPE
      - VIEW_SNAPSHOT
      - AUTHENTICATION_RECEIPT
      - THROTTLE_RULE
      - RESEARCH_PROJECT
      - DATA_ACCESS_REQUEST
      - DATA_ACCESS_SUBMISSION
      - DATA_ACCESS_SUBMISSION_SUBMITTER
      - DATA_ACCESS_SUBMISSION_STATUS
      - DATA_ACCESS_NOTIFICATIONS
      - FORM_GROUP
      - FORM_DATA
      - ORGANIZATION
      - JSON_SCHEMA
      - JSON_SCHEMA_BLOB
      - JSON_SCHEMA_VERSION
      - JSON_SCHEMA_LATEST_VERSION
      - JSON_SCHEMA_DEPENDENCY
      - JSON_SCHEMA_OBJECT_BINDING
      - DOWNLOAD_LIST
      - DOWNLOAD_LIST_ITEM
      - DOWNLOAD_ORDER
      - DOWNLOAD_LIST_2
      - DOWNLOAD_LIST_ITEM_2
      - DATA_TYPE
      - OAUTH_SECTOR_IDENTIFIER
      - OAUTH_CLIENT
      - OAUTH_REFRESH_TOKEN
      - PERSONAL_ACCESS_TOKEN
      - AUTHORIZATION_GRANT
      - SES_NOTIFICATIONS
      - QUARANTINED_EMAILS
      - FEATURE_STATUS
      - CHANGE
    xml_ns0_migrationTypeChecksum:
      title: migrationTypeChecksum
      description: ""
      allOf:
      - type: object
        properties:
          checksum:
            type: string
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          migrationType:
            $ref: '#/components/schemas/xml_ns0_migrationType'
          type:
            $ref: '#/components/schemas/xml_ns0_migrationType'
    xml_ns0_migrationTypeCount:
      title: migrationTypeCount
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          count:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          maxid:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          minid:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_migrationType'
    xml_ns0_migrationTypeCounts:
      title: migrationTypeCounts
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_migrationTypeCount'
    xml_ns0_migrationTypeList:
      title: migrationTypeList
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_migrationType'
    xml_ns0_migrationTypeNames:
      title: migrationTypeNames
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_OAuthClient:
      title: OAuthClient
      description: ""
      allOf:
      - type: object
        properties:
          client_id:
            type: string
            description: ""
            xml:
              namespace: ""
          client_name:
            type: string
            description: ""
            xml:
              namespace: ""
          client_uri:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          policy_uri:
            type: string
            description: ""
            xml:
              namespace: ""
          redirect_uris:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          sector_identifier:
            type: string
            description: ""
            xml:
              namespace: ""
          sector_identifier_uri:
            type: string
            description: ""
            xml:
              namespace: ""
          tos_uri:
            type: string
            description: ""
            xml:
              namespace: ""
          userinfo_signed_response_alg:
            $ref: '#/components/schemas/xml_ns0_OIDCSigningAlgorithm'
          verified:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_OIDCSigningAlgorithm:
      title: OIDCSigningAlgorithm
      type: string
      description: ""
      enum:
      - RS256
    xml_ns0_accountSetupInfo:
      title: accountSetupInfo
      description: ""
      allOf:
      - type: object
        properties:
          emailValidationSignedToken:
            $ref: '#/components/schemas/xml_ns0_emailValidationSignedToken'
          firstName:
            type: string
            description: ""
            xml:
              namespace: ""
          lastName:
            type: string
            description: ""
            xml:
              namespace: ""
          password:
            type: string
            description: ""
            xml:
              namespace: ""
          username:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_aliasCheckRequest:
      title: aliasCheckRequest
      description: ""
      allOf:
      - type: object
        properties:
          alias:
            type: string
            description: ""
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_aliasType'
    xml_ns0_aliasCheckResponse:
      title: aliasCheckResponse
      description: ""
      allOf:
      - type: object
        properties:
          available:
            type: boolean
            description: ""
            xml:
              namespace: ""
          valid:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_aliasList:
      title: aliasList
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_aliasType:
      title: aliasType
      type: string
      description: ""
      enum:
      - USER_NAME
      - TEAM_NAME
      - USER_EMAIL
      - USER_OPEN_ID
      - USER_ORCID
    xml_ns0_emailQuarantineReason:
      title: emailQuarantineReason
      type: string
      description: ""
      enum:
      - PERMANENT_BOUNCE
      - TRANSIENT_BOUNCE
      - COMPLAINT
      - OTHER
    xml_ns0_emailQuarantineStatus:
      title: emailQuarantineStatus
      description: ""
      allOf:
      - type: object
        properties:
          expiration:
            type: string
            description: ""
            xml:
              namespace: ""
          reason:
            $ref: '#/components/schemas/xml_ns0_emailQuarantineReason'
          reasonDetails:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_emailValidationSignedToken:
      title: emailValidationSignedToken
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          email:
            type: string
            description: ""
            xml:
              namespace: ""
          expiresOn:
            type: string
            description: ""
            xml:
              namespace: ""
          hmac:
            type: string
            description: ""
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
          version:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_notificationEmail:
      title: notificationEmail
      description: ""
      allOf:
      - type: object
        properties:
          email:
            type: string
            description: ""
            xml:
              namespace: ""
          quarantineStatus:
            $ref: '#/components/schemas/xml_ns0_emailQuarantineStatus'
    xml_ns0_principalAliasRequest:
      title: principalAliasRequest
      description: ""
      allOf:
      - type: object
        properties:
          alias:
            type: string
            description: ""
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_aliasType'
    xml_ns0_principalAliasResponse:
      title: principalAliasResponse
      description: ""
      allOf:
      - type: object
        properties:
          principalId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_userGroupHeaderResponse:
      title: userGroupHeaderResponse
      description: ""
      allOf:
      - type: object
        properties:
          list:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_userGroupHeader'
    xml_ns0_projectSetting:
      title: projectSetting
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          projectId:
            type: string
            description: ""
            xml:
              namespace: ""
          settingsType:
            $ref: '#/components/schemas/xml_ns0_projectSettingsType'
    xml_ns0_projectSettingsType:
      title: projectSettingsType
      type: string
      description: ""
      enum:
      - upload
      - certification
    xml_ns0_storageLocationSetting:
      title: storageLocationSetting
      description: ""
      allOf:
      - type: object
        properties:
          banner:
            type: string
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          storageLocationId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          uploadType:
            $ref: '#/components/schemas/xml_ns0_uploadType'
    xml_ns0_activity:
      title: activity
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          used:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
    xml_ns0_used:
      title: used
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          wasExecuted:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_queryTableResults:
      title: queryTableResults
      description: ""
      allOf:
      - type: object
        properties:
          headers:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          rows:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_passingRecord:
      title: passingRecord
      description: ""
      allOf:
      - type: object
        properties:
          corrections:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_responseCorrectness'
          passed:
            type: boolean
            description: ""
            xml:
              namespace: ""
          passedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          quizId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          responseId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          score:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          userId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_question:
      title: question
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          docLink:
            type: string
            description: ""
            xml:
              namespace: ""
          helpText:
            type: string
            description: ""
            xml:
              namespace: ""
          prompt:
            type: string
            description: ""
            xml:
              namespace: ""
          questionIndex:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          reference:
            $ref: '#/components/schemas/xml_ns0_wikiPageKey'
    xml_ns0_questionResponse:
      title: questionResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          questionIndex:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_quiz:
      title: quiz
      description: ""
      allOf:
      - type: object
        properties:
          header:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          questions:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
    xml_ns0_quizResponse:
      title: quizResponse
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          questionResponses:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          quizId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_responseCorrectness:
      title: responseCorrectness
      description: ""
      allOf:
      - type: object
        properties:
          isCorrect:
            type: boolean
            description: ""
            xml:
              namespace: ""
          question:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          response:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_downloadStorageReportRequest:
      title: downloadStorageReportRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          reportType:
            $ref: '#/components/schemas/xml_ns0_storageReportType'
    xml_ns0_downloadStorageReportResponse:
      title: downloadStorageReportResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          resultsFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_storageReportType:
      title: storageReportType
      type: string
      description: ""
      enum:
      - ALL_PROJECTS
    xml_ns0_referenceList:
      title: referenceList
      description: ""
      allOf:
      - type: object
        properties:
          references:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_reference'
    xml_ns0_boundObjectType:
      title: boundObjectType
      type: string
      description: ""
      enum:
      - entity
    xml_ns0_createOrganizationRequest:
      title: createOrganizationRequest
      description: ""
      allOf:
      - type: object
        properties:
          organizationName:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_createSchemaRequest:
      title: createSchemaRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          dryRun:
            type: boolean
            description: ""
            xml:
              namespace: ""
          schema:
            $ref: '#/components/schemas/xml_ns0_jsonSchema'
    xml_ns0_createSchemaResponse:
      title: createSchemaResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          newVersionInfo:
            $ref: '#/components/schemas/xml_ns0_jsonSchemaVersionInfo'
          validationSchema:
            $ref: '#/components/schemas/xml_ns0_jsonSchema'
    xml_ns0_getValidationSchemaRequest:
      title: getValidationSchemaRequest
      description: ""
      allOf:
      - type: object
        properties:
          $id:
            type: string
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_getValidationSchemaResponse:
      title: getValidationSchemaResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          validationSchema:
            $ref: '#/components/schemas/xml_ns0_jsonSchema'
    xml_ns0_jsonSchema:
      title: jsonSchema
      description: ""
      allOf:
      - type: object
        properties:
          $id:
            type: string
            description: ""
            xml:
              namespace: ""
          $ref:
            type: string
            description: ""
            xml:
              namespace: ""
          $schema:
            type: string
            description: ""
            xml:
              namespace: ""
          _const:
            type: string
            description: ""
            xml:
              namespace: ""
          _else:
            $ref: '#/components/schemas/xml_ns0_jsonSchema'
          _enum:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          _if:
            $ref: '#/components/schemas/xml_ns0_jsonSchema'
          allOf:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_jsonSchema'
          anyOf:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_jsonSchema'
          definitions:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          format:
            type: string
            description: ""
            xml:
              namespace: ""
          items:
            $ref: '#/components/schemas/xml_ns0_jsonSchema'
          maxLength:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          minLength:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          oneOf:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_jsonSchema'
          pattern:
            type: string
            description: ""
            xml:
              namespace: ""
          properties:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          required:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          source:
            type: string
            description: ""
            xml:
              namespace: ""
          then:
            $ref: '#/components/schemas/xml_ns0_jsonSchema'
          title:
            type: string
            description: ""
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_type'
    xml_ns0_jsonSchemaInfo:
      title: jsonSchemaInfo
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          organizationId:
            type: string
            description: ""
            xml:
              namespace: ""
          organizationName:
            type: string
            description: ""
            xml:
              namespace: ""
          schemaId:
            type: string
            description: ""
            xml:
              namespace: ""
          schemaName:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_jsonSchemaObjectBinding:
      title: jsonSchemaObjectBinding
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          jsonSchemaVersionInfo:
            $ref: '#/components/schemas/xml_ns0_jsonSchemaVersionInfo'
          objectId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          objectType:
            $ref: '#/components/schemas/xml_ns0_boundObjectType'
    xml_ns0_jsonSchemaVersionInfo:
      title: jsonSchemaVersionInfo
      description: ""
      allOf:
      - type: object
        properties:
          $id:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          jsonSHA256Hex:
            type: string
            description: ""
            xml:
              namespace: ""
          organizationId:
            type: string
            description: ""
            xml:
              namespace: ""
          organizationName:
            type: string
            description: ""
            xml:
              namespace: ""
          schemaId:
            type: string
            description: ""
            xml:
              namespace: ""
          schemaName:
            type: string
            description: ""
            xml:
              namespace: ""
          semanticVersion:
            type: string
            description: ""
            xml:
              namespace: ""
          versionId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_listJsonSchemaInfoRequest:
      title: listJsonSchemaInfoRequest
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          organizationName:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_listJsonSchemaInfoResponse:
      title: listJsonSchemaInfoResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          page:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_jsonSchemaInfo'
    xml_ns0_listJsonSchemaVersionInfoRequest:
      title: listJsonSchemaVersionInfoRequest
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          organizationName:
            type: string
            description: ""
            xml:
              namespace: ""
          schemaName:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_listJsonSchemaVersionInfoResponse:
      title: listJsonSchemaVersionInfoResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          page:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_jsonSchemaVersionInfo'
    xml_ns0_listOrganizationsRequest:
      title: listOrganizationsRequest
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_listOrganizationsResponse:
      title: listOrganizationsResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          page:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_organization'
    xml_ns0_listValidationResultsRequest:
      title: listValidationResultsRequest
      description: ""
      allOf:
      - type: object
        properties:
          containerId:
            type: string
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_listValidationResultsResponse:
      title: listValidationResultsResponse
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          page:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_validationResults'
    xml_ns0_objectType:
      title: objectType
      type: string
      description: ""
      enum:
      - entity
    xml_ns0_organization:
      title: organization
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_type:
      title: type
      type: string
      description: ""
      enum:
      - _null
      - _boolean
      - object
      - array
      - number
      - string
      - integer
    xml_ns0_validationException:
      title: validationException
      description: ""
      allOf:
      - type: object
        properties:
          causingExceptions:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_validationException'
          keyword:
            type: string
            description: ""
            xml:
              namespace: ""
          message:
            type: string
            description: ""
            xml:
              namespace: ""
          pointerToViolation:
            type: string
            description: ""
            xml:
              namespace: ""
          schemaLocation:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_validationResults:
      title: validationResults
      description: ""
      allOf:
      - type: object
        properties:
          allValidationMessages:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          isValid:
            type: boolean
            description: ""
            xml:
              namespace: ""
          objectEtag:
            type: string
            description: ""
            xml:
              namespace: ""
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
          objectType:
            $ref: '#/components/schemas/xml_ns0_objectType'
          schema$id:
            type: string
            description: ""
            xml:
              namespace: ""
          validatedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          validationErrorMessage:
            type: string
            description: ""
            xml:
              namespace: ""
          validationException:
            $ref: '#/components/schemas/xml_ns0_validationException'
    xml_ns0_validationSummaryStatistics:
      title: validationSummaryStatistics
      description: ""
      allOf:
      - type: object
        properties:
          containerId:
            type: string
            description: ""
            xml:
              namespace: ""
          generatedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          numberOfInvalidChildren:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          numberOfUnknownChildren:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          numberOfValidChildren:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          totalNumberOfChildren:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_facet:
      title: facet
      description: ""
      allOf:
      - type: object
        properties:
          constraints:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_facetConstraint'
          max:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          min:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_facetTypeNames'
    xml_ns0_facetConstraint:
      title: facetConstraint
      description: ""
      allOf:
      - type: object
        properties:
          count:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          value:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_facetTypeNames:
      title: facetTypeNames
      type: string
      description: ""
      enum:
      - LITERAL
      - DATE
      - CONTINUOUS
    xml_ns0_hit:
      title: hit
      description: ""
      allOf:
      - type: object
        properties:
          alias:
            type: string
            description: ""
            xml:
              namespace: ""
          consortium:
            type: string
            description: ""
            xml:
              namespace: ""
          created_by:
            type: string
            description: ""
            xml:
              namespace: ""
          created_on:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          diagnosis:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          modified_by:
            type: string
            description: ""
            xml:
              namespace: ""
          modified_on:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          node_type:
            type: string
            description: ""
            xml:
              namespace: ""
          organ:
            type: string
            description: ""
            xml:
              namespace: ""
          path:
            $ref: '#/components/schemas/xml_ns0_entityPath'
          tissue:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_searchResults:
      title: searchResults
      description: ""
      allOf:
      - type: object
        properties:
          facets:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_facet'
          found:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          hits:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_hit'
          matchExpression:
            type: string
            description: ""
            xml:
              namespace: ""
          start:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_keyRange:
      title: keyRange
      description: ""
      allOf:
      - type: object
        properties:
          key:
            type: string
            description: ""
            xml:
              namespace: ""
          max:
            type: string
            description: ""
            xml:
              namespace: ""
          min:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_keyValue:
      title: keyValue
      description: ""
      allOf:
      - type: object
        properties:
          key:
            type: string
            description: ""
            xml:
              namespace: ""
          not:
            type: boolean
            description: ""
            xml:
              namespace: ""
          value:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_searchFacetOption:
      title: searchFacetOption
      description: ""
      allOf:
      - type: object
        properties:
          maxResultCount:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          name:
            $ref: '#/components/schemas/xml_ns0_searchFieldName'
          sortType:
            $ref: '#/components/schemas/xml_ns0_searchFacetSort'
    xml_ns0_searchFacetSort:
      title: searchFacetSort
      type: string
      description: ""
      enum:
      - ALPHA
      - COUNT
    xml_ns0_searchFieldName:
      title: searchFieldName
      type: string
      description: ""
      enum:
      - Id
      - Name
      - Description
      - EntityType
      - ModifiedBy
      - ModifiedOn
      - CreatedBy
      - CreatedOn
      - Consortium
      - Diagnosis
      - Organ
      - Tissue
    xml_ns0_searchQuery:
      title: searchQuery
      description: ""
      allOf:
      - type: object
        properties:
          booleanQuery:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_keyValue'
          facetOptions:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_searchFacetOption'
          queryTerm:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          rangeQuery:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_keyRange'
          returnFields:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          size:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          start:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_objectStatisticsRequest:
      title: objectStatisticsRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_objectStatisticsResponse:
      title: objectStatisticsResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_stackStatus:
      title: stackStatus
      description: ""
      allOf:
      - type: object
        properties:
          currentMessage:
            type: string
            description: ""
            xml:
              namespace: ""
          pendingMaintenanceMessage:
            type: string
            description: ""
            xml:
              namespace: ""
          status:
            $ref: '#/components/schemas/xml_ns0_statusEnum'
    xml_ns0_statusEnum:
      title: statusEnum
      type: string
      description: ""
      enum:
      - READ_WRITE
      - READ_ONLY
      - DOWN
    xml_ns0_stsCredentials:
      title: stsCredentials
      description: ""
      allOf:
      - type: object
        properties:
          accessKeyId:
            type: string
            description: ""
            xml:
              namespace: ""
          baseKey:
            type: string
            description: ""
            xml:
              namespace: ""
          bucket:
            type: string
            description: ""
            xml:
              namespace: ""
          expiration:
            type: string
            description: ""
            xml:
              namespace: ""
          secretAccessKey:
            type: string
            description: ""
            xml:
              namespace: ""
          sessionToken:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_sortByType:
      title: sortByType
      type: string
      description: ""
      enum:
      - SUBSCRIPTION_ID
      - SUBSCRIBER_ID
      - OBJECT_ID
      - OBJECT_TYPE
      - CREATED_ON
    xml_ns0_subscriberCount:
      title: subscriberCount
      description: ""
      allOf:
      - type: object
        properties:
          count:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_subscriberPagedResults:
      title: subscriberPagedResults
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          subscribers:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
    xml_ns0_subscription:
      title: subscription
      description: ""
      allOf:
      - type: object
        properties:
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
          objectType:
            $ref: '#/components/schemas/xml_ns0_subscriptionObjectType'
          subscriberId:
            type: string
            description: ""
            xml:
              namespace: ""
          subscriptionId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_subscriptionObjectType:
      title: subscriptionObjectType
      type: string
      description: ""
      enum:
      - FORUM
      - THREAD
      - DATA_ACCESS_SUBMISSION
      - DATA_ACCESS_SUBMISSION_STATUS
    xml_ns0_subscriptionPagedResults:
      title: subscriptionPagedResults
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_subscription'
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_subscriptionRequest:
      title: subscriptionRequest
      description: ""
      allOf:
      - type: object
        properties:
          idList:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          objectType:
            $ref: '#/components/schemas/xml_ns0_subscriptionObjectType'
          sortByType:
            $ref: '#/components/schemas/xml_ns0_sortByType'
          sortDirection:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_topic:
      title: topic
      description: ""
      allOf:
      - type: object
        properties:
          objectId:
            type: string
            description: ""
            xml:
              namespace: ""
          objectType:
            $ref: '#/components/schemas/xml_ns0_subscriptionObjectType'
    xml_ns0_appendableRowSet:
      title: appendableRowSet
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          tableId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_appendableRowSetRequest:
      title: appendableRowSetRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          toAppend:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_columnModel:
      title: columnModel
      description: ""
      allOf:
      - type: object
        properties:
          columnType:
            $ref: '#/components/schemas/xml_ns0_columnType'
          defaultValue:
            type: string
            description: ""
            xml:
              namespace: ""
          enumValues:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          facetType:
            $ref: '#/components/schemas/xml_ns0_facetType'
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          maximumListLength:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          maximumSize:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_columnModelPage:
      title: columnModelPage
      description: ""
      allOf:
      - type: object
        properties:
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_columnModel'
    xml_ns0_columnType:
      title: columnType
      type: string
      description: ""
      enum:
      - STRING
      - DOUBLE
      - INTEGER
      - BOOLEAN
      - DATE
      - FILEHANDLEID
      - ENTITYID
      - SUBMISSIONID
      - EVALUATIONID
      - LINK
      - LARGETEXT
      - USERID
      - STRING_LIST
      - INTEGER_LIST
      - BOOLEAN_LIST
      - DATE_LIST
      - ENTITYID_LIST
      - USERID_LIST
    xml_ns0_csvTableDescriptor:
      title: csvTableDescriptor
      description: ""
      allOf:
      - type: object
        properties:
          escapeCharacter:
            type: string
            description: ""
            xml:
              namespace: ""
          isFirstLineHeader:
            type: boolean
            description: ""
            xml:
              namespace: ""
          lineEnd:
            type: string
            description: ""
            xml:
              namespace: ""
          quoteCharacter:
            type: string
            description: ""
            xml:
              namespace: ""
          separator:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_downloadFromTableRequest:
      title: downloadFromTableRequest
      description: ""
      allOf:
      - $ref: '#/components/schemas/xml_ns0_query'
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          csvTableDescriptor:
            $ref: '#/components/schemas/xml_ns0_csvTableDescriptor'
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          includeRowIdAndRowVersion:
            type: boolean
            description: ""
            xml:
              namespace: ""
          writeHeader:
            type: boolean
            description: ""
            xml:
              namespace: ""
    xml_ns0_downloadFromTableResult:
      title: downloadFromTableResult
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          headers:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_selectColumn'
          resultsFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          tableId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_facetColumnRequest:
      title: facetColumnRequest
      description: ""
      allOf:
      - type: object
        properties:
          columnName:
            type: string
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_facetColumnResult:
      title: facetColumnResult
      description: ""
      allOf:
      - type: object
        properties:
          columnName:
            type: string
            description: ""
            xml:
              namespace: ""
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          facetType:
            $ref: '#/components/schemas/xml_ns0_facetType'
    xml_ns0_facetType:
      title: facetType
      type: string
      description: ""
      enum:
      - enumeration
      - range
    xml_ns0_paginatedColumnModels:
      title: paginatedColumnModels
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_columnModel'
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_query:
      title: query
      description: ""
      allOf:
      - type: object
        properties:
          additionalFilters:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          includeEntityEtag:
            type: boolean
            description: ""
            xml:
              namespace: ""
          limit:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          offset:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          selectedFacets:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          sort:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_sortItem'
          sql:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_queryBundleRequest:
      title: queryBundleRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          partMask:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          query:
            $ref: '#/components/schemas/xml_ns0_query'
    xml_ns0_queryFilter:
      title: queryFilter
      description: ""
      allOf:
      - type: object
    xml_ns0_queryNextPageToken:
      title: queryNextPageToken
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          token:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_queryResult:
      title: queryResult
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            $ref: '#/components/schemas/xml_ns0_queryNextPageToken'
          queryResults:
            $ref: '#/components/schemas/xml_ns0_rowSet'
    xml_ns0_queryResultBundle:
      title: queryResultBundle
      description: ""
      allOf:
      - type: object
        properties:
          columnModels:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_columnModel'
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          facets:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          lastUpdatedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          maxRowsPerPage:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          queryCount:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          queryResult:
            $ref: '#/components/schemas/xml_ns0_queryResult'
          selectColumns:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_selectColumn'
          sumFileSizes:
            $ref: '#/components/schemas/xml_ns0_sumFileSizes'
    xml_ns0_row:
      title: row
      description: ""
      allOf:
      - type: object
        properties:
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          rowId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          values:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_rowReference:
      title: rowReference
      description: ""
      allOf:
      - type: object
        properties:
          rowId:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          versionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_rowReferenceSet:
      title: rowReferenceSet
      description: ""
      allOf:
      - type: object
        properties:
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          headers:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_selectColumn'
          rows:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_rowReference'
          tableId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_rowReferenceSetResults:
      title: rowReferenceSetResults
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          rowReferenceSet:
            $ref: '#/components/schemas/xml_ns0_rowReferenceSet'
    xml_ns0_rowSelection:
      title: rowSelection
      description: ""
      allOf:
      - type: object
        properties:
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          rowIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: integer
          tableId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_rowSet:
      title: rowSet
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          headers:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_selectColumn'
          rows:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_row'
          tableId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_selectColumn:
      title: selectColumn
      description: ""
      allOf:
      - type: object
        properties:
          columnType:
            $ref: '#/components/schemas/xml_ns0_columnType'
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_snapshotRequest:
      title: snapshotRequest
      description: ""
      allOf:
      - type: object
        properties:
          snapshotActivityId:
            type: string
            description: ""
            xml:
              namespace: ""
          snapshotComment:
            type: string
            description: ""
            xml:
              namespace: ""
          snapshotLabel:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_snapshotResponse:
      title: snapshotResponse
      description: ""
      allOf:
      - type: object
        properties:
          snapshotVersionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_sortDirection:
      title: sortDirection
      type: string
      description: ""
      enum:
      - ASC
      - DESC
    xml_ns0_sortItem:
      title: sortItem
      description: ""
      allOf:
      - type: object
        properties:
          column:
            type: string
            description: ""
            xml:
              namespace: ""
          direction:
            $ref: '#/components/schemas/xml_ns0_sortDirection'
    xml_ns0_sqlTransformRequest:
      title: sqlTransformRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          sqlToTransform:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_sqlTransformResponse:
      title: sqlTransformResponse
      description: ""
      allOf:
      - type: object
        properties:
          transformedSql:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_sumFileSizes:
      title: sumFileSizes
      description: ""
      allOf:
      - type: object
        properties:
          greaterThan:
            type: boolean
            description: ""
            xml:
              namespace: ""
          sumFileSizesBytes:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_tableBundle:
      title: tableBundle
      description: ""
      allOf:
      - type: object
        properties:
          columnModels:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_columnModel'
          maxRowsPerPage:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_tableFileHandleResults:
      title: tableFileHandleResults
      description: ""
      allOf:
      - type: object
        properties:
          headers:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_selectColumn'
          rows:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_fileHandleResults'
          tableId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_tableUpdateRequest:
      title: tableUpdateRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_tableUpdateResponse:
      title: tableUpdateResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_tableUpdateTransactionRequest:
      title: tableUpdateTransactionRequest
      description: ""
      allOf:
      - type: object
        properties:
          changes:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          createSnapshot:
            type: boolean
            description: ""
            xml:
              namespace: ""
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          snapshotOptions:
            $ref: '#/components/schemas/xml_ns0_snapshotRequest'
    xml_ns0_tableUpdateTransactionResponse:
      title: tableUpdateTransactionResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          snapshotVersionNumber:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_uploadToTablePreviewRequest:
      title: uploadToTablePreviewRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          csvTableDescriptor:
            $ref: '#/components/schemas/xml_ns0_csvTableDescriptor'
          doFullFileScan:
            type: boolean
            description: ""
            xml:
              namespace: ""
          linesToSkip:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          uploadFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_uploadToTablePreviewResult:
      title: uploadToTablePreviewResult
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          rowsScanned:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          sampleRows:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_row'
          suggestedColumns:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_columnModel'
    xml_ns0_uploadToTableRequest:
      title: uploadToTableRequest
      description: ""
      allOf:
      - type: object
        properties:
          columnIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          csvTableDescriptor:
            $ref: '#/components/schemas/xml_ns0_csvTableDescriptor'
          entityId:
            type: string
            description: ""
            xml:
              namespace: ""
          linesToSkip:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          tableId:
            type: string
            description: ""
            xml:
              namespace: ""
          updateEtag:
            type: string
            description: ""
            xml:
              namespace: ""
          uploadFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_uploadToTableResult:
      title: uploadToTableResult
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          rowsProcessed:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_viewColumnModelRequest:
      title: viewColumnModelRequest
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          viewScope:
            $ref: '#/components/schemas/xml_ns0_viewScope'
    xml_ns0_viewColumnModelResponse:
      title: viewColumnModelResponse
      description: ""
      allOf:
      - type: object
        properties:
          concreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          nextPageToken:
            type: string
            description: ""
            xml:
              namespace: ""
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_columnModel'
    xml_ns0_viewEntityType:
      title: viewEntityType
      type: string
      description: ""
      enum:
      - entityview
      - submissionview
    xml_ns0_viewScope:
      title: viewScope
      description: ""
      allOf:
      - type: object
        properties:
          scope:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          viewEntityType:
            $ref: '#/components/schemas/xml_ns0_viewEntityType'
          viewType:
            $ref: '#/components/schemas/xml_ns0_viewType'
          viewTypeMask:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_viewType:
      title: viewType
      type: string
      description: ""
      enum:
      - file
      - project
      - file_and_table
    xml_ns0_v2WikiHeader:
      title: v2WikiHeader
      description: ""
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          parentId:
            type: string
            description: ""
            xml:
              namespace: ""
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_v2WikiHistorySnapshot:
      title: v2WikiHistorySnapshot
      description: ""
      allOf:
      - type: object
        properties:
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          version:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_v2WikiOrderHint:
      title: v2WikiOrderHint
      description: ""
      allOf:
      - type: object
        properties:
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          idList:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          ownerId:
            type: string
            description: ""
            xml:
              namespace: ""
          ownerObjectType:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_v2WikiPage:
      title: v2WikiPage
      description: ""
      allOf:
      - type: object
        properties:
          attachmentFileHandleIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          markdownFileHandleId:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          parentWikiId:
            type: string
            description: ""
            xml:
              namespace: ""
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_attachmentMetadata:
      title: attachmentMetadata
      description: ""
      allOf:
      - type: object
        properties:
          fileName:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_verificationPagedResults:
      title: verificationPagedResults
      description: ""
      allOf:
      - type: object
        properties:
          results:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_verificationSubmission'
          totalNumberOfResults:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
    xml_ns0_verificationState:
      title: verificationState
      description: ""
      allOf:
      - type: object
        properties:
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          notes:
            type: string
            description: ""
            xml:
              namespace: ""
          reason:
            type: string
            description: ""
            xml:
              namespace: ""
          state:
            $ref: '#/components/schemas/xml_ns0_verificationStateEnum'
    xml_ns0_verificationStateEnum:
      title: verificationStateEnum
      type: string
      description: ""
      enum:
      - SUBMITTED
      - APPROVED
      - REJECTED
      - SUSPENDED
    xml_ns0_verificationSubmission:
      title: verificationSubmission
      description: ""
      allOf:
      - type: object
        properties:
          attachments:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_attachmentMetadata'
          company:
            type: string
            description: ""
            xml:
              namespace: ""
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          emails:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          firstName:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          lastName:
            type: string
            description: ""
            xml:
              namespace: ""
          location:
            type: string
            description: ""
            xml:
              namespace: ""
          notificationEmail:
            type: string
            description: ""
            xml:
              namespace: ""
          orcid:
            type: string
            description: ""
            xml:
              namespace: ""
          stateHistory:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_verificationState'
    xml_ns0_synapseVersionInfo:
      title: synapseVersionInfo
      description: ""
      allOf:
      - type: object
        properties:
          stackInstance:
            type: string
            description: ""
            xml:
              namespace: ""
          version:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_wikiHeader:
      title: wikiHeader
      description: ""
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          parentId:
            type: string
            description: ""
            xml:
              namespace: ""
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_wikiPage:
      title: wikiPage
      description: ""
      allOf:
      - type: object
        properties:
          attachmentFileHandleIds:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          createdBy:
            type: string
            description: ""
            xml:
              namespace: ""
          createdOn:
            type: string
            description: ""
            xml:
              namespace: ""
          etag:
            type: string
            description: ""
            xml:
              namespace: ""
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          markdown:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedBy:
            type: string
            description: ""
            xml:
              namespace: ""
          modifiedOn:
            type: string
            description: ""
            xml:
              namespace: ""
          parentWikiId:
            type: string
            description: ""
            xml:
              namespace: ""
          title:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_ENCODING:
      title: ENCODING
      type: string
      description: ""
      enum:
      - BINARY
    xml_ns0_enumValue:
      title: enumValue
      description: ""
      allOf:
      - type: object
        properties:
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          name:
            type: string
            description: ""
            xml:
              namespace: ""
    xml_ns0_FORMAT:
      title: FORMAT
      type: string
      description: ""
      enum:
      - DATE_TIME
      - DATE
      - TIME
      - UTC_MILLISEC
      - REGEX
      - COLOR
      - STYLE
      - PHONE
      - URI
      - EMAIL
      - IP_ADDRESS
      - IPV6
      - HOST_NAME
    xml_ns0_linkDescription:
      title: linkDescription
      description: ""
      allOf:
      - type: object
        properties:
          href:
            type: string
            description: ""
            xml:
              namespace: ""
          rel:
            $ref: '#/components/schemas/xml_ns0_linkRel'
    xml_ns0_linkRel:
      title: linkRel
      type: string
      description: ""
      enum:
      - SELF
      - FULL
      - DESCRIBED_BY
      - ROOT
    xml_ns0_objectSchema:
      title: objectSchema
      description: ""
      allOf:
      - type: object
        properties:
          $recursiveAnchor:
            type: boolean
            description: ""
            xml:
              namespace: ""
          $recursiveRef:
            type: string
            description: ""
            xml:
              namespace: ""
          additionalItems:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          contentEncoding:
            $ref: '#/components/schemas/xml_ns0_ENCODING'
          default:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          defaultConcreteType:
            type: string
            description: ""
            xml:
              namespace: ""
          dependencies:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: string
          description:
            type: string
            description: ""
            xml:
              namespace: ""
          disallow:
            $ref: '#/components/schemas/xml_ns0_TYPE'
          divisibleBy:
            $ref: '#/components/schemas/xml_ns0_number'
          enum:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_enumValue'
          exclusiveMaximum:
            $ref: '#/components/schemas/xml_ns0_number'
          exclusiveMinimum:
            $ref: '#/components/schemas/xml_ns0_number'
          extends:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          format:
            $ref: '#/components/schemas/xml_ns0_FORMAT'
          id:
            type: string
            description: ""
            xml:
              namespace: ""
          implements:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              type: object
              properties: {}
          items:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          key:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
          links:
            type: array
            description: ""
            xml:
              namespace: ""
            items:
              $ref: '#/components/schemas/xml_ns0_linkDescription'
          maxItems:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          maxLength:
            type: integer
            description: ""
            format: int32
            xml:
              namespace: ""
          maximum:
            $ref: '#/components/schemas/xml_ns0_number'
          minItems:
            type: integer
            description: ""
            format: int64
            xml:
              namespace: ""
          minLength:
            type: integer
            description: ""
            format: int32
            xml:
              namespace: ""
          minimum:
            $ref: '#/components/schemas/xml_ns0_number'
          name:
            type: string
            description: ""
            xml:
              namespace: ""
          pattern:
            type: string
            description: ""
            xml:
              namespace: ""
          ref:
            type: string
            description: ""
            xml:
              namespace: ""
          schema:
            type: string
            description: ""
            xml:
              namespace: ""
          title:
            type: string
            description: ""
            xml:
              namespace: ""
          type:
            $ref: '#/components/schemas/xml_ns0_TYPE'
          value:
            type: object
            properties: {}
            description: ""
            xml:
              namespace: ""
    xml_ns0_TYPE:
      title: TYPE
      type: string
      description: ""
      enum:
      - STRING
      - NUMBER
      - INTEGER
      - BOOLEAN
      - OBJECT
      - ARRAY
      - TUPLE_ARRAY_MAP
      - MAP
      - NULL
      - ANY
      - INTERFACE
    xml_ns0_JSONEntity:
      title: JSONEntity
      description: ""
      allOf:
      - type: object
